{"version":3,"sources":["admin.js","contributors.js","main.js","userProfileSection.js","postAceInit.js","aceInitialized.js","handleClientMessage.js","helper.js","shared.js","syncData.js"],"names":["exports","moduleList","documentReady","hooks","context","cb","socket","loc","document","location","port","protocol","url","hostname","pathComponents","pathname","split","baseURL","slice","length","join","resource","substring","room","io","connect","path","on","data","shared","setFormData","$","getFormData","emit","alert","console","log","each","index","value","append","pad_users_data","userId","email","username","createDate","lastSeenDate","verifiedDate","pad","this","contributors","getHtmlOfUsersList","img","anonymousHandler","about","homepage","seenStatus","style","undefined","getValidUrl","increaseToOnlineAnonymous","selectorOn","anonymouseCount","attr","idsDataArray","indexOf","push","newAnonymouseCount","parseInt","children","text","decreaseFromOnlineAnonymous","grep","remove","increaseToOfflineAnonymous","selectorOff","idsData","createOfflineAnonymousElement","userElement","userListHtml","offlineListSelector","userSelector","insertBefore","prepend","moveOnlineUserToOffline","createHTMLforUserList","total","online","padId","userVerify","html","borderStyle","reverse","key","increaseUserFromList","$image","prependTo","hide","slideDown","decreaseUserFromList","animate","opacity","selectorUser","appendTo","imageUrl","Date","getTime","css","background-position","background-image","background-repeat","background-size","manageOnlineOfflineUsers","allUsersList","onlineUsers","currentUserId","lastPage","onlineListSelector","display","e","userName","margin-top","error","getCustomDate","offlinesDateSelector","idsDataOffArray","selectorOfflinesDate","createOnlineUserElementInUserList","user","titleOfContributors","insertAfter","isThereOnlineAnonymous","selector","checkUserExistInOnlineAnonymous","createOnlineAnonymousElement","removeUserElementInUserList","paginateContributors","containerPaginationList","result","profileForm","showModal","addClass","setTimeout","focus","$form","unindexedArray","serializeArray","indexedArray","map","n","i","name","handleOnCloseOverlay","getUserId","getPadId","msg","localStorage","setItem","innerdocbody","contents","find","off","removeEventListener","ep_profile_modalForm_name","includes","getItem","ep_profile_modalForm_about_yourself","ep_profile_modalForm_homepage","messageChatText","target","time","message","type","action","collabClient","sendMessage","hideFormModalOverlay","removeClass","resetModal","show","initModal","clientVars","modal","tmpl","currentFs","nextFs","previousFs","animating","click","border","parent","next","prev","resetAllProfileImage","sendFormDataToServer","submitHandle","fd","FormData","files","ajax","contentType","processData","beforeSend","helper","refreshLoadingImage","xhr","refreshUserImage","replace","status","gritter","add","title","sticky","class_name","success","response","uploadImg","val","userLogin","nextHandler","currentSection","loginByEmailAndUsernameWithoutValidation","userEmail","isEmail","oldText","sendEmailVerification","userLink","isValid","nextSelection","select","keyCode","preventDefault","URL","createObjectURL","allEventListener","event","which","usersProfileSection","initiate","initiateListeners","avatarListerner","showGeneralOverlay","hideGeneralOverlay","href","userIdParam","postAceInit","hook","updateUserInfo","colorId","window","userStatus","hasClass","page","pageLoaded","getConnectedUsers","verificationStatus","dummy","createElement","body","appendChild","execCommand","removeChild","ep_profile_modal","syncData","resetProfileModalFields","userLogout","loginByEmailAndUsername","aceInitialized","element","eventName","eventHandler","addEventListener","attachEvent","bindEvent","trigger","usersListHTML","contributed_authors_count","verified","handleClientMessage","handleClientMessage_USER_NEWINFO","payload","handleClientMessage_USER_LEAVE","handleClientMessage_CUSTOM","totalUserCount","refreshGeneralImage","logoutCssFix","resetGeneralFields","onlineAnonymousSelector","syncAllFormsData","syncGeneralFormsData","avatar","margin","box-shadow","background-color","rocketChatOnlineUser","scrollDownToLastChatText","$element","scrollTop","scrollHeight","duration","queue","test","getMonthName","monthNumber","sendSignOutMessage","addTextChatMessage","authorClass","c","charCodeAt","minutes","getMinutes","hours","getHours","suggestData","isUsername","newUrl","decodeURIComponent","trim","getCustomeFormatDate","date","usernameBox"],"mappings":"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","file":"ep.profile.modal.mini.js","sourcesContent":["/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n\nconst documentReady = (() => {\n  const documentReady = (hooks, context, cb) => {\n    let socket;\n    const loc = document.location;\n    const port = loc.port === '' ? (loc.protocol === 'https:' ? 443 : 80) : loc.port;\n    const url = `${loc.protocol}//${loc.hostname}:${port}/`;\n    const pathComponents = location.pathname.split('/');\n    // Strip admin/plugins\n    const baseURL = `${pathComponents.slice(0, pathComponents.length - 2).join('/')}/`;\n    const resource = `${baseURL.substring(1)}socket.io`;\n\n    const room = `${url}pluginfw/admin/ep_profile_modal`;\n\n    switch (context) {\n      case 'admin/ep_profile_modal': {\n        // connect\n        socket = io.connect(room, {path: `${baseURL}socket.io`, resource});\n        socket.on('load-settings-result', (data) => {\n          shared.setFormData($('#settings-form'), data);\n        });\n\n        $('#save-settings').on('click', () => {\n          const data = shared.getFormData($('#settings-form'));\n          socket.emit('save-settings', data);\n          alert('Succesfully saved.');\n        });\n\n        socket.emit('load-settings');\n        break;\n      }\n      case 'admin/ep_profile_modal_analytics': {\n        socket = io.connect(room, {path: `${baseURL}socket.io`, resource});\n\n\n        socket.on('load-pads-result', (data) => {\n          console.log('load-pads', data);\n          $.each(data, (index, value) => {\n            $('#pads').append(`<option value=\"${value}\">${value}</option>`);\n          });\n        });\n        socket.on('load-analytics-result', (data) => {\n          console.log('load-analytics', data);\n          $.each(data.pad_users_data, (index, value) => {\n            if (value.userId) {\n              $('#users').append(`\n              <tr style=\"height: 0;\">\n                <td>${value.email || value.userId}</td>\n                <td>${value.username}</td>\n                <td>${value.createDate}</td>\n                <td>${value.lastSeenDate}</td>\n                <td>${value.verifiedDate || '-'}</td>\n                <td>${(value.verified) ? 'Verified' : 'unconfirmed'}</td>\n              </tr>\n              `);\n            }\n          });\n        });\n\n\n        $('#pads').on('change', function () {\n          socket.emit('load-analytics', {pad: this.value});\n        });\n\n        socket.emit('load-pads');\n        break;\n      }\n      default: {\n        return [];\n      }\n    }\n  };\n  return documentReady;\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n\nconst contributors = (() => {\n  const defaultImg = '../static/plugins/ep_profile_modal/static/dist/img/user.png';\n\n  const createHTMLforUserList = (total, online, padId, userVerify) => { // generate avatar too\n    let html = \"<div id='usersIconList' class='ep_profile_inlineAvatars'>\";\n    let style;\n    let borderStyle = '';\n    $.each(online.reverse(), (key, value) => {\n      style = `background: url(/static/getUserProfileImage/${\n        value.userId}/${padId}) no-repeat 50% 50% ; background-size : 28px;background-color: #fff;`;\n      if (userVerify) {\n        borderStyle = 'box-shadow: 0px 0px 1px 1px rgba(38,121,255,1);margin: 1px;';\n      } else { borderStyle = ''; }\n\n      style += borderStyle;\n      html += `<div class='avatar' data-userId=\"${value.userId}\" data-id=\"user_${\n        value.userId}\"  id=\"user_${value.userId}\" ><div data-userId=\"${\n        value.userId}\"  class='avatarImg' style='${\n        style}' data-id=\"user_${value.userId}\"></div></div>`;\n    });\n    html += ' </div>';\n    return `${html}<span class='slash_profile'>⧸</span><span \n    id='userlist_count' class='userlist_count'>${total}</span> <input  value='Share'  \n      id='ep_profile_modal_share' type='button' class='ep_profile_modal_share'>`;\n  };\n\n  const increaseUserFromList = (userId, padId) => {\n    const style = `background: url(/static/getUserProfileImage/${\n      userId}/${padId}) no-repeat 50% 50% ; background-size : 26px;background-color: #fff;`;\n\n\n    if (!$(`.avatar[data-id=\"user_${userId}\"]`).length) {\n      const $image = $(`<div class='avatar' data-userId=\"${\n        userId}\"  data-id=\"user_${userId}\" id=\"user_${\n        userId}\" ><div class='avatarImg' data-userId=\"${\n        userId}\"  data-id=\"user_${userId}\" style='${style}'></div></div>`);\n      $image.prependTo('#usersIconList');\n      $image.hide().slideDown(200);\n    }\n  };\n\n\n  // @todo rewrite and use template\n  const getHtmlOfUsersList = (userId, username,\n      img, anonymousHandler, about, homepage, seenStatus) => {\n    about = about || '';\n    homepage = homepage || '';\n    let style;\n    if (anonymousHandler && username === 'Anonymous') {\n      style = `background: url(${img}) no-repeat 50% 50% ; background-size : 69px ;`;\n\n      return (`<div  data-user-ids='${userId\n      }' data-anonymouseCount='1' data-id='user_list_${anonymousHandler\n      }' class='ep_profile_user_row'>` +\n`<div style='${style\n}' class='ep_profile_user_img' id='ep_profile_user_img'></div>` +\n'<div class=\\'ep_profile_user_list_profile_userDesc\\'>' +\n`<div class='ep_profile_user_list_username'>\n<div class='ep_profile_user_list_username_text' id='ep_profile_users_profile_name'>${\n        username}</div>` +\n`<div class='ep_profile_contributor_status'>${seenStatus}</div>` +\n'</div>' +\n`<p class='ep_profile_user_list_profile_desc' id='ep_profile_users_profile_desc'>\n${about}</p>` +\n'</div> </div>');\n    } else {\n      style = `background: url(${img}) no-repeat 50% 50% ; background-size : 69px ;`;\n      return (`<div data-id='user_list_${userId}' class='ep_profile_user_row'>` +\n`<div style='${style}' class='ep_profile_user_img'  id='ep_profile_user_img'></div>` +\n'<div class=\\'ep_profile_user_list_profile_userDesc\\'>' +\n`<div class='ep_profile_user_list_username'>\n<div class='ep_profile_user_list_username_text' id='ep_profile_users_profile_name'>\n${username}</div>` +\n`<a target='_blank' style='\n${(homepage === '' || homepage === '#' || homepage === undefined || homepage == null)\n          ? 'display : none' : ''}'  class='ep_profile_contributor_link_container' title='\n        ${shared.getValidUrl(homepage)}' href='${shared.getValidUrl(homepage)}'> </a>` +\n`<div class='ep_profile_contributor_status'>${seenStatus}</div>` +\n'</div>' +\n`<p class='ep_profile_user_list_profile_desc' id='ep_profile_users_profile_desc'>${about}</p>` +\n'</div> </div>');\n    }\n  };\n  const increaseToOnlineAnonymous = (selectorOn, userId) => {\n    const anonymouseCount = selectorOn.attr('data-anonymouseCount');\n    const idsData = selectorOn.attr('data-user-ids');\n    const idsDataArray = idsData.split(',');\n    if (idsDataArray.indexOf(userId) === -1) {\n      idsDataArray.push(userId);\n      selectorOn.attr('data-user-ids', idsDataArray.join(','));\n      const newAnonymouseCount = parseInt(anonymouseCount) + 1;\n      selectorOn.attr('data-anonymouseCount', newAnonymouseCount);\n      selectorOn.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text').text(`Anonymous ×${newAnonymouseCount}`);\n    }\n  };\n\n  const manageOnlineOfflineUsers = (allUsersList, onlineUsers, currentUserId, lastPage) => {\n    const onlineListSelector = $('#ep_profile_user_list_container');\n    const offlineListSelector = $('#ep_profile_user_list_container_off');\n    if (lastPage) {\n      $('#ep_profile_modal_load_more_contributors').css({display: 'none'});\n    } else {\n      $('#ep_profile_modal_load_more_contributors').css({display: 'block'});\n    }\n    // offline_list_selector.empty();\n    $.each(allUsersList, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId === value.userId);\n      if (result.length) { // online\n        if (value.userName === 'Anonymous') {\n          const selectorOn = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n\n          if (selectorOn.length) {\n            increaseToOnlineAnonymous(selectorOn, value.userId);\n          } else {\n            const userListHtml = getHtmlOfUsersList(\n                value.userId, value.userName, value.imageUrl, 'on_Anonymous',\n                value.about, value.homepage, 'Online');\n            onlineListSelector.append(userListHtml);\n          }\n          if (currentUserId === value.userId) {\n            $(\".ep_profile_user_row[data-id='user_list_on_Anonymous']\").css(\n                {'margin-top': '28px'});\n          }\n        } else {\n          if (!$(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).length) {\n            const userListHtml = getHtmlOfUsersList(value.userId, value.userName,\n                value.imageUrl, false, value.about, value.homepage, 'Online');\n            try {\n              onlineListSelector.append(userListHtml);\n            } catch (error) {\n              console.log(error);\n            }\n          } else if (currentUserId === value.userId) {\n            $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).prependTo(\n                onlineListSelector);\n          } else {\n            $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).appendTo(\n                onlineListSelector);\n          }\n          if (currentUserId === value.userId) {\n            $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).css(\n                {'margin-top': '28px'});\n          }\n        }\n      }\n      // offline\n      if (value.lastSeenDate !== '') {\n        if (value.userName !== 'Anonymous') {\n          if (!$(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).length) {\n            console.log('value', value);\n            const userListHtml = getHtmlOfUsersList(\n                value.userId, value.userName, value.imageUrl,\n                false, value.about, value.homepage, shared.getCustomDate(value.lastSeenDate));\n            const offlinesDateSelector = $('#ep_profile_user_list_offline');\n            if (offlinesDateSelector.length) {\n              offlinesDateSelector.append(userListHtml);\n            } else {\n              $('#ep_profile_user_list_container_off').append(\n                  `<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'>\n                ${userListHtml}</div>`\n              );\n            }\n          } else {\n            $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).appendTo(\n                offlineListSelector);\n          }\n        }\n      }\n\n\n      // }\n    });\n\n    // just for anonymouse to be end of list\n    $.each(allUsersList, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId === value.userId);\n      if (!result.length) { // offline\n        if (value.userName === 'Anonymous') {\n          const selectorOff = $('.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]');\n          if (selectorOff.length) {\n            const anonymouseCount = selectorOff.attr('data-anonymouseCount');\n            const newAnonymouseCount = parseInt(anonymouseCount) + 1;\n\n            const idsDataOff = selectorOff.attr('data-user-ids');\n            const idsDataOffArray = idsDataOff.split(',');\n            idsDataOffArray.push(value.userId);\n            selectorOff.attr('data-user-ids', idsDataOffArray.join(','));\n\n            selectorOff.attr('data-anonymouseCount', newAnonymouseCount);\n            selectorOff.children(\n                '.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username'\n            ).text(`Anonymous ×${newAnonymouseCount}`);\n          } else {\n            const userListHtml = getHtmlOfUsersList(\n                value.userId, 'Anonymous', value.imageUrl, 'off_Anonymous',\n                value.about, value.homepage, shared.getCustomDate(value.lastSeenDate));\n            const selectorOfflinesDate = $('#ep_profile_user_list_offline');\n            if (selectorOfflinesDate.length) {\n              selectorOfflinesDate.append(userListHtml);\n            } else {\n              $('#ep_profile_user_list_container_off').append(\n                  `<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'>\n                ${userListHtml}</div>`\n              );\n            }\n          }\n        }\n      }\n    });\n  };\n\n\n  const decreaseFromOnlineAnonymous = (selectorOn, userId) => {\n    const anonymouseCount = selectorOn.attr('data-anonymouseCount');\n    const idsData = selectorOn.attr('data-user-ids');\n    let idsDataArray = idsData.split(',');\n\n\n    idsDataArray = $.grep(idsDataArray, (value) => value !== userId);\n\n\n    selectorOn.attr('data-user-ids', idsDataArray.join(','));\n    const newAnonymouseCount = parseInt(anonymouseCount) - 1;\n    selectorOn.attr('data-anonymouseCount', newAnonymouseCount);\n    if (newAnonymouseCount > 1) {\n      selectorOn.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text').text(`Anonymous ×${newAnonymouseCount}`);\n    } else {\n      selectorOn.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text').text('Anonymous');\n    }\n\n    if (newAnonymouseCount < 1) {\n      selectorOn.remove();\n    }\n    return newAnonymouseCount;\n  };\n\n\n  const increaseToOfflineAnonymous = (selectorOff, userId) => {\n    const anonymouseCount = selectorOff.attr('data-anonymouseCount');\n    let idsData = selectorOff.attr('data-user-ids');\n\n    idsData = $.grep(idsData, (value) => value !== userId);\n\n    selectorOff.attr('data-user-ids', idsData);\n    const newAnonymouseCount = parseInt(anonymouseCount) + 1;\n    selectorOff.attr('data-anonymouseCount', newAnonymouseCount);\n    selectorOff.children('.ep_profile_user_list_profile_userDesc').children(\n        '.ep_profile_user_list_username').children('.ep_profile_user_list_username_text')\n        .text(`Anonymous ×${newAnonymouseCount}`);\n  };\n\n\n  const createOfflineAnonymousElement = (userId, img, about, homepage, userElement) => {\n    const userListHtml = getHtmlOfUsersList(\n        userId, 'Anonymous', img, 'off_Anonymous', about, homepage, 'Today');\n    const offlineListSelector = $('#ep_profile_user_list_offline');\n    if (offlineListSelector.length) {\n      // because need anonymous offline be last one\n      const userSelector = $(\".ep_profile_user_row[data-id='user_list_off_Anonymous']\");\n      if (userSelector.length) {\n        userElement.insertBefore(userSelector);\n      } else {\n        offlineListSelector.append(userElement);\n      }\n    } else {\n      const offlineContainer = $('#ep_profile_user_list_container_off');\n      offlineContainer.prepend(\n          \"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'></div>\");\n      offlineListSelector.append(userListHtml);\n    }\n  };\n\n\n  const createOnlineUserElementInUserList = (userId, userName, img, currentUserId, user) => {\n    const userSelector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (!userSelector.length) {\n      const userListHtml = getHtmlOfUsersList(\n          userId, userName, img, false, user.about, user.homepage, 'Online');\n      if (userId === currentUserId) { // it is owner\n        const titleOfContributors = $('#ep_profile_user_list_date_title');\n        if (titleOfContributors.length) {\n          $(userListHtml).insertAfter(titleOfContributors);\n        } else {\n          $('#ep_profile_user_list_container').prepend(userListHtml);\n        }\n      } else {\n        $('#ep_profile_user_list_container').append(userListHtml);\n      }\n    } else {\n      userSelector.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_username').children('.ep_profile_user_list_username_text')\n          .text(userName);\n      userSelector.children('.ep_profile_user_img').css({'background-position': '50% 50%',\n        'background-image': `url(${img})`,\n        'background-repeat': 'no-repeat', 'background-size': '69px'});\n    }\n  };\n\n  const isThereOnlineAnonymous = () => {\n    const selector = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n    if (selector.length) { return selector; } else { return false; }\n  };\n  const checkUserExistInOnlineAnonymous = (selectorOn, userId) => {\n    const idsData = selectorOn.attr('data-user-ids');\n    const idsDataArray = idsData.split(',');\n    if (idsDataArray.indexOf(userId) === -1) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const createOnlineAnonymousElement = (userId, userName, imageUrl, user) => {\n    const onlineListSelector = $('#ep_profile_user_list_container');\n    const userListHtml = getHtmlOfUsersList(userId, userName,\n        imageUrl, 'on_Anonymous', user.about, user.homepage, 'Online');\n    onlineListSelector.append(userListHtml);\n  };\n\n  const moveOnlineUserToOffline = (userElement) => {\n    const offlineListSelector = $('#ep_profile_user_list_offline');\n    if (offlineListSelector.length) {\n      // because need anonymous offline be last one\n      const userSelector = $(\".ep_profile_user_row[data-id='user_list_off_Anonymous']\");\n      if (userSelector.length) {\n        userElement.insertBefore(userSelector);\n      } else {\n        offlineListSelector.append(userElement);\n      }\n    } else {\n      const offlineContainer = $('#ep_profile_user_list_container_off');\n      offlineContainer.prepend(\n          \"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'></div>\");\n      offlineListSelector.append(userElement);\n    }\n\n    userElement.children('.ep_profile_user_list_profile_userDesc').children(\n        '.ep_profile_user_list_username').children(\n        '.ep_profile_contributor_status').text(\n        'Last seen today');\n  };\n\n  const decreaseUserFromList = function (userId, padId) {\n    $(`.avatar[data-id=\"user_${userId}\"]`).animate({opacity: 0}, 1000, 'linear', function () {\n      $(this).remove();\n    }\n    );\n\n    const selectorUser = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (selectorUser.length) {\n      moveOnlineUserToOffline(selectorUser);\n    } else {\n      const selectorOn = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n      if (selectorOn.length) {\n        const selectorOff = $('.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]');\n        decreaseFromOnlineAnonymous(selectorOn, userId);\n        if (selectorOff.length) {\n          increaseToOfflineAnonymous(selectorOff, userId);\n        } else {\n          createOfflineAnonymousElement(userId, defaultImg, null, null, selectorUser);\n        }\n      } else {\n        let offlineListSelector = $('#ep_profile_user_list_offline');\n        if (offlineListSelector.length) {\n          offlineListSelector.append($(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`));\n        } else {\n          const offlineContainer = $('#ep_profile_user_list_container_off');\n          offlineContainer.prepend(\n              `<div class=\"ep_profile_user_list_date_title\" \n              id=\"ep_profile_user_list_offline\"></div>`\n          );\n          offlineListSelector = $('#ep_profile_user_list_offline');\n          $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`).appendTo(offlineListSelector);\n        }\n      }\n    }\n\n    // user img update\n    const imageUrl = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const userSelector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (userSelector.length) {\n      userSelector.children('.ep_profile_user_img').css({'background-position': '50% 50%',\n        'background-image':\n        `url(${imageUrl})`, 'background-repeat': 'no-repeat', 'background-size': '69px'});\n    }\n  };\n\n  const removeUserElementInUserList = (userId) => {\n    $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`).remove();\n  };\n\n\n  const paginateContributors = (allUsersList, onlineUsers, currentUserId, lastPage) => {\n    const containerPaginationList = $('#ep_profile_user_list_container_pagination');\n    if (lastPage) {\n      $('#ep_profile_modal_load_more_contributors').css({display: 'none'});\n    }\n    $.each(allUsersList, (key, value) => {\n      const result = $.grep(onlineUsers, (e) => e.userId === value.userId);\n\n      if (value.lastSeenDate !== '' && value.userName !== 'Anonymous') {\n        const userListHtml = getHtmlOfUsersList(\n            value.userId, value.userName,\n            value.imageUrl, false, value.about, value.homepage,\n            (result.length) ? 'Online' : shared.getCustomDate(value.lastSeenDate)\n        );\n\n        containerPaginationList.append(userListHtml);\n      }\n\n      if (result.length) { // online\n        if (value.userName === 'Anonymous') {\n          const selectorOn = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n\n          if (selectorOn.length) {\n            increaseToOnlineAnonymous(selectorOn, value.userId);\n          } else {\n            const userListHtml = getHtmlOfUsersList(\n                value.userId, value.userName, value.imageUrl,\n                'on_Anonymous', value.about, value.homepage, 'Online');\n            containerPaginationList.append(userListHtml);\n          }\n          if (currentUserId === value.userId) {\n            $(\".ep_profile_user_row[data-id='user_list_on_Anonymous']\").css(\n                {'margin-top': '28px'});\n          }\n        }\n      }\n    });\n\n    // just for anonymouse to be end of list\n    $.each(allUsersList, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId === value.userId);\n      if (!result.length) { // offline\n        if (value.userName === 'Anonymous') {\n          const selectorOff = $('.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]');\n          if (selectorOff.length) {\n            const anonymouseCount = selectorOff.attr('data-anonymouseCount');\n            const newAnonymouseCount = parseInt(anonymouseCount) + 1;\n\n            const idsDataOff = selectorOff.attr('data-user-ids');\n            const idsDataOffArray = idsDataOff.split(',');\n            idsDataOffArray.push(value.userId);\n            selectorOff.attr('data-user-ids', idsDataOffArray.join(','));\n\n            selectorOff.attr('data-anonymouseCount', newAnonymouseCount);\n            selectorOff.children('.ep_profile_user_list_profile_userDesc').children(\n                '.ep_profile_user_list_username').text(`Anonymous ×${newAnonymouseCount}`);\n          } else {\n            const userListHtml = getHtmlOfUsersList(\n                value.userId, 'Anonymous', value.imageUrl,\n                'off_Anonymous', value.about, value.homepage);\n            containerPaginationList.append(userListHtml);\n          }\n        }\n      }\n    });\n  };\n  return {\n    createHTMLforUserList,\n    increaseUserFromList,\n    decreaseUserFromList,\n    moveOnlineUserToOffline,\n    decreaseFromOnlineAnonymous,\n    increaseToOfflineAnonymous,\n    createOfflineAnonymousElement,\n    manageOnlineOfflineUsers,\n    increaseToOnlineAnonymous,\n    createOnlineUserElementInUserList,\n    isThereOnlineAnonymous,\n    checkUserExistInOnlineAnonymous,\n    createOnlineAnonymousElement,\n    removeUserElementInUserList,\n    paginateContributors,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n\n// var shared = require('../shared');\n// var helper = require('../helper');\n\nconst profileForm = (() => {\n  const showModal = () => {\n    $('#ep_profile_formModal').addClass('ep_profile_formModal_show');\n    $('#ep_profile_formModal_overlay').addClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_formModal_overlay').css({display: 'block'});\n    setTimeout(() => { $('#ep_profile_modalForm_name').focus(); }, 1000);\n  };\n\n  const allEventListener = () => {\n    const padOuter = $('iframe[name=\"ace_outer\"]').contents();\n    const padInner = padOuter.find('iframe[name=\"ace_inner\"]');\n    const innerdocbody = padInner.contents().find('#innerdocbody');\n\n    innerdocbody.on('keypress', (e) => {\n      showModal();\n    });\n    innerdocbody.on('mousedown', (event) => {\n      if (event.which === 1) {\n        showModal();\n      }\n    });\n  };\n\n\n  const removeEventListener = () => {\n    const padOuter = $('iframe[name=\"ace_outer\"]').contents();\n    const padInner = padOuter.find('iframe[name=\"ace_inner\"]');\n    const innerdocbody = padInner.contents().find('#innerdocbody');\n    innerdocbody.off('keypress');\n    innerdocbody.off('mousedown');\n  };\n\n  const getFormData = ($form) => {\n    const unindexedArray = $form.serializeArray();\n    const indexedArray = {};\n\n    $.map(unindexedArray, (n, i) => {\n      indexedArray[n.name] = n.value;\n    });\n\n    return indexedArray;\n  };\n  const handleOnCloseOverlay = () => {\n    const userId = pad.getUserId();\n    const padId = pad.getPadId();\n    const $form = $('#ep_profile_formModal_msform');\n    const data = getFormData($form);\n    const msg = {};\n    localStorage.setItem('formPassed', 'yes');\n    removeEventListener();\n    if (data.ep_profile_modalForm_name === '' ||\n    ['', null, undefined].includes(localStorage.getItem('formStatus'))) { return false; }\n    let text = `Please welcome ${data.ep_profile_modalForm_name}`;\n    if (data.ep_profile_modalForm_about_yourself !== '') {\n      text += `, ${data.ep_profile_modalForm_about_yourself}`;\n    }\n    if (data.ep_profile_modalForm_homepage !== '') {\n      const url = shared.getValidUrl(data.ep_profile_modalForm_homepage);\n      text += `, ${url}`;\n    }\n\n    msg.messageChatText = `${text}`;\n    msg.target = 'profile';\n    msg.userId = userId;\n    msg.time = new Date();\n\n    const message = {\n      type: 'ep_rocketchat',\n      action: 'ep_rocketchat_sendMessageToChat_login',\n      userId,\n      data: msg,\n      padId,\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const hideFormModalOverlay = () => {\n    $('#ep_profile_formModal_overlay').removeClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_formModal_overlay').css({display: 'none'});\n\n    handleOnCloseOverlay();\n  };\n  const resetModal = function () {\n    const fieldsets = $('#ep_profile_formModal_msform fieldset');\n    fieldsets.each(function (index) {\n      if (index === 0) $(this).show(); else $(this).hide();\n    });\n  };\n\n  const initModal = function (clientVars) {\n    const modal = $('#ep_profile_formModal_script').tmpl(clientVars);\n    $('body').append(modal);\n\n    // jQuery time\n    let currentFs, nextFs, previousFs; // fieldsets\n    let animating; // flag to prevent quick multi-click glitches\n\n\n    $('.skip').click(function () {\n      if (animating) return false;\n      $('#ep_profile_modalForm_name').css({border: '1px solid gray'});\n\n      animating = true;\n\n      currentFs = $(this).parent();\n      nextFs = $(this).parent().next();\n\n      // activate next step on progressbar using the index of next_fs\n      // $(\"#progressbar li\").eq($(\"fieldset\").index(next_fs)).addClass(\"active\");\n\n      // show the next fieldset\n      currentFs.hide();\n      nextFs.show();\n      animating = false;\n    });\n\n\n    $('.close , #ep_profile_formModal_overlay , .ep_profile_formModal_topClose').click(() => {\n      $('#ep_profile_formModal').removeClass('ep_profile_formModal_show');\n\n      hideFormModalOverlay();\n\n      return false;\n    });\n    $('.previous').click(function () {\n      if (animating) return false;\n      animating = true;\n\n      currentFs = $(this).parent();\n      previousFs = $(this).parent().prev();\n\n      // de-activate current step on progressbar\n      // $(\"#progressbar li\").eq($(\"fieldset\").index(current_fs)).removeClass(\"active\");\n      currentFs.hide();\n      previousFs.show();\n      animating = false;\n    });\n\n    $('.clear').click(function () {\n      shared.resetAllProfileImage($(this).attr('data-userId'), $(this).attr('data-padId'));\n    });\n\n    const sendFormDataToServer = () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      const $form = $('#ep_profile_formModal_msform');\n      const data = getFormData($form);\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_info',\n        userId,\n        data,\n        padId,\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n    };\n\n\n    const sendEmailVerification = (email, username) => {\n      const oldText = $('#ep_profile_modal_verification').text();\n      $.ajax({\n        url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/sendVerificationEmail/$\n        {pad.getUserId()}/${username}/${email}`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          // setting a timeout\n          $('#ep_profile_modal_verification').text('Sending...');\n        },\n        error: (xhr) => { // if error occured\n          $('#ep_profile_modal_verification').text('Error');\n          setTimeout(() => {\n            $('#ep_profile_modal_verification').text(oldText);\n          }, 2000);\n        },\n        success: (response) => {\n          $('#ep_profile_modal_verification').text('Verification email has been sent.');\n          $('#ep_profile_modal_verification').attr('data-verification-status', 'true');\n        },\n\n      });\n    };\n\n\n    const uploadImg = () => {\n      const userId = pad.getUserId();\n      const fd = new FormData();\n      const files = $('#profile_file_modal')[0].files[0];\n      fd.append('file', files);\n      if (!files) return;\n      $.ajax({\n        url: `/static/${clientVars.padId}/pluginfw/ep_profile_modal/upload/${userId}`,\n        type: 'post',\n        data: fd,\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          // setting a timeout\n\n          helper.refreshLoadingImage(userId, clientVars.padId);\n        },\n        error: (xhr) => { // if error occured\n          helper.refreshUserImage(userId, clientVars.padId);\n          $('#profile_modal_selected_image').attr('style',\n              (i, style) => style && style.replace(/background-image[^;]+;?/g, ''));\n\n          switch (xhr.status) {\n            case 413:\n              $.gritter.add({\n                title: 'Error',\n                text: 'ep_profile_modal: image size is large.',\n                sticky: true,\n                // eslint-disable-next-line camelcase\n                class_name: 'error',\n              });\n                 // Take action, referencing xhr.responseText as needed.\n          }\n        },\n        success: (response) => {\n          helper.refreshUserImage(userId, clientVars.padId);\n\n          $('#profile_modal_selected_image').attr('style',\n              (i, style) => style && style.replace(/background-image[^;]+;?/g, ''));\n        },\n\n      });\n    };\n\n    const submitHandle = () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      $('#ep_profile_formModal').removeClass('ep_profile_formModal_show');\n\n      uploadImg();\n\n      hideFormModalOverlay();\n\n      sendFormDataToServer();\n\n      const username = $('#ep_profile_modalForm_name').val();\n\n      helper.userLogin({\n        email: $('#ep_profile_modalForm_email').val(),\n        username,\n      });\n      setTimeout(() => {\n        helper.refreshUserImage(userId, padId);\n      }, 2200);\n      // sync profile section to up\n    };\n\n    const nextHandler = (currentFs, nextFs) => {\n      if (animating) return false;\n\n      const currentSection = currentFs.attr('data-section');\n      localStorage.setItem('formStatus', currentSection);\n      if (currentSection === 'name') {\n        if ($('#ep_profile_modalForm_name').val() === '') {\n          $('#ep_profile_modalForm_name').css({border: '1px solid red'});\n          return false;\n        }\n        const username = $('#ep_profile_modalForm_name').val();\n        $('#ep_profile_modalForm_name').css({border: '0px solid gray'});\n        // submit username once user input and press next\n        helper.userLogin({\n          username,\n        });\n        shared.loginByEmailAndUsernameWithoutValidation(username, '', false);\n      }\n      if (currentSection === 'email') {\n        const userEmail = $('#ep_profile_modalForm_email').val();\n        if (!shared.isEmail(userEmail) || userEmail === '') {\n          $('#ep_profile_modalForm_email').css({border: '1px solid red'});\n          return false;\n        }\n        const username = $('#ep_profile_modalForm_name').val();\n        shared.loginByEmailAndUsernameWithoutValidation(username, userEmail, true);\n        sendEmailVerification(userEmail, username);\n        $('#ep_profile_modalForm_email').css({border: '0px solid gray'});\n      }\n\n      if (currentSection === 'homepage') {\n        const userLink = $('#ep_profile_modal_homepage').val();\n        // console.log(shared.IsValid(userLink));\n        if (!shared.isValid(userLink) || userLink === '') {\n          $('#ep_profile_modal_homepage').css({border: '1px solid red'});\n          return false;\n        }\n        $('#ep_profile_modal_homepage').css({border: '0px solid gray'});\n        sendFormDataToServer();\n      }\n\n      // if (currentSection == 'image') {\n      //   uploadImg();\n      // }\n\n\n      animating = true;\n      currentFs.hide();\n      if (nextFs.length) {\n        nextFs.show();\n\n        // focus handling\n        const nextSelection = nextFs.attr('data-section');\n        if (nextSelection === 'email') { $('#ep_profile_modalForm_email').focus().select(); }\n        if (nextSelection === 'homepage') { $('#ep_profile_modal_homepage').focus().select(); }\n        if (nextSelection === 'bio') { $('#ep_profile_modalForm_about_yourself').focus().select(); }\n      } else { // seems last fieldset\n        submitHandle();\n      }\n      animating = false;\n    };\n\n    $('#ep_profile_formModal_msform fieldset').on('keypress', (e) => {\n      if (e.keyCode === 13) {\n        // Cancel the default action on keypress event\n        e.preventDefault();\n        // currentFs = $(this);\n        // nextFs = $(this).next();\n        // nextHandler(currentFs, nextFs);\n        $('.next').click();\n      }\n    });\n    $('.next').click(function () {\n      currentFs = $(this).parent();\n      nextFs = $(this).parent().next();\n      nextHandler(currentFs, nextFs);\n    });\n\n    $('.submit').click(() => {\n      submitHandle();\n      return false;\n    });\n    // upload image profile\n    $('#profile_file_modal').on('change', (e) => {\n      const files = $('#profile_file_modal')[0].files[0];\n\n      const url = URL.createObjectURL(files);\n      $('#profile_modal_selected_image').css({'background-position': '50% 50%',\n        'background-image':\n        `url(${url})`, 'background-repeat': 'no-repeat', 'background-size': '64px'});\n    });\n  };\n\n\n  return {\n    showModal,\n    hideFormModalOverlay,\n    handleOnCloseOverlay,\n    resetModal,\n    getFormData,\n    initModal,\n    allEventListener,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n// var shared = require('../shared');\n\nconst usersProfileSection = (() => {\n  const initiate = (clientVars) => {\n    const modal = $('#ep_profile_users_profile_script').tmpl(clientVars);\n    $('body').append(modal);\n    // $('#ep_profile_users_profile').addClass('ep_profile_formModal_show')\n  };\n\n  const initiateListeners = () => {\n    const avatarListerner = (userId) => {\n      const padId = pad.getPadId();\n      $.ajax({\n        url: `/static/${padId}/pluginfw/ep_profile_modal/getUserInfo/${userId}`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          const imageUrl = '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n          $('#ep_profile_users_profile_userImage').css({'background-position': '50% 50%',\n            'background-image':\n            `url(${imageUrl})`, 'background-repeat': 'no-repeat', 'background-size': '69px'});\n          // $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n          $('#ep_profile_user_img').css({'background-position': '50% 50%',\n            'background-image':\n            `url(${imageUrl})`, 'background-repeat': 'no-repeat', 'background-size': '69px'});\n          $('#ep_profile_users_profile_name').text('');\n          $('#ep_profile_users_profile_desc').text('');\n\n          $('#ep_profile_users_profile').addClass('ep_profile_formModal_show');\n          shared.showGeneralOverlay();\n        },\n        error: (xhr) => { // if error occured\n          $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n          shared.hideGeneralOverlay();\n        },\n        success: (response) => {\n          const imageUrl = `/static/getUserProfileImage/${userId}/${padId}?t=${\n            new Date().getTime()}`;\n          let username = response.user.username;\n          if (username == null || username === '') { username = 'Anonymous'; }\n          const about = response.user.about || '';\n          const homepage = response.user.homepage || '';\n\n          $('#ep_profile_users_profile_name').text(username);\n          $('#ep_profile_users_profile_desc').text(about);\n          if (homepage === '') {\n            $('#ep_profile_users_profile_homepage').hide();\n          } else {\n            $('#ep_profile_users_profile_homepage').attr({href:\n              shared.getValidUrl(homepage), target: '_blank'});\n          }\n\n          $('#ep_profile_users_profile_userImage').css({'background-position': '50% 50%',\n            'background-image':\n            `url(${imageUrl})`, 'background-repeat': 'no-repeat', 'background-size': '69px'});\n          $('#ep_profile_user_img').css({'background-position': '50% 50%',\n            'background-image':\n             `url(${imageUrl})`, 'background-repeat': 'no-repeat', 'background-size': '69px'});\n        },\n      });\n    };\n\n\n    $('#usersIconList').on('avatarClick', (e, userIdParam) => { // coming from external plugins\n      if (!userIdParam || (userIdParam.indexOf('a.') < 0)) return;\n      avatarListerner(userIdParam);\n    });\n\n    $('#usersIconList').on('click', '.avatar', function () {\n      const userId = $(this).attr('data-userId');\n      avatarListerner(userId);\n    });\n\n\n    $('#ep_profile_users_profile_close').on('click', () => {\n      $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n      shared.hideGeneralOverlay();\n    });\n  };\n\n  return {\n    initiate,\n    initiateListeners,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\nconst postAceInit = (() => {\n  const __LOGOUT = '1';\n  const postAceInit = (hook, context) => {\n    usersProfileSection.initiateListeners();\n    $('#ep_profile_modal_save').on('click', () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      const username = $('#ep_profile_modal-username');\n      // validations\n      if (username.val() === '') {\n        username.css({border: '1px solid red'});\n        return false;\n      }\n      username.css({border: '0'});\n      // validations\n\n      const $form = $('#ep_profile_modal_one');\n      const data = shared.getFormData($form);\n\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_info',\n        userId,\n        data,\n        padId,\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      pad.collabClient.updateUserInfo({\n        userId: padId,\n        name: username.val(),\n        colorId: '#b4b39a',\n      });\n\n      if (window.userStatus === 'login') {\n        if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n          $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n          shared.hideGeneralOverlay();\n        } else {\n          $('#ep_profile_modal').addClass('ep_profile_modal-show');\n\n          $('#online_ep_profile_modal_status').show();\n          $('#offline_ep_profile_modal_status').hide();\n\n          shared.showGeneralOverlay();\n        }\n      }\n    });\n\n    $('#userlist_count').on('click', () => {\n      const page = $('#ep_profile_modal_user_list').attr('data-page') || 1;\n      const pageLoaded = $('#ep_profile_modal_user_list').attr('data-pageLoaded') || false;\n      const onlineListSelector = $('#ep_profile_user_list_container');\n\n      if (pageLoaded !== 'true') {\n        $.ajax({\n          url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/getContributors/${page}/`,\n          type: 'get',\n          data: {},\n          contentType: false,\n          processData: false,\n          beforeSend: () => {\n            // setting a timeout\n            // $('#contributorsLoading').show();\n            $('#ep_profile_user_list_container').css({display: 'none'});\n            $('#ep_profile_modal_load_more_contributors').css({display: 'none'});\n            onlineListSelector.css({display: 'none'});\n          },\n          error: (xhr) => { // if error occured\n            $('#contributorsLoading').css({display: 'none'});\n            onlineListSelector.css({display: 'block'});\n          },\n          success: (response) => {\n            onlineListSelector.css({display: 'block'});\n            $('#contributorsLoading').css({display: 'none'});\n            $('#ep_profile_user_list_container').css({display: 'block'});\n            $('#ep_profile_modal_user_list').attr('data-pageLoaded', 'true');\n            const onlineUsers = pad.collabClient.getConnectedUsers();\n            contributors.manageOnlineOfflineUsers(\n                response.data, onlineUsers, pad.getUserId(), response.lastPage);\n          },\n\n        });\n      }\n    });\n\n    $('#ep_profile_modal_load_more_contributors').on('click', () => {\n      let page = $('#ep_profile_modal_user_list').attr('data-page') || 1;\n      page++;\n      $.ajax({\n        url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/getContributors/${page}/`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          // setting a timeout\n          $('#loadMoreLoading').show();\n          $('#ep_profile_modal_load_more_contributors').css({display: 'none'});\n        },\n        error: (xhr) => { // if error occured\n          $('#loadMoreLoading').hide();\n          $('#ep_profile_modal_load_more_contributors').css({display: 'block'});\n        },\n        success: (response) => {\n          $('#ep_profile_modal_load_more_contributors').css({display: 'block'});\n          $('#loadMoreLoading').hide();\n          $('#ep_profile_modal_user_list').attr('data-page', page);\n          const onlineUsers = pad.collabClient.getConnectedUsers();\n          contributors.manageOnlineOfflineUsers(\n              response.data, onlineUsers, pad.getUserId(), response.lastPage);\n        },\n\n      });\n    });\n\n    $('#userlist_count,#ep_profile_modal_user_list_close').on('click', () => {\n      if ($('#ep_profile_modal_user_list').hasClass('ep_profile_modal-show')) {\n        $('#ep_profile_modal_user_list').removeClass('ep_profile_modal-show');\n        shared.hideGeneralOverlay();\n      } else {\n        shared.showGeneralOverlay();\n        $('#ep_profile_modal_user_list').addClass('ep_profile_modal-show');\n      }\n    });\n\n    $('#ep_profile_modal_verification').on('click', function () {\n      const verificationStatus = $(this).attr('data-verification-status');\n      const oldText = $(this).text();\n      if (verificationStatus !== 'true') {\n        $.ajax({\n          url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/sendVerificationEmail/${\n            pad.getUserId()}/null/null`,\n          type: 'get',\n          data: {},\n          contentType: false,\n          processData: false,\n          beforeSend: () => {\n            // setting a timeout\n            $('#ep_profile_modal_verification').text('Sending...');\n          },\n          error: (xhr) => { // if error occured\n            $('#ep_profile_modal_verification').text('Error');\n            setTimeout(() => {\n              $('#ep_profile_modal_verification').text(oldText);\n            }, 2000);\n          },\n          success: (response) => {\n            $('#ep_profile_modal_verification').text('Verification email has been sent.');\n            $('#ep_profile_modal_verification').attr('data-verification-status', 'true');\n          },\n\n        });\n      }\n      return false;\n    });\n    $('#ep_profile_modal_share').on('click', () => {\n      const dummy = document.createElement('input');\n      const text = window.location.href;\n\n      document.body.appendChild(dummy);\n      dummy.value = text;\n      dummy.select();\n      document.execCommand('copy');\n      document.body.removeChild(dummy);\n      $.gritter.add({\n        text: 'Link copied to clipboard',\n      });\n    });\n\n    $('#ep-profile-button').on('click', () => {\n      if (window.userStatus === 'login') {\n        if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n          $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n        } else {\n          $('#ep_profile_modal').addClass('ep_profile_modal-show');\n          $('#online_ep_profile_modal_status').show();\n          $('#offline_ep_profile_modal_status').hide();\n          shared.showGeneralOverlay();\n        }\n      } else {\n        profileForm.resetModal();\n        profileForm.showModal();\n      }\n    });\n\n    $('#ep_profile_modal_close').on('click', () => {\n      if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n        $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n        shared.hideGeneralOverlay();\n      } else {\n        shared.showGeneralOverlay();\n        $('#ep_profile_modal').addClass('ep_profile_modal-show');\n      }\n    });\n    $('#ep_profile_modal_close_ask').on('click', () => {\n      ($('#ep_profile_modal_ask').hasClass('ep_profile_modal-show'))\n        ? $('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n        : $('#ep_profile_modal_ask').addClass('ep_profile_modal-show');\n    });\n\n\n    $('#ep_profile_modal_signout').on('click', () => {\n      profileForm.resetModal();\n\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      localStorage.setItem('formStatus', '');\n      clientVars.ep_profile_modal.userStatus = __LOGOUT;\n\n      window.userStatus = 'out';\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_logout',\n        email: $('#ep_profile_hidden_email').val(),\n        userId,\n        padId,\n\n      };\n      clientVars.ep_profile_modal.userStatus = __LOGOUT;\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n      $('#online_ep_profile_modal_status').hide();\n      $('#offline_ep_profile_modal_status').show();\n      syncData.resetProfileModalFields();\n      shared.hideGeneralOverlay();\n      $(`.avatar[data-id=\"user_${userId}\"]`).attr({style: ''});\n      helper.userLogout();\n    });\n\n\n    // upload image profile\n    $('#profile_file').on('change', (e) => {\n      const userId = pad.getUserId();\n      const fd = new FormData();\n      const files = $('#profile_file')[0].files[0];\n      fd.append('file', files);\n      if (!files) return;\n      $.ajax({\n        url: `/static/${clientVars.padId}/pluginfw/ep_profile_modal/upload/${userId}`,\n        type: 'post',\n        data: fd,\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          // setting a timeout\n          helper.refreshLoadingImage(userId, clientVars.padId);\n        },\n        error: (xhr) => { // if error occured\n          helper.refreshUserImage(userId, clientVars.padId);\n        },\n        success: (response) => {\n          helper.refreshUserImage(userId, clientVars.padId);\n        },\n\n      });\n    });\n\n    $('#ep_profile_modal_submit').on('click', () => {\n      const username = $('#ep_profile_modal_username').val();\n      const email = $('#ep_profile_modal_email').val();\n\n      shared.loginByEmailAndUsername(username, email);\n    });\n\n    $('#ep_profile_modal_login').on('click', () => {\n      const username = $('#ep_profile_modal-username').val();\n      const email = $('#ep_profile_modal-email').val();\n\n      shared.loginByEmailAndUsername(username, email);\n      $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n    });\n\n    $('#ep_profile_general_overlay').on('click', () => {\n      shared.hideGeneralOverlay();\n    });\n\n    return [];\n  };\n  return postAceInit;\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n\nconst aceInitialized = (() => {\n  const aceInitialized = (hook, context) => {\n    const bindEvent = (element, eventName, eventHandler) => {\n      if (element.addEventListener) {\n        element.addEventListener(eventName, eventHandler, false);\n      } else if (element.attachEvent) {\n        element.attachEvent(`on${eventName}`, eventHandler);\n      }\n    };\n\n    bindEvent(window, 'message', (e) => {\n      const eventName = e.data.eventName;\n      const data = e.data.data;\n\n      if (eventName === 'showEtherpadModal') {\n        profileForm.showModal();\n      }\n      if (eventName === 'showProfileDetailModal') {\n        $('#usersIconList').trigger('avatarClick', data.userId);\n      }\n    });\n\n\n    const userId = pad.getUserId();\n    // if (!window.matchMedia('(max-width: 720px)').matches) {\n    profileForm.initModal(clientVars);\n    // if (clientVars.ep_profile_modal.form_passed !== true) {\n    //   profileForm.showModal();\n    // }\n    if (localStorage.getItem('formPassed') !== 'yes') profileForm.allEventListener();\n    //   profileForm.showModal();\n\n    // / user profile section\n    usersProfileSection.initiate(clientVars);\n    // / user profile section\n\n    let modal = $('#ep_profile_modal_script').tmpl(clientVars);\n    $('body').append(modal);\n    // /\n    modal = $('#ep_profile_modal_user_list_script').tmpl(clientVars);\n    $('body').append(modal);\n    // /general\n    modal = $('#ep_profile_modal_general_script').tmpl();\n    $('body').append(modal);\n    // template generate\n\n    const style = `\n      background : url(/static/getUserProfileImage/${userId}/${clientVars.padId}) no-repeat 50% 50%;\n      background-size :32px\n    `;\n\n    const onlineUsers = pad.collabClient.getConnectedUsers();\n    const usersListHTML = contributors.createHTMLforUserList(\n        clientVars.ep_profile_modal.contributed_authors_count,\n        onlineUsers, clientVars.padId, clientVars.ep_profile_modal.verified\n    );\n\n    if (!$('body').hasClass('mobileView')) {\n      if ($('#pad_title').length === 0) {\n        $('body').prepend(`\n          <div id='pad_title'>\n            <div class=\"title_container\">\n              <span contenteditable style=\"color:#000\" id='title'>Loading...</span>\n            </div>\n            <button id='save_title'></button>\n          </div>\n        `);\n      }\n      $('#pad_title').append(`\n        <div class='ep_profile_modal_header'>\n          <div class='userlist' id='userlist'>\n          ${usersListHTML}\n          </div>\n          <div class='ep-profile-button' id='ep-profile-button'>\n          <div id='ep-profile-image' style='${style}' /></div>\n        </div>\n      `);\n    }\n\n\n    if (clientVars.ep_profile_modal.userStatus === '2') {\n      window.userStatus = 'login';\n    } else {\n      window.userStatus = 'out';\n    }\n    // We were telling to server that we\n    // are ready to get data that due to large data\n    // need to be request base over HTTP + just for analytics\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_ready',\n      userId,\n      padId: clientVars.padId,\n      data: clientVars.ep_profile_modal,\n    };\n\n    pad.collabClient.sendMessage(message);\n\n    if (clientVars.ep_profile_modal.userName === 'Anonymous') {\n      pad.collabClient.updateUserInfo({\n        userId,\n        name: 'Anonymous',\n        colorId: '#b4b39a',\n      });\n    }\n\n    return [];\n  };\n\n  return aceInitialized;\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n\nconst handleClientMessage = (() => {\n  const handleClientMessage_USER_NEWINFO = (hook, context) => {\n    const padId = pad.getPadId();\n\n    contributors.increaseUserFromList(context.payload.userId, padId);\n    return [];\n  };\n  const handleClientMessage_USER_LEAVE = (hook, context) => {\n    const padId = pad.getPadId();\n\n    contributors.decreaseUserFromList(context.payload.userId, padId);\n    return [];\n  };\n  const handleClientMessage_CUSTOM = (hook, context, cb) => {\n    const currentUserId = pad.getUserId();\n\n    if (context.payload.action === 'totalUserHasBeenChanged') {\n      const totalUserCount = context.payload.totalUserCount;\n      $('#userlist_count').text(totalUserCount);\n    }\n\n    if (context.payload.action === 'EP_PROFILE_USER_IMAGE_CHANGE') {\n      // when user A change image and user B want to know\n      helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n    }\n\n    if (context.payload.action === 'EP_PROFILE_USER_LOGOUT_UPDATE') {\n      const imageUrl = `/static/getUserProfileImage/${context.payload.userId}/${\n        context.payload.padId}?t=${new Date().getTime()}`;\n\n      if (currentUserId === context.payload.userId) {\n        helper.refreshUserImage(currentUserId, context.payload.padId);\n        helper.logoutCssFix(currentUserId);\n      } else {\n        helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n      }\n\n      syncData.resetGeneralFields(context.payload.userId);\n\n      // making user as anonymous\n      const onlineAnonymousSelector = contributors.isThereOnlineAnonymous();\n      if (onlineAnonymousSelector) {\n        contributors.increaseToOnlineAnonymous(onlineAnonymousSelector, context.payload.userId);\n      } else {\n        contributors.createOnlineAnonymousElement(context.payload.userId,\n            'Anonymous', imageUrl, {});\n      }\n\n      contributors.removeUserElementInUserList(context.payload.userId);\n    }\n\n    if (context.payload.action === 'EP_PROFILE_USER_LOGIN_UPDATE') {\n      // ///////////////// related to user list when user has been loginned\n      const onlineAnonymousSelector = contributors.isThereOnlineAnonymous();\n      if (context.payload.userName === 'Anonymous') {\n        if (onlineAnonymousSelector) {\n          contributors.increaseToOnlineAnonymous(onlineAnonymousSelector, context.payload.userId);\n        } else {\n          contributors.createOnlineAnonymousElement(context.payload.userId,\n              context.payload.userName, context.payload.img, context.payload.user);\n        }\n\n        contributors.removeUserElementInUserList(context.payload.userId);\n      } else {\n        if (onlineAnonymousSelector) {\n          if (contributors.checkUserExistInOnlineAnonymous(\n              onlineAnonymousSelector, context.payload.userId)) {\n            contributors.decreaseFromOnlineAnonymous(\n                onlineAnonymousSelector, context.payload.userId);\n          }\n        }\n        contributors.createOnlineUserElementInUserList(\n            context.payload.userId, context.payload.userName,\n            context.payload.img, currentUserId, context.payload.user);\n      }\n\n\n      // change owner loginned img at top of page\n      if (currentUserId === context.payload.userId) {\n        helper.refreshUserImage(currentUserId, context.payload.padId);\n        syncData.syncAllFormsData(context.payload.userId, context.payload.user);\n\n        // $(\"#ep_profile_modal_section_info_name\").text(context.payload.userName);\n      } else {\n        helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n        syncData.syncGeneralFormsData(context.payload.userId, context.payload.user);\n      }\n    }\n\n    return [];\n  };\n  return {\n    handleClientMessage_USER_NEWINFO,\n    handleClientMessage_USER_LEAVE,\n    handleClientMessage_CUSTOM,\n\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\nconst __LOGIN = '2';\nconst __LOGOUT = '1';\n\nconst helper = (() => {\n  const userLogin = (data) => {\n    window.userStatus = 'login';\n    clientVars.ep_profile_modal.userStatus = __LOGIN;\n\n    pad.collabClient.updateUserInfo({\n      userId: pad.getUserId(),\n      name: data.username,\n      colorId: '#b4b39a',\n    });\n  };\n  const userLogout = () => {\n    window.userStatus = 'logout';\n    clientVars.ep_profile_modal.userStatus = __LOGOUT;\n\n\n    pad.collabClient.updateUserInfo({\n      userId: pad.getUserId(),\n      name: 'Anonymous',\n      colorId: '#b4b39a',\n    });\n  };\n  const logoutCssFix = (userId) => {\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({'margin': '0px', 'box-shadow': 'none'});\n    }\n  };\n  const refreshUserImage = (userId, padId) => {\n    const imageUrl = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    $('.ep_profile_modal_section_image_big_ask').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n    });\n    $('.ep_profile_modal_section_image_big').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '72px',\n    });\n    $('#ep-profile-image').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '32px',\n    });\n\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      userSelector\n          .children('.ep_profile_user_img')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${imageUrl})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n    }\n\n    const rocketChatOnlineUser = $(\n        `.avatar[data-id=\"${userId}\"]`\n    );\n    if (rocketChatOnlineUser.length) {\n      rocketChatOnlineUser\n          .children('.ep_rocketchat_onlineUsersList_avatarImg')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${imageUrl})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '28px',\n          });\n    }\n  };\n\n  const refreshLoadingImage = (userId, padId) => {\n    const imageUrl =\n    '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    $('.ep_profile_modal_section_image_big_ask').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n    });\n    $('.ep_profile_modal_section_image_big').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '72px',\n    });\n    $('#ep-profile-image').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '32px',\n    });\n\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      userSelector\n          .children('.ep_profile_user_img')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${imageUrl})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n    }\n  };\n\n  const refreshGeneralImage = (userId, padId) => {\n    const imageUrl = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      userSelector\n          .children('.ep_profile_user_img')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${imageUrl})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n    }\n  };\n\n  return {\n    userLogin,\n    userLogout,\n    logoutCssFix,\n    refreshUserImage,\n    refreshLoadingImage,\n    refreshGeneralImage,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-useless-escape */\n'use strict';\n\n// const __LOGIN = '2';\n// var helper = require('./helper');\n\nconst shared = (() => {\n  const resetAllProfileImage = (userId, padId) => {\n    $.ajax({\n      url: `/static/${padId}/pluginfw/ep_profile_modal/resetProfileImage/${userId}`,\n      type: 'get',\n      data: {},\n      contentType: false,\n      processData: false,\n      beforeSend: () => {\n        helper.refreshLoadingImage(userId, padId);\n      },\n      error: (xhr) => { // if error occured\n        helper.refreshUserImage(userId, padId);\n      },\n      success: (response) => {\n        helper.refreshUserImage(userId, padId);\n      },\n\n    });\n  };\n  const sendSignOutMessage = (userId, padId) => {\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_send_signout_message',\n      userId,\n      padId,\n\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const scrollDownToLastChatText = (selector) => {\n    const $element = $(selector);\n    if ($element.length <= 0 || !$element[0]) return true;\n    $element.animate({scrollTop: $element[0].scrollHeight}, {duration: 400, queue: false});\n  };\n  const addTextChatMessage = (msg) => {\n    const authorClass = `author-${msg.userId.replace(/[^a-y0-9]/g, (c) => {\n      if (c === '.') return '-';\n      return `z${c.charCodeAt(0)}z`;\n    })}`;\n\n    // create the time string\n    let minutes = `${new Date(msg.time).getMinutes()}`;\n    let hours = `${new Date(msg.time).getHours()}`;\n    if (minutes.length === 1) minutes = `0${minutes}`;\n    if (hours.length === 1) hours = `0${hours}`;\n    const timeStr = `${hours}:${minutes}`;\n\n    const html = `<p><span class='time ${authorClass}'>${timeStr}</span> ${msg.text}</p>`;\n\n    $(document).find('#chatbox #chattext').append(html);\n    scrollDownToLastChatText('#chatbox #chattext');\n  };\n\n\n  const loginByEmailAndUsernameWithoutValidation = (username, email, suggestData) => {\n    clientVars.ep_profile_modal.userStatus = __LOGIN;\n\n    window.userStatus = 'login';\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_login',\n      email,\n      userId: pad.getUserId(),\n      name: username,\n      padId: pad.getPadId(),\n      suggestData,\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const isEmail = (email) => {\n    const regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (email === '') { return true; } else { return regex.test(email); }\n  };\n\n  const loginByEmailAndUsername = (username, email) => {\n    if (username === '' || !isEmail(email)) {\n      if (!isEmail(email)) {\n        $('#ep_profile_modal_email').focus();\n        $('#ep_profile_modal_email').addClass('ep_profile_modal_validation_error');\n      }\n      return false;\n    } else {\n      $('#ep_profile_modal_email').removeClass('ep_profile_modal_validation_error');\n      clientVars.ep_profile_modal.userStatus = __LOGIN;\n\n      window.userStatus = 'login';\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_login',\n        email,\n        userId: pad.getUserId(),\n        name: username,\n        padId: pad.getPadId(),\n        suggestData: false,\n\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      helper.userLogin({\n        email,\n        username,\n      });\n\n      $('#online_ep_profile_modal_status').show();\n      $('#offline_ep_profile_modal_status').hide();\n    }\n  };\n\n\n  const isValid = (url) => {\n    // eslint-disable-next-line max-len\n    const pattern = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n    return pattern.test(url);\n  };\n\n\n  const getFormData = ($form) => {\n    const unindexedArray = $form.serializeArray();\n    const indexedArray = {};\n\n    $.map(unindexedArray, (n, i) => {\n      indexedArray[n.name] = n.value;\n    });\n\n    return indexedArray;\n  };\n  const setFormData = ($form, indexedArray) => {\n    $.map(indexedArray, (n, i) => {\n      $(`#${i}`).val(n);\n    });\n  };\n\n  const isUsername = (username) => {\n    const regex = /^([a-zA-Z0-9_.+-])/;\n    return regex.test(username);\n  };\n  const showGeneralOverlay = () => {\n    $('#ep_profile_general_overlay').addClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_general_overlay').css({display: 'block'});\n  };\n\n  const hideGeneralOverlay = () => {\n    $('#ep_profile_general_overlay').removeClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_general_overlay').css({display: 'none'});\n    $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n    $('#ep_profile_modal_user_list').removeClass('ep_profile_modal-show');\n    $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n  };\n\n  const getValidUrl = (url) => {\n    if (url === '' || !url) return '';\n    let newUrl = window.decodeURIComponent(url);\n    newUrl = newUrl.trim().replace(/\\s/g, '');\n\n    if (/^(:\\/\\/)/.test(newUrl)) {\n      return `http${newUrl}`;\n    }\n    if (!/^(f|ht)tps?:\\/\\//i.test(newUrl)) {\n      return `http://${newUrl}`;\n    }\n\n    return newUrl;\n  };\n\n  const getMonthName = (monthNumber) => {\n    const months = ['January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'];\n    return months[monthNumber - 1];\n  };\n  const getCustomeFormatDate = (date) => {\n    if (date === 'today' || date === 'yesterday') return `Last seen ${date}`;\n    date = date.split('-');\n    return `Last seen ${date[2]} ${getMonthName(date[1])} ${date[0]}`;\n  };\n  const getCustomDate = (date) => {\n    console.log(date, 'date');\n    if (date === 'today' || date === 'yesterday') return `Last seen ${date}`;\n    date = date.split('-');\n    return `Last seen ${date[2]}/${date[1]}/${date[0]}`;\n  };\n\n  return {\n    resetAllProfileImage,\n    sendSignOutMessage,\n    addTextChatMessage,\n    scrollDownToLastChatText,\n    loginByEmailAndUsernameWithoutValidation,\n    loginByEmailAndUsername,\n    isEmail,\n    isValid,\n    getFormData,\n    setFormData,\n    isUsername,\n    showGeneralOverlay,\n    hideGeneralOverlay,\n    getValidUrl,\n    getMonthName,\n    getCustomeFormatDate,\n    getCustomDate,\n\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n// var shared = require('./shared');\n\n\nconst syncData = (() => {\n  const syncAllFormsData = (userId, data) => {\n    if (data === undefined) return;\n    // users List\n    const userSelector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (userSelector.length) {\n      const usernameBox = userSelector.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text(data.username);\n\n      userSelector.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_profile_desc').text(data.about);\n      if (data.homepage) {\n        const homepageElem = usernameBox.children('.ep_profile_contributor_link_container');\n        homepageElem.attr({href: shared.getValidUrl(data.homepage)});\n      }\n      usernameBox.children('.ep_profile_contributor_status').text('Online');\n    }\n    $('#ep_profile_modal-username').val(data.username);\n    $('#ep_profile_modal-about').val(data.about);\n    $('#ep_profile_modal-homepage').val(data.homepage);\n    $('#ep_profile_modal-email').val(data.email);\n    if (data.verified === true) {\n      $('#ep_profile_modal_verification').attr('data-verification-status', 'true');\n      $('#ep_profile_modal_verification').text('Verified');\n    } else {\n      $('#ep_profile_modal_verification').attr('data-verification-status', 'false');\n      $('#ep_profile_modal_verification').text('Send verification email');\n    }\n\n    // if(data.push_notification == false)\n    //     $(\"#ep_profile_modal_push_notification\").attr('checked','')\n    // else\n    //     $(\"#ep_profile_modal_push_notification\").attr('checked','checked')\n\n    // profile modal\n  };\n  const syncGeneralFormsData = (userId, data) => {\n    const userSelector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (userSelector.length) {\n      const usernameBox = userSelector.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text(data.username);\n\n      userSelector.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_profile_desc').text(data.about);\n\n      const homepageElem = usernameBox.children('.ep_profile_contributor_link_container');\n      homepageElem.attr({href: shared.getValidUrl(data.homepage)});\n\n\n      usernameBox.children('.ep_profile_contributor_status').text('Online');\n    }\n  };\n\n\n  const resetProfileModalFields = () => {\n    $('#ep_profile_modal-username').val('');\n    $('#ep_profile_modal-about').val('');\n    $('#ep_profile_modal-homepage').val('');\n    $('#ep_profile_modal-email').val('');\n\n    $('#ep_profile_modalForm_name').val('');\n    $('#ep_profile_modalForm_email').val('');\n    $('#ep_profile_modal_homepage').val('');\n    $('#ep_profile_modalForm_about_yourself').val('');\n  };\n  const resetGeneralFields = (userId) => {\n    const userSelector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (userSelector.length) {\n      const usernameBox = userSelector.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text('');\n      userSelector.children('.ep_profile_user_list_profile_userDesc').children(\n          '.ep_profile_user_list_profile_desc').text('');\n      const homepageElem = usernameBox.children('.ep_profile_contributor_link_container');\n      homepageElem.attr({href: ''});\n      usernameBox.children('.ep_profile_contributor_status').text('');\n    }\n  };\n\n  return {\n    syncAllFormsData,\n    syncGeneralFormsData,\n    resetProfileModalFields,\n    resetGeneralFields,\n  };\n})();\n"]}