{"version":3,"sources":["admin.js","contributors.js","main.js","userProfileSection.js","postAceInit.js","aceInitialized.js","handleClientMessage.js","helper.js","shared.js","syncData.js"],"names":["exports","moduleList","documentReady","hooks","context","cb","socket","loc","document","location","port","protocol","url","hostname","pathComponents","pathname","split","baseURL","slice","length","join","resource","substring","room","io","connect","path","on","data","console","log","shared","setFormData","$","getFormData","emit","alert","each","index","value","append","pad_users_data","userId","email","username","createDate","last_seen_date","verifiedDate","pad","this","contributors","getHtmlOfUsersList","img","anonymous_handler","about","homepage","seenStatus","style","undefined","getValidUrl","increaseToOnlineAnonymous","selector_on","anonymouseCount","attr","ids_data_array","indexOf","push","new_anonymouseCount","parseInt","children","text","decreaseFromOnlineAnonymous","grep","remove","increaseToOfflineAnonymous","selector_off","ids_data","createOfflineAnonymousElement","userElement","userListHtml","offline_list_selector","user_selector","insertBefore","prepend","moveOnlineUserToOffline","createHTMLforUserList","total","online","padId","userVerify","html","borderStyle","reverse","key","increaseUserFromList","$image","prependTo","hide","slideDown","decreaseUserFromList","animate","opacity","selector_user","appendTo","image_url","Date","getTime","css","background-position","background-image","background-repeat","background-size","manageOnlineOfflineUsers","all_users_list","onlineUsers","currentUserId","lastPage","online_list_selector","display","e","userName","imageUrl","margin-top","error","getCustomDate","selector_offlines_date","ids_data_off_array","createOnlineUserElementInUserList","user","titleOfContributors","insertAfter","isThereOnlineAnonymous","selector","checkUserExistInOnlineAnonymous","createOnlineAnonymousElement","removeUserElementInUserList","paginateContributors","ep_profile_user_list_container_pagination","result","profileForm","showModal","addClass","setTimeout","focus","hideFormModalOverlay","removeClass","handleOnCloseOverlay","getUserId","getPadId","$form","msg","localStorage","setItem","innerdocbody","contents","find","off","removeEventListener","ep_profile_modalForm_name","ep_profile_modalForm_about_yourself","ep_profile_modalForm_homepage","messageChatText","target","time","message","type","action","collabClient","sendMessage","unindexed_array","serializeArray","indexed_array","map","n","i","name","resetModal","show","initModal","clientVars","modal","tmpl","current_fs","next_fs","previous_fs","animating","sendFormDataToServer","submitHandle","fd","FormData","files","ajax","contentType","processData","[object Object]","helper","refreshLoadingImage","xhr","refreshUserImage","replace","status","gritter","add","title","sticky","class_name","response","uploadImg","val","userLogin","nextHandler","currentSection","border","loginByEmailAndUsernameWithoutValidation","userEmail","isEmail","oldText","sendEmailVerification","userLink","IsValid","nextSelection","select","keyCode","preventDefault","next","click","parent","prev","resetAllProfileImage","URL","createObjectURL","allEventListener","event","which","usersProfileSection","initiate","initiateListeners","avatarListerner","background-color","showGeneralOverlay","hideGeneralOverlay","href","userIdParam","postAceInit","hook","updateUserInfo","colorId","window","user_status","hasClass","page","pageLoaded","getConnectedUsers","verificationStatus","dummy","createElement","body","appendChild","execCommand","removeChild","syncData","resetProfileModalFields","userLogout","loginByEmailAndUsername","aceInitialized","getItem","usersListHTML","ep_profile_modal","contributed_authors_count","verified","handleClientMessage","handleClientMessage_USER_NEWINFO","payload","handleClientMessage_USER_LEAVE","handleClientMessage_CUSTOM","current_user_id","totalUserCount","refreshGeneralImage","logoutCssFix","resetGeneralFields","online_anonymous_selector","syncAllFormsData","syncGeneralFormsData","avatar","margin","box-shadow","scrollDownToLastChatText","$element","scrollTop","scrollHeight","duration","queue","test","getMonthName","monthNumber","sendSignOutMessage","addTextChatMessage","authorClass","c","charCodeAt","minutes","getMinutes","hours","getHours","suggestData","isUsername","newUrl","decodeURIComponent","trim","getCustomeFormatDate","date","usernameBox"],"mappings":"AAAAA,QAAAC,WAAA,MAGA,MAAAC,EACA,CAAAC,EAAAC,EAAAC,KAEA,IAAAC,EACA,MAAAC,EAAAC,SAAAC,SACAC,EAAA,IAAAH,EAAAG,KAAA,UAAAH,EAAAI,SAAA,IAAA,GAAAJ,EAAAG,KACAE,EAAA,GAAAL,EAAAI,aAAAJ,EAAAM,YAAAH,KACAI,EAAAL,SAAAM,SAAAC,MAAA,KAEAC,EAAAH,EAAAI,MAAA,EAAAJ,EAAAK,OAAA,GAAAC,KAAA,KAAA,IACAC,EAAAJ,EAAAK,UAAA,GAAA,YAEAC,EAAAX,EAAA,kCAKA,OAAAR,GACA,IAAA,yBAEAE,EAAAkB,GAAAC,QAAAF,EAAA,CAAAG,KAAAT,EAAA,YAAAI,SAAAA,IACAf,EAAAqB,GAAA,uBAAAC,IACAC,QAAAC,IAAAF,GACAG,EAAAC,YAAAC,EAAA,kBAAAL,KAGAK,EAAA,kBAAAN,GAAA,QAAA,KACA,MAAAC,EAAAG,EAAAG,YAAAD,EAAA,mBACA3B,EAAA6B,KAAA,gBAAAP,GACAQ,MAAA,wBAGA9B,EAAA6B,KAAA,iBACA,MAGA,IAAA,mCACA7B,EAAAkB,GAAAC,QAAAF,EAAA,CAAAG,KAAAT,EAAA,YAAAI,SAAAA,IAGAf,EAAAqB,GAAA,mBAAAC,IACAC,QAAAC,IAAA,YAAAF,GACAK,EAAAI,KAAAT,GAAA,SAAAU,EAAAC,GACAN,EAAA,SAAAO,OAAA,kBAAAD,MAAAA,mBAIAjC,EAAAqB,GAAA,wBAAAC,IACAC,QAAAC,IAAA,iBAAAF,GAWAK,EAAAI,KAAAT,EAAAa,gBAAA,SAAAH,EAAAC,GACAA,EAAAG,QACAT,EAAA,UAAAO,OAAA,gEAEAD,EAAAI,OAAAJ,EAAAG,oCACAH,EAAAK,sCACAL,EAAAM,wCACAN,EAAAO,4CACAP,EAAAQ,cAAA,iCACAR,EAAA,SAAA,WAAA,gEAUAN,EAAA,SAAAN,GAAA,UAAA,WACArB,EAAA6B,KAAA,iBAAA,CAAAa,IAAAC,KAAAV,WAKAjC,EAAA6B,KAAA,aACA,MAGA,QACA,MAAA,KCxFAe,EAAA,MA+OA,IAAAC,EAAA,SAAAT,EAAAE,EAAAQ,EAAAC,EAAAC,EAAAC,EAAAC,GAGA,IAAAC,EACA,OAHAH,EAAAA,GAAA,GACAC,EAAAA,GAAA,GAEAF,GAAA,aAAAT,GACAa,EAAA,mBAAAL,kDAEA,wBAAAV,kDAAAW,8CACAI,uLAEAb,qDACAY,6DAEAF,uBAGAG,EAAA,mBAAAL,kDACA,2BAAAV,8CACAe,uLAEAb,oCACA,IAAAW,GAAA,KAAAA,GAAAG,MAAAH,GAAA,MAAAA,EAAA,iBAAA,6DAAAxB,EAAA4B,YAAAJ,aAAAxB,EAAA4B,YAAAJ,uDACAC,6DAEAF,uBAMA,MAAAM,EAAA,SAAAC,EAAAnB,GACA,MAAAoB,EAAAD,EAAAE,KAAA,wBAEAC,EADAH,EAAAE,KAAA,iBACA/C,MAAA,KACA,IAAA,GAAAgD,EAAAC,QAAAvB,GAAA,CACAsB,EAAAE,KAAAxB,GACAmB,EAAAE,KAAA,gBAAAC,EAAA5C,KAAA,MACA,MAAA+C,EAAAC,SAAAN,GAAA,EACAD,EAAAE,KAAA,uBAAAI,GACAN,EAAAQ,SAAA,0CAAAA,SAAA,kCACAA,SAAA,uCAAAC,KAAA,cAAAH,KAIAI,EAAA,SAAAV,EAAAnB,GACA,MAAAoB,EAAAD,EAAAE,KAAA,wBAEA,IAAAC,EADAH,EAAAE,KAAA,iBACA/C,MAAA,KAGAgD,EAAA/B,EAAAuC,KAAAR,EAAAzB,GAAAA,GAAAG,GAGAmB,EAAAE,KAAA,gBAAAC,EAAA5C,KAAA,MACA,MAAA+C,EAAAC,SAAAN,GAAA,EAaA,OAZAD,EAAAE,KAAA,uBAAAI,GACAA,EAAA,EACAN,EAAAQ,SAAA,0CAAAA,SAAA,kCACAA,SAAA,uCAAAC,KAAA,cAAAH,GAEAN,EAAAQ,SAAA,0CAAAA,SAAA,kCACAA,SAAA,uCAAAC,KAAA,aAGAH,EAAA,GACAN,EAAAY,SAEAN,GAIAO,EAAA,SAAAC,EAAAjC,GACA,MAAAoB,EAAAa,EAAAZ,KAAA,wBACA,IAAAa,EAAAD,EAAAZ,KAAA,iBAEAa,EAAA3C,EAAAuC,KAAAI,EAAArC,GAAAA,GAAAG,GAEAiC,EAAAZ,KAAA,gBAAAa,GACA,MAAAT,EAAAC,SAAAN,GAAA,EACAa,EAAAZ,KAAA,uBAAAI,GACAQ,EAAAN,SAAA,0CAAAA,SAAA,kCAAAA,SAAA,uCACAC,KAAA,cAAAH,IAoBAU,EAAA,SAAAnC,EAAAU,EAAAE,EAAAC,EAAAuB,GACA,MAAAC,EAAA5B,EAAAT,EAAA,YAAAU,EAAA,gBAAAE,EAAAC,EAAA,SAEA,IAAAyB,EAAA/C,EAAA,iCACA,GAAA+C,EAAA7D,OAAA,CACA,MAAA8D,EAAAhD,EAAA,2DACAgD,EAAA9D,OACA2D,EAAAI,aAAAD,GAEAD,EAAAxC,OAAAsC,OAEA,CACA7C,EAAA,uCACAkD,QAAA,yFACAH,EAAA/C,EAAA,iCACA+C,EAAAxC,OAAAuC,KAgDAK,EAAA,SAAAN,GACA,IAAAE,EAAA/C,EAAA,iCACA,GAAA+C,EAAA7D,OAAA,CACA,MAAA8D,EAAAhD,EAAA,2DACAgD,EAAA9D,OACA2D,EAAAI,aAAAD,GAEAD,EAAAxC,OAAAsC,OAEA,CACA7C,EAAA,uCACAkD,QAAA,yFACAH,EAAA/C,EAAA,iCACA+C,EAAAxC,OAAAsC,GAGAA,EAAAT,SAAA,0CAAAA,SAAA,kCAAAA,SAAA,kCAAAC,KAAA,oBAOA,MAAA,CACAe,sBAxaA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IACAhC,EADAiC,EAAA,4DAEAC,EAAA,GAYA,OAXA1D,EAAAI,KAAAkD,EAAAK,UAAA,CAAAC,EAAAtD,KACAkB,EAAA,+CAAAlB,EAAAG,UAAA8C,wEAIAG,EAAAF,EAAA,8DAAA,GAEAhC,GAAAkC,EACAD,GAAA,oCAAAnD,EAAAG,yBAAAH,EAAAG,qBAAAH,EAAAG,8BAAAH,EAAAG,qCAAAe,oBAAAlB,EAAAG,yBAEAgD,GAAA,UACA,GAAAA,yFAAAJ,4GA0ZAQ,qBAtZA,SAAApD,EAAA8C,GACA,MAAA/B,EAAA,+CAAAf,KAAA8C,wEAGA,IAAAvD,EAAA,yBAAAS,OAAAvB,OAAA,CACA,MAAA4E,EAAA9D,EAAA,oCAAAS,qBAAAA,eAAAA,2CAAAA,qBAAAA,aAAAe,mBACAsC,EAAAC,UAAA,kBACAD,EAAAE,OAAAC,UAAA,OAgZAC,qBA5YA,SAAAzD,EAAA8C,GACAvD,EAAA,yBAAAS,OAAA0D,QAAA,CAAAC,QAAA,GAAA,IAAA,UAAA,WACApE,EAAAgB,MAAAwB,YAIA,MAAA6B,EAAArE,EAAA,2CAAAS,OACA,GAAA4D,EAAAnF,OACAiE,EAAAkB,OAMA,CACA,MAAAzC,EAAA5B,EAAA,0DACA,GAAA4B,EAAA1C,OAAA,CACA,MAAAwD,EAAA1C,EAAA,2DACAsC,EAAAV,EAAAnB,GACAiC,EAAAxD,OACAuD,EAAAC,EAAAjC,GAEAmC,EAAAnC,EAtDA,8DAsDA,KAAA,KAAA4D,OAEA,CACA,IAAAtB,EAAA/C,EAAA,iCACA,GAAA+C,EAAA7D,OACA6D,EAAAxC,OAAAP,EAAA,2CAAAS,YACA,CACAT,EAAA,uCACAkD,QAAA,0FACAH,EAAA/C,EAAA,iCACAA,EAAA,2CAAAS,OAAA6D,SAAAvB,KAOA,MAAAwB,EAAA,+BAAA9D,KAAA8C,QAAA,IAAAiB,MAAAC,YACAzB,EAAAhD,EAAA,2CAAAS,OACAuC,EAAA9D,QACA8D,EAAAZ,SAAA,wBAAAsC,IAAA,CAAAC,sBAAA,UACAC,mBAAA,OAAAL,KAAAM,oBAAA,YAAAC,kBAAA,UAkWA3B,wBAAAA,EACAb,4BAAAA,EACAG,2BAAAA,EACAG,8BAAAA,EACAmC,yBAjSA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAC,EAAApF,EAAA,mCACA+C,EAAA/C,EAAA,uCACAmF,EACAnF,EAAA,4CAAA0E,IAAA,CAAAW,QAAA,SAEArF,EAAA,4CAAA0E,IAAA,CAAAW,QAAA,UAGArF,EAAAI,KAAA4E,EAAA,CAAApB,EAAAtD,KAGA,GADAN,EAAAuC,KAAA0C,EAAAK,GAAAA,EAAA7E,QAAAH,EAAAG,QACAvB,OACA,GAAA,aAAAoB,EAAAiF,SAAA,CACA,MAAA3D,EAAA5B,EAAA,0DAEA,GAAA4B,EAAA1C,OACAyC,EAAAC,EAAAtB,EAAAG,YACA,CACA,IAAAqC,EAAA5B,EAAAZ,EAAAG,OAAAH,EAAAiF,SAAAjF,EAAAkF,SAAA,eAAAlF,EAAAe,MAAAf,EAAAgB,SAAA,UACA8D,EAAA7E,OAAAuC,GAEAoC,GAAA5E,EAAAG,QAAAT,EAAA,0DAAA0E,IAAA,CAAAe,aAAA,aACA,CACA,GAAAzF,EAAA,2CAAAM,EAAAG,YAAAvB,OAOAgG,GAAA5E,EAAAG,OACAT,EAAA,2CAAAM,EAAAG,YAAAsD,UAAAqB,GAGApF,EAAA,2CAAAM,EAAAG,YAAA6D,SAAAc,OAXA,CACAtC,EAAA5B,EAAAZ,EAAAG,OAAAH,EAAAiF,SAAAjF,EAAAkF,UAAA,EAAAlF,EAAAe,MAAAf,EAAAgB,SAAA,UACA,IACA8D,EAAA7E,OAAAuC,GACA,MAAA4C,GACA9F,QAAAC,IAAA6F,IAQAR,GAAA5E,EAAAG,QAAAT,EAAA,2CAAAM,EAAAG,YAAAiE,IAAA,CAAAe,aAAA,cAGA,GAAA,KAAAnF,EAAAO,gBACA,aAAAP,EAAAiF,SACA,GAAAvF,EAAA,2CAAAM,EAAAG,YAAAvB,OASAc,EAAA,2CAAAM,EAAAG,YAAA6D,SAAAvB,OATA,CACAD,EAAA5B,EAAAZ,EAAAG,OAAAH,EAAAiF,SAAAjF,EAAAkF,UAAA,EAAAlF,EAAAe,MAAAf,EAAAgB,SAAAxB,EAAA6F,cAAArF,EAAAO,iBACA,MAAA+E,EAAA5F,EAAA,iCACA4F,EAAA1G,OACA0G,EAAArF,OAAAuC,GAEA9C,EAAA,uCAAAO,OAAA,qFAAAuC,cAcA9C,EAAAI,KAAA4E,EAAA,CAAApB,EAAAtD,KAGA,IADAN,EAAAuC,KAAA0C,EAAAK,GAAAA,EAAA7E,QAAAH,EAAAG,QACAvB,QACA,aAAAoB,EAAAiF,SAAA,CACA,MAAA7C,EAAA1C,EAAA,2DACA,GAAA0C,EAAAxD,OAAA,CACA,MAAA2C,EAAAa,EAAAZ,KAAA,wBACAI,EAAAC,SAAAN,GAAA,EAGAgE,EADAnD,EAAAZ,KAAA,iBACA/C,MAAA,KACA8G,EAAA5D,KAAA3B,EAAAG,QACAiC,EAAAZ,KAAA,gBAAA+D,EAAA1G,KAAA,MAEAuD,EAAAZ,KAAA,uBAAAI,GACAQ,EAAAN,SAAA,0CAAAA,SAAA,kCAAAC,KAAA,cAAAH,OACA,CAEA,MAAAY,EAAA5B,EAAAZ,EAAAG,OAAA,YAAAH,EAAAkF,SAAA,gBAAAlF,EAAAe,MAAAf,EAAAgB,SAAAxB,EAAA6F,cAAArF,EAAAO,iBACA+E,EAAA5F,EAAA,iCACA4F,EAAA1G,OACA0G,EAAArF,OAAAuC,GAEA9C,EAAA,uCAAAO,OAAA,oFAAAuC,gBA4MAnB,0BAAAA,EACAmE,kCA5EA,SAAArF,EAAA8E,EAAApE,EAAA+D,EAAAa,GACA,MAAA/C,EAAAhD,EAAA,2CAAAS,OACA,GAAAuC,EAAA9D,OAaA8D,EAAAZ,SAAA,0CAAAA,SAAA,kCAAAA,SAAA,uCACAC,KAAAkD,GACAvC,EAAAZ,SAAA,wBAAAsC,IAAA,CAAAC,sBAAA,UACAC,mBAAA,OAAAzD,KAAA0D,oBAAA,YAAAC,kBAAA,aAhBA,CACA,MAAAhC,EAAA5B,EAAAT,EAAA8E,EAAApE,GAAA,EAAA4E,EAAA1E,MAAA0E,EAAAzE,SAAA,UACA,GAAAb,GAAAyE,EAAA,CACA,MAAAc,EAAAhG,EAAA,oCACAgG,EAAA9G,OACAc,EAAA8C,GAAAmD,YAAAD,GAEAhG,EAAA,mCAAAkD,QAAAJ,QAGA9C,EAAA,mCAAAO,OAAAuC,KAiEAoD,uBAtDA,WACA,MAAAC,EAAAnG,EAAA,0DACA,QAAAmG,EAAAjH,QAAAiH,GAqDAC,gCAnDA,SAAAxE,EAAAnB,GAGA,OAAA,GAFAmB,EAAAE,KAAA,iBACA/C,MAAA,KACAiD,QAAAvB,IAiDA4F,6BA1CA,SAAA5F,EAAA8E,EAAAC,EAAAO,GACA,MAAAX,EAAApF,EAAA,mCACA8C,EAAA5B,EAAAT,EAAA8E,EAAAC,EAAA,eAAAO,EAAA1E,MAAA0E,EAAAzE,SAAA,UACA8D,EAAA7E,OAAAuC,IAwCAwD,4BAlBA,SAAA7F,GACAT,EAAA,2CAAAS,OAAA+B,UAkBA+D,qBAzWA,SAAAvB,EAAAC,EAAAC,EAAAC,GAEA,MAAAqB,EAAAxG,EAAA,8CACAmF,GACAnF,EAAA,4CAAA0E,IAAA,CAAAW,QAAA,SAEArF,EAAAI,KAAA4E,EAAA,CAAApB,EAAAtD,KACA,MAAAmG,EAAAzG,EAAAuC,KAAA0C,EAAAK,GAAAA,EAAA7E,QAAAH,EAAAG,QAEA,GAAA,KAAAH,EAAAO,gBAAA,aAAAP,EAAAiF,SAAA,CACA,IAAAzC,EAAA5B,EACAZ,EAAAG,OAAAH,EAAAiF,SACAjF,EAAAkF,UAAA,EAAAlF,EAAAe,MAAAf,EAAAgB,SACAmF,EAAA,OAAA,SAAA3G,EAAA6F,cAAArF,EAAAO,iBAGA2F,EAAAjG,OAAAuC,GAIA,GAAA2D,EAAAvH,QACA,aAAAoB,EAAAiF,SAAA,CACA,MAAA3D,EAAA5B,EAAA,0DAEA,GAAA4B,EAAA1C,OACAyC,EAAAC,EAAAtB,EAAAG,YACA,CACAqC,EAAA5B,EAAAZ,EAAAG,OAAAH,EAAAiF,SAAAjF,EAAAkF,SAAA,eAAAlF,EAAAe,MAAAf,EAAAgB,SAAA,UACAkF,EAAAjG,OAAAuC,GAEAoC,GAAA5E,EAAAG,QAAAT,EAAA,0DAAA0E,IAAA,CAAAe,aAAA,YAQAzF,EAAAI,KAAA4E,EAAA,CAAApB,EAAAtD,KAGA,IADAN,EAAAuC,KAAA0C,EAAAK,GAAAA,EAAA7E,QAAAH,EAAAG,QACAvB,QACA,aAAAoB,EAAAiF,SAAA,CACA,MAAA7C,EAAA1C,EAAA,2DACA,GAAA0C,EAAAxD,OAAA,CACA,MAAA2C,EAAAa,EAAAZ,KAAA,wBACAI,EAAAC,SAAAN,GAAA,EAGAgE,EADAnD,EAAAZ,KAAA,iBACA/C,MAAA,KACA8G,EAAA5D,KAAA3B,EAAAG,QACAiC,EAAAZ,KAAA,gBAAA+D,EAAA1G,KAAA,MAEAuD,EAAAZ,KAAA,uBAAAI,GACAQ,EAAAN,SAAA,0CAAAA,SAAA,kCAAAC,KAAA,cAAAH,OACA,CAEA,MAAAY,EAAA5B,EAAAZ,EAAAG,OAAA,YAAAH,EAAAkF,SAAA,gBAAAlF,EAAAe,MAAAf,EAAAgB,UACAkF,EAAAjG,OAAAuC,UA1IA,GCAA4D,EAAA,MACA,MAuBAC,EAAA,WACA3G,EAAA,yBAAA4G,SAAA,6BACA5G,EAAA,iCAAA4G,SAAA,qCACA5G,EAAA,iCAAA0E,IAAA,CAAAW,QAAA,UAEAwB,WAAA,KAAA7G,EAAA,8BAAA8G,SAAA,MAEAC,EAAA,WACA/G,EAAA,iCAAAgH,YAAA,qCACAhH,EAAA,iCAAA0E,IAAA,CAAAW,QAAA,SAEA4B,KAEAA,EAAA,WACA,MAAAxG,EAAAM,IAAAmG,YACA3D,EAAAxC,IAAAoG,WACAC,EAAApH,EAAA,gCACAL,EAAAM,EAAAmH,GACAC,EAAA,GAGA,GAFAC,aAAAC,QAAA,aAAA,OA3BA,WACA,MAEAC,EAFAxH,EAAA,4BAAAyH,WACAC,KAAA,4BACAD,WAAAC,KAAA,iBACAF,EAAAG,IAAA,YACAH,EAAAG,IAAA,aAuBAC,GACA,IAAAjI,EAAAkI,0BAAA,OAAA,EASA,IAAAxF,EAAA,kBAAA1C,EAAAkI,0BAEA,GADA,KAAAlI,EAAAmI,sCAAAzF,GAAA,KAAA1C,EAAAmI,qCACA,KAAAnI,EAAAoI,8BAAA,CAEA1F,GAAA,KADAvC,EAAA4B,YAAA/B,EAAAoI,+BAKAV,EAAAW,gBAAA,GAAA3F,EACAgF,EAAAY,OAAA,UACAZ,EAAA5G,OAAAA,EACA4G,EAAAa,KAAA,IAAA1D,KAGA,MAAA2D,EAAA,CACAC,KAAA,gBACAC,OAAA,wCACA5H,OAAAA,EACAd,KAAA0H,EACA9D,MAAAA,GAEAxC,IAAAuH,aAAAC,YAAAJ,IAQAlI,EAAA,SAAAmH,GACA,MAAAoB,EAAApB,EAAAqB,iBACAC,EAAA,GAMA,OAJA1I,EAAA2I,IAAAH,EAAA,CAAAI,EAAAC,KACAH,EAAAE,EAAAE,MAAAF,EAAAtI,QAGAoI,GAgQA,MAAA,CACA/B,UAAAA,EACAI,qBAAAA,EACAE,qBAAAA,EACA8B,WAlRA,WACA/I,EAAA,yCACAI,MAAA,SAAAC,GACA,GAAAA,EAAAL,EAAAgB,MAAAgI,OAAAhJ,EAAAgB,MAAAgD,WAgRA/D,YAAAA,EACAgJ,UApQA,SAAAC,GACA,MAAAC,EAAAnJ,EAAA,gCAAAoJ,KAAAF,GAIA,IAAAG,EAAAC,EAAAC,EAEAC,EAiEA,SAAAC,IACA,MAAAhJ,EAAAM,IAAAmG,YACA3D,EAAAxC,IAAAoG,WACAC,EAAApH,EAAA,gCAEAmI,EAAA,CACAC,KAAA,mBACAC,OAAA,wBACA5H,OAAAA,EACAd,KALAM,EAAAmH,GAMA7D,MAAAA,GAEAxC,IAAAuH,aAAAC,YAAAJ,GAEA,SAAAuB,IACA,MAAAjJ,EAAAM,IAAAmG,YACA3D,EAAAxC,IAAAoG,WACAnH,EAAA,yBAAAgH,YAAA,6BAgHA,WACA,MAAAvG,EAAAM,IAAAmG,YACAyC,EAAA,IAAAC,SACAC,EAAA7J,EAAA,uBAAA,GAAA6J,MAAA,GAEA,GADAF,EAAApJ,OAAA,OAAAsJ,IACAA,EAAA,OACA7J,EAAA8J,KAAA,CACAnL,IAAA,WAAAuK,EAAA3F,0CAAA9C,IACA2H,KAAA,OACAzI,KAAAgK,EACAI,aAAA,EACAC,aAAA,EACAC,aAGAC,EAAAC,oBAAA1J,EAAAyI,EAAA3F,QAEA0G,MAAAG,GAIA,OAHAF,EAAAG,iBAAA5J,EAAAyI,EAAA3F,OACAvD,EAAA,iCAAA8B,KAAA,QAAA,CAAA+G,EAAArH,IAAAA,GAAAA,EAAA8I,QAAA,2BAAA,KAEAF,EAAAG,QACA,KAAA,IACAvK,EAAAwK,QAAAC,IAAA,CACAC,MAAA,QACArI,KAAA,yCACAsI,QAAA,EACAC,WAAA,YAKAX,QAAAY,GACAX,EAAAG,iBAAA5J,EAAAyI,EAAA3F,OAEAvD,EAAA,iCAAA8B,KAAA,QAAA,CAAA+G,EAAArH,IAAAA,GAAAA,EAAA8I,QAAA,2BAAA,QAjJAQ,GAEA/D,IAEA0C,IAEA,MAAA9I,EAAAX,EAAA,8BAAA+K,MAEAb,EAAAc,UAAA,CACAtK,MAAAV,EAAA,+BAAA+K,MACApK,SAAAA,IAEAkG,WAAA,KACAqD,EAAAG,iBAAA5J,EAAA8C,IACA,MAKA,SAAA0H,EAAA5B,EAAAC,GACA,GAAAE,EAAA,OAAA,EAEA,MAAA0B,EAAA7B,EAAAvH,KAAA,gBACA,GAAA,QAAAoJ,EAAA,CACA,GAAA,IAAAlL,EAAA,8BAAA+K,MAEA,OADA/K,EAAA,8BAAA0E,IAAA,CAAAyG,OAAA,mBACA,EAEA,IAAAxK,EAAAX,EAAA,8BAAA+K,MACA/K,EAAA,8BAAA0E,IAAA,CAAAyG,OAAA,mBAEAjB,EAAAc,UAAA,CACArK,SAAAA,IAEAb,EAAAsL,yCAAAzK,EAAA,IAAA,GAEA,GAAA,SAAAuK,EAAA,CACA,MAAAG,EAAArL,EAAA,+BAAA+K,MACA,IAAAjL,EAAAwL,QAAAD,IAAA,IAAAA,EAEA,OADArL,EAAA,+BAAA0E,IAAA,CAAAyG,OAAA,mBACA,EAEAxK,EAAAX,EAAA,8BAAA+K,MACAjL,EAAAsL,yCAAAzK,EAAA0K,GAAA,GAsCA,SAAA3K,EAAAC,GACA,IAAA4K,EAAAvL,EAAA,kCAAAqC,OACArC,EAAA8J,KAAA,CACAnL,IAAA,WAAAoC,IAAAoG,8DAAApG,IAAAmG,eAAAvG,KAAAD,IACA0H,KAAA,MACAzI,KAAA,GACAoK,aAAA,EACAC,aAAA,EACAC,aAIAjK,EAAA,kCAAAqC,KAAA,eAEA4H,MAAAG,GACApK,EAAA,kCAAAqC,KAAA,SACAwE,WAAA,KACA7G,EAAA,kCAAAqC,KAAAkJ,IACA,MAEAtB,QAAAY,GACA7K,EAAA,kCAAAqC,KAAA,qCACArC,EAAA,kCAAA8B,KAAA,2BAAA,WA3DA0J,CAAAH,EAAA1K,GACAX,EAAA,+BAAA0E,IAAA,CAAAyG,OAAA,mBAGA,GAAA,YAAAD,EAAA,CACA,MAAAO,EAAAzL,EAAA,8BAAA+K,MAEA,IAAAjL,EAAA4L,QAAAD,IAAA,IAAAA,EAEA,OADAzL,EAAA,8BAAA0E,IAAA,CAAAyG,OAAA,mBACA,EAEAnL,EAAA,8BAAA0E,IAAA,CAAAyG,OAAA,mBACA1B,IAUA,GAFAD,GAAA,EACAH,EAAArF,OACAsF,EAAApK,OAAA,CACAoK,EAAAN,OAGA,MAAA2C,EAAArC,EAAAxH,KAAA,gBACA,SAAA6J,GAAA3L,EAAA,+BAAA8G,QAAA8E,SACA,YAAAD,GAAA3L,EAAA,8BAAA8G,QAAA8E,SACA,OAAAD,GAAA3L,EAAA,wCAAA8G,QAAA8E,cAEAlC,IAEAF,GAAA,EAtKAxJ,EAAA,QAAAO,OAAA4I,GAOAnJ,EAAA,yCAAAN,GAAA,YAAA,SAAA4F,GACA,IAAAA,EAAAuG,UAEAvG,EAAAwG,iBACAzC,EAAArJ,EAAAgB,MACAsI,EAAAtJ,EAAAgB,MAAA+K,OACAd,EAAA5B,EAAAC,OAGAtJ,EAAA,SAAAgM,OAAA,WACA3C,EAAArJ,EAAAgB,MAAAiL,SACA3C,EAAAtJ,EAAAgB,MAAAiL,SAAAF,OACAd,EAAA5B,EAAAC,MAGAtJ,EAAA,SAAAgM,OAAA,WACA,GAAAxC,EAAA,OAAA,EACAxJ,EAAA,8BAAA0E,IAAA,CAAAyG,OAAA,mBAEA3B,GAAA,EAEAH,EAAArJ,EAAAgB,MAAAiL,SACA3C,EAAAtJ,EAAAgB,MAAAiL,SAAAF,OAMA1C,EAAArF,OACAsF,EAAAN,OACAQ,GAAA,KAIAxJ,EAAA,2EAAAgM,MAAA,KACAhM,EAAA,yBAAAgH,YAAA,6BAEAD,KAEA,IAEA/G,EAAA,aAAAgM,OAAA,WACA,GAAAxC,EAAA,OAAA,EACAA,GAAA,EAEAH,EAAArJ,EAAAgB,MAAAiL,SACA1C,EAAAvJ,EAAAgB,MAAAiL,SAAAC,OAIA7C,EAAArF,OACAuF,EAAAP,OACAQ,GAAA,KAGAxJ,EAAA,WAAAgM,MAAA,KACAtC,KACA,IAEA1J,EAAA,UAAAgM,OAAA,WACAlM,EAAAqM,qBAAAnM,EAAAgB,MAAAc,KAAA,eAAA9B,EAAAgB,MAAAc,KAAA,kBA+KA9B,EAAA,uBAAAN,GAAA,SAAA4F,IACA,MAAAuE,EAAA7J,EAAA,uBAAA,GAAA6J,MAAA,GAEAlL,EAAAyN,IAAAC,gBAAAxC,GACA7J,EAAA,iCAAA0E,IAAA,CAAAC,sBAAA,UACAC,mBAAA,OAAAjG,KAAAkG,oBAAA,YAAAC,kBAAA,YAYAwH,iBAjWA,WACA,MAEA9E,EAFAxH,EAAA,4BAAAyH,WACAC,KAAA,4BACAD,WAAAC,KAAA,iBACAF,EAAA9H,GAAA,YAAA,SAAA4F,GACAqB,OAEAa,EAAA9H,GAAA,aAAA,SAAA6M,GACA,GAAAA,EAAAC,OACA7F,UAVA,GCDA8F,EA0EA,CACAC,SA1EA,SAAAxD,GACA,MAAAC,EAAAnJ,EAAA,oCAAAoJ,KAAAF,GACAlJ,EAAA,QAAAO,OAAA4I,IAyEAwD,kBArEA,WAGA,MAAAC,EAAAnM,IACA,MAAA8C,EAAAxC,IAAAoG,WACAnH,EAAA8J,KAAA,CACAnL,IAAA,WAAA4E,2CAAA9C,IACA2H,KAAA,MACAzI,KAAA,GACAoK,aAAA,EACAC,aAAA,EACAC,aAEAjK,EAAA,uCAAA0E,IAAA,CAAAC,sBAAA,UACAC,mBAAA,sEAAAC,oBAAA,YAAAC,kBAAA,OAAA+H,mBAAA,YAEA7M,EAAA,kCAAAqC,KAAA,IACArC,EAAA,kCAAAqC,KAAA,IAEArC,EAAA,6BAAA4G,SAAA,6BACA9G,EAAAgN,sBAIA7C,MAAAG,GACApK,EAAA,6BAAAgH,YAAA,6BACAlH,EAAAiN,sBAEA9C,QAAAY,GACA,MAAAtG,EAAA,+BAAA9D,KAAA8C,QAAA,IAAAiB,MAAAC,YACA,IAAA9D,EAAAkK,EAAA9E,KAAApF,SACA,MAAAA,GAAA,IAAAA,IAAAA,EAAA,aACA,MAAAU,EAAAwJ,EAAA9E,KAAA1E,OAAA,GACAC,EAAAuJ,EAAA9E,KAAAzE,UAAA,GAEAtB,EAAA,kCAAAqC,KAAA1B,GACAX,EAAA,kCAAAqC,KAAAhB,GACA,IAAAC,EACAtB,EAAA,sCAAAgE,OAEAhE,EAAA,sCAAA8B,KAAA,CAAAkL,KAAAlN,EAAA4B,YAAAJ,GAAA2G,OAAA,WAGAjI,EAAA,uCAAA0E,IAAA,CAAAC,sBAAA,UACAC,mBAAA,OAAAL,KAAAM,oBAAA,YAAAC,kBAAA,OAAA+H,mBAAA,gBAMA7M,EAAA,kBAAAN,GAAA,eAAA,SAAA4F,EAAA2H,IACAA,GAAAA,EAAAjL,QAAA,MAAA,GACA4K,EAAAK,MAGAjN,EAAA,kBAAAN,GAAA,QAAA,WAAA,WACA,MAAAe,EAAAT,EAAAgB,MAAAc,KAAA,eACA8K,EAAAnM,MAIAT,EAAA,mCAAAN,GAAA,QAAA,KACAM,EAAA,6BAAAgH,YAAA,6BACAlH,EAAAiN,yBCjEAG,EACA,SAAAC,EAAAhP,GAyTA,OAnTAsO,EAAAE,oBAEA3M,EAAA,0BAAAN,GAAA,QAAA,KACA,MAAAe,EAAAM,IAAAmG,YACA3D,EAAAxC,IAAAoG,WACAxG,EAAAX,EAAA,8BAMA,GALAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,8BAGA,IAAAW,EAAAoK,MAEA,OADApK,EAAA+D,IAAA,CAAAyG,OAAA,mBACA,EAEAxK,EAAA+D,IAAA,CAAAyG,OAAA,MAkBA,MAAA/D,EAAApH,EAAA,yBAGAmI,EAAA,CACAC,KAAA,mBACAC,OAAA,wBACA5H,OAAAA,EACAd,KANAG,EAAAG,YAAAmH,GAOA7D,MAAAA,GAEAxC,IAAAuH,aAAAC,YAAAJ,GACApH,IAAAuH,aAAA8E,eAAA,CACA3M,OAAA8C,EACAuF,KAAAnI,EAAAoK,MACAsC,QAAA,YAIA,SAAAC,OAAAC,cACAvN,EAAA,qBAAAwN,SAAA,0BACAxN,EAAA,qBAAAgH,YAAA,yBACAlH,EAAAiN,uBAEA/M,EAAA,qBAAA4G,SAAA,yBAEA5G,EAAA,mCAAAgJ,OACAhJ,EAAA,oCAAAgE,OAEAlE,EAAAgN,yBAWA9M,EAAA,mBAAAN,GAAA,QAAA,KACA,IAAA+N,EAAAzN,EAAA,+BAAA8B,KAAA,cAAA,EACA4L,EAAA1N,EAAA,+BAAA8B,KAAA,qBAAA,EACA,MAAAsD,EAAApF,EAAA,mCAEA,SAAA0N,GACA1N,EAAA8J,KAAA,CACAnL,IAAA,WAAAoC,IAAAoG,wDAAAsG,KACArF,KAAA,MACAzI,KAAA,GACAoK,aAAA,EACAC,aAAA,EACAC,aAGAjK,EAAA,mCAAA0E,IAAA,CAAAW,QAAA,SACArF,EAAA,4CAAA0E,IAAA,CAAAW,QAAA,SACAD,EAAAV,IAAA,CAAAW,QAAA,UAEA4E,MAAAG,GACApK,EAAA,wBAAA0E,IAAA,CAAAW,QAAA,SACAD,EAAAV,IAAA,CAAAW,QAAA,WAEA4E,QAAAY,GACAzF,EAAAV,IAAA,CAAAW,QAAA,UACArF,EAAA,wBAAA0E,IAAA,CAAAW,QAAA,SACArF,EAAA,mCAAA0E,IAAA,CAAAW,QAAA,UACArF,EAAA,+BAAA8B,KAAA,kBAAA,QACA,MAAAmD,EAAAlE,IAAAuH,aAAAqF,oBACA1M,EAAA8D,yBAAA8F,EAAAlL,KAAAsF,EAAAlE,IAAAmG,YAAA2D,EAAA1F,eASAnF,EAAA,4CAAAN,GAAA,QAAA,KACA,IAAA+N,EAAAzN,EAAA,+BAAA8B,KAAA,cAAA,EACA2L,IACAzN,EAAA8J,KAAA,CACAnL,IAAA,WAAAoC,IAAAoG,wDAAAsG,KACArF,KAAA,MACAzI,KAAA,GACAoK,aAAA,EACAC,aAAA,EACAC,aAEAjK,EAAA,oBAAAgJ,OACAhJ,EAAA,4CAAA0E,IAAA,CAAAW,QAAA,UAGA4E,MAAAG,GACApK,EAAA,oBAAAgE,OACAhE,EAAA,4CAAA0E,IAAA,CAAAW,QAAA,WAGA4E,QAAAY,GACA7K,EAAA,4CAAA0E,IAAA,CAAAW,QAAA,UACArF,EAAA,oBAAAgE,OACAhE,EAAA,+BAAA8B,KAAA,YAAA2L,GACA,MAAAxI,EAAAlE,IAAAuH,aAAAqF,oBACA1M,EAAA8D,yBAAA8F,EAAAlL,KAAAsF,EAAAlE,IAAAmG,YAAA2D,EAAA1F,eAOAnF,EAAA,qDAAAN,GAAA,QAAA,KACAM,EAAA,+BAAAwN,SAAA,0BACAxN,EAAA,+BAAAgH,YAAA,yBACAlH,EAAAiN,uBAEAjN,EAAAgN,qBACA9M,EAAA,+BAAA4G,SAAA,4BAIA5G,EAAA,kCAAAN,GAAA,SAAA,WACA,MAAAkO,EAAA5N,EAAAgB,MAAAc,KAAA,4BACAyJ,EAAAvL,EAAAgB,MAAAqB,OA2BA,MA1BA,QAAAuL,GACA5N,EAAA8J,KAAA,CACAnL,IAAA,WAAAoC,IAAAoG,8DAAApG,IAAAmG,wBACAkB,KAAA,MACAzI,KAAA,GACAoK,aAAA,EACAC,aAAA,EACAC,aAIAjK,EAAA,kCAAAqC,KAAA,eAEA4H,MAAAG,GACApK,EAAA,kCAAAqC,KAAA,SACAwE,WAAA,KACA7G,EAAA,kCAAAqC,KAAAkJ,IACA,MAEAtB,QAAAY,GACA7K,EAAA,kCAAAqC,KAAA,qCACArC,EAAA,kCAAA8B,KAAA,2BAAA,YAKA,KAEA9B,EAAA,2BAAAN,GAAA,QAAA,KACA,MAAAmO,EAAAtP,SAAAuP,cAAA,SACAzL,EAAAiL,OAAA9O,SAAAwO,KAEAzO,SAAAwP,KAAAC,YAAAH,GACAA,EAAAvN,MAAA+B,EACAwL,EAAAjC,SACArN,SAAA0P,YAAA,QACA1P,SAAAwP,KAAAG,YAAAL,GACA7N,EAAAwK,QAAAC,IAAA,CACApI,KAAA,+BAIArC,EAAA,sBAAAN,GAAA,QAAA,KACA,SAAA4N,OAAAC,YACAvN,EAAA,qBAAAwN,SAAA,yBACAxN,EAAA,qBAAAgH,YAAA,0BAEAhH,EAAA,qBAAA4G,SAAA,yBACA5G,EAAA,mCAAAgJ,OACAhJ,EAAA,oCAAAgE,OACAlE,EAAAgN,uBAOApG,EAAAqC,aAEArC,EAAAC,eAIA3G,EAAA,2BAAAN,GAAA,QAAA,KACAM,EAAA,qBAAAwN,SAAA,0BACAxN,EAAA,qBAAAgH,YAAA,yBACAlH,EAAAiN,uBAEAjN,EAAAgN,qBACA9M,EAAA,qBAAA4G,SAAA,4BAGA5G,EAAA,+BAAAN,GAAA,QAAA,KACAM,EAAA,yBAAAwN,SAAA,yBACAxN,EAAA,yBAAAgH,YAAA,yBACAhH,EAAA,yBAAA4G,SAAA,2BAIA5G,EAAA,6BAAAN,GAAA,QAAA,KACA,MAAAe,EAAAM,IAAAmG,YACA3D,EAAAxC,IAAAoG,WACAmG,OAAAC,YAAA,MACA,MAAApF,EAAA,CACAC,KAAA,mBACAC,OAAA,0BACA3H,MAAAV,EAAA,4BAAA+K,MACAtK,OAAAA,EACA8C,MAAAA,GAGAxC,IAAAuH,aAAAC,YAAAJ,GACAnI,EAAA,qBAAAgH,YAAA,yBACAhH,EAAA,mCAAAgE,OACAhE,EAAA,oCAAAgJ,OAEAmF,EAAAC,0BAGAtO,EAAAiN,qBAEA/M,EAAA,yBAAAS,OAAAqB,KAAA,CAAAN,MAAA,KACA0I,EAAAmE,eAKArO,EAAA,iBAAAN,GAAA,SAAA4F,IACA,MAAA7E,EAAAM,IAAAmG,YACAyC,EAAA,IAAAC,SACAC,EAAA7J,EAAA,iBAAA,GAAA6J,MAAA,GACAF,EAAApJ,OAAA,OAAAsJ,GACAA,GACA7J,EAAA8J,KAAA,CACAnL,IAAA,WAAAuK,WAAA3F,0CAAA9C,IACA2H,KAAA,OACAzI,KAAAgK,EACAI,aAAA,EACAC,aAAA,EACAC,aAEAC,EAAAC,oBAAA1J,EAAAyI,WAAA3F,QAEA0G,MAAAG,GACAF,EAAAG,iBAAA5J,EAAAyI,WAAA3F,QAEA0G,QAAAY,GACAX,EAAAG,iBAAA5J,EAAAyI,WAAA3F,YAMAvD,EAAA,4BAAAN,GAAA,QAAA,KACA,MAAAiB,EAAAX,EAAA,8BAAA+K,MACArK,EAAAV,EAAA,2BAAA+K,MAEAjL,EAAAwO,wBAAA3N,EAAAD,KAGAV,EAAA,2BAAAN,GAAA,QAAA,KACA,MAAAiB,EAAAX,EAAA,8BAAA+K,MACArK,EAAAV,EAAA,2BAAA+K,MAEAjL,EAAAwO,wBAAA3N,EAAAD,GACAV,EAAA,qBAAAgH,YAAA,2BAGAhH,EAAA,+BAAAN,GAAA,QAAA,KACAI,EAAAiN,uBAGA,IC5TAwB,EACA,CAAApB,EAAAhP,KACA,MAAAsC,EAAAM,IAAAmG,YAEAR,EAAAuC,UAAAC,YAIA,OAAA5B,aAAAkH,QAAA,eACA9H,EAAA4F,mBAIAG,EAAAC,SAAAxD,YAIAlJ,EAAA,QAAAO,OAAA4I,GAEA,IAAAA,EAAAnJ,EAAA,4BAAAoJ,KAAAF,YACAlJ,EAAA,QAAAO,OAAA4I,GAEAA,EAAAnJ,EAAA,sCAAAoJ,KAAAF,YACAlJ,EAAA,QAAAO,OAAA4I,GAEAA,EAAAnJ,EAAA,oCAAAoJ,OACApJ,EAAA,QAAAO,OAAA4I,GAGA,MAAA3H,EAAA,gDAAAf,KAAAyI,WAAA3F,mDACA0B,EAAAlE,IAAAuH,aAAAqF,oBACAc,EAAAxN,EAAAmC,sBAAA8F,WAAAwF,iBAAAC,0BAAA1J,EAAAiE,WAAA3F,MAAA2F,WAAAwF,iBAAAE,UAEA5O,EAAA,cAAAO,OAAA,4EAAAkO,kGAAAjN,qBAEA,KAAA0H,WAAAwF,iBAAAnB,YACAD,OAAAC,YAAA,QAEAD,OAAAC,YAAA,MAUA,MAAApF,EAAA,CACAC,KAAA,mBACAC,OAAA,yBACA5H,OAAAA,EACA8C,MAAA2F,WAAA3F,MACA5D,KAAAuJ,WAAAwF,kBAaA,OAXA3N,IAAAuH,aAAAC,YAAAJ,GACA,aAAAe,WAAAwF,iBAAAnJ,UACAxE,IAAAuH,aAAA8E,eAAA,CACA3M,OAAAA,EACAqI,KAAA,YACAuE,QAAA,YAMA,ICjEAwB,EAqJA,CACAC,iCArJA,CAAA3B,EAAAhP,KACA,MAAAoF,EAAAxC,IAAAoG,WAGA,OADAlG,EAAA4C,qBAAA1F,EAAA4Q,QAAAtO,OAAA8C,GACA,IAkJAyL,+BAhJA,CAAA7B,EAAAhP,KACA,MAAAoF,EAAAxC,IAAAoG,WAGA,OADAlG,EAAAiD,qBAAA/F,EAAA4Q,QAAAtO,OAAA8C,GACA,IA6IA0L,2BA3IA,CAAA9B,EAAAhP,EAAAC,KACA,MAAA8Q,EAAAnO,IAAAmG,YAEA,GAAA,2BAAA/I,EAAA4Q,QAAA1G,OAAA,CACA,MAAA8G,EAAAhR,EAAA4Q,QAAAI,eACAnP,EAAA,mBAAAqC,KAAA8M,GAoEA,GAJA,gCAAAhR,EAAA4Q,QAAA1G,QACA6B,EAAAkF,oBAAAjR,EAAA4Q,QAAAtO,OAAAtC,EAAA4Q,QAAAxL,OAGA,iCAAApF,EAAA4Q,QAAA1G,OAAA,CACA,IAAA9D,EAAA,+BAAApG,EAAA4Q,QAAAtO,UAAAtC,EAAA4Q,QAAAxL,YAAA,IAAAiB,MAAAC,YAEAyK,GAAA/Q,EAAA4Q,QAAAtO,QACAyJ,EAAAG,iBAAA6E,EAAA/Q,EAAA4Q,QAAAxL,OACA2G,EAAAmF,aAAAH,IAIAhF,EAAAkF,oBAAAjR,EAAA4Q,QAAAtO,OAAAtC,EAAA4Q,QAAAxL,OAGA4K,EAAAmB,mBAAAnR,EAAA4Q,QAAAtO,SAGA8O,EAAAtO,EAAAiF,0BAEAjF,EAAAU,0BAAA4N,EAAApR,EAAA4Q,QAAAtO,QAEAQ,EAAAoF,6BAAAlI,EAAA4Q,QAAAtO,OAAA,YAAA8D,EAAA,IAGAtD,EAAAqF,4BAAAnI,EAAA4Q,QAAAtO,QAMA,GAAA,gCAAAtC,EAAA4Q,QAAA1G,OAAA,CAEA,IAAAkH,EAAAtO,EAAAiF,yBACA,aAAA/H,EAAA4Q,QAAAxJ,UACAgK,EACAtO,EAAAU,0BAAA4N,EAAApR,EAAA4Q,QAAAtO,QAEAQ,EAAAoF,6BAAAlI,EAAA4Q,QAAAtO,OAAAtC,EAAA4Q,QAAAxJ,SAAApH,EAAA4Q,QAAA5N,IAAAhD,EAAA4Q,QAAAhJ,MAGA9E,EAAAqF,4BAAAnI,EAAA4Q,QAAAtO,UAEA8O,GACAtO,EAAAmF,gCAAAmJ,EAAApR,EAAA4Q,QAAAtO,SACAQ,EAAAqB,4BAAAiN,EAAApR,EAAA4Q,QAAAtO,QAGAQ,EAAA6E,kCAAA3H,EAAA4Q,QAAAtO,OAAAtC,EAAA4Q,QAAAxJ,SAAApH,EAAA4Q,QAAA5N,IAAA+N,EAAA/Q,EAAA4Q,QAAAhJ,OAKAmJ,GAAA/Q,EAAA4Q,QAAAtO,QACAyJ,EAAAG,iBAAA6E,EAAA/Q,EAAA4Q,QAAAxL,OACA4K,EAAAqB,iBAAArR,EAAA4Q,QAAAtO,OAAAtC,EAAA4Q,QAAAhJ,QAIAmE,EAAAkF,oBAAAjR,EAAA4Q,QAAAtO,OAAAtC,EAAA4Q,QAAAxL,OACA4K,EAAAsB,qBAAAtR,EAAA4Q,QAAAtO,OAAAtC,EAAA4Q,QAAAhJ,OAIA,MAAA,KCzJAmE,EA6IA,CACAc,UA7IA,SAAArL,GACA2N,OAAAC,YAAA,QACAxM,IAAAuH,aAAA8E,eAAA,CACA3M,OAAAM,IAAAmG,YACA4B,KAAAnJ,EAAAgB,SACA0M,QAAA,aAyIAgB,WAtIA,WACAf,OAAAC,YAAA,SACAxM,IAAAuH,aAAA8E,eAAA,CACA3M,OAAAM,IAAAmG,YACA4B,KAAA,YACAuE,QAAA,aAkIAgC,aA/HA,SAAA5O,GACA,MAAAiP,EAAA1P,EAAA,4BAAAS,OACAiP,EAAAxQ,QACAwQ,EAAAhL,IAAA,CAAAiL,OAAA,MAAAC,aAAA,UA6HAvF,iBA1HA,SAAA5J,EAAA8C,GACA,MAAAgB,EAAA,+BAAA9D,KAAA8C,QAAA,IAAAiB,MAAAC,YACAiL,EAAA1P,EAAA,4BAAAS,OACAiP,EAAAxQ,QACAwQ,EAAAhL,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,OACA+H,mBAAA,SAGA7M,EAAA,2CAAA0E,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,cAEA7E,EAAA,uCAAA0E,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,SAEA9E,EAAA,qBAAA0E,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,SAGA,MAAA9B,EAAAhD,EACA,2CAAAS,OAEAuC,EAAA9D,QACA8D,EACAZ,SAAA,wBACAsC,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,UAmFAqF,oBA9EA,SAAA1J,EAAA8C,GACA,MAAAgB,EACA,iEACAmL,EAAA1P,EAAA,4BAAAS,OACAiP,EAAAxQ,QACAwQ,EAAAhL,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,OACA+H,mBAAA,SAGA7M,EAAA,2CAAA0E,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,cAEA7E,EAAA,uCAAA0E,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,SAEA9E,EAAA,qBAAA0E,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,SAGA,MAAA9B,EAAAhD,EACA,2CAAAS,OAEAuC,EAAA9D,QACA8D,EACAZ,SAAA,wBACAsC,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,UAsCAsK,oBAjCA,SAAA3O,EAAA8C,GACA,MAAAgB,EAAA,+BAAA9D,KAAA8C,QAAA,IAAAiB,MAAAC,YACAiL,EAAA1P,EAAA,4BAAAS,OACAiP,EAAAxQ,QACAwQ,EAAAhL,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,OACA+H,mBAAA,SAGA,MAAA7J,EAAAhD,EACA,2CAAAS,OAEAuC,EAAA9D,QACA8D,EACAZ,SAAA,wBACAsC,IAAA,CACAC,sBAAA,UACAC,mBAAA,OAAAL,KACAM,oBAAA,YACAC,kBAAA,WCrIAhF,EAAA,MACA,MA+CA+P,EAAA,SAAA1J,GACA,MAAA2J,EAAA9P,EAAAmG,GACA,GAAA2J,EAAA5Q,QAAA,IAAA4Q,EAAA,GAAA,OAAA,EACAA,EAAA3L,QAAA,CAAA4L,UAAAD,EAAA,GAAAE,cAAA,CAAAC,SAAA,IAAAC,OAAA,KA0DA5E,EAAA,SAAA5K,GAEA,MAAA,IAAAA,GADA,gEACAyP,KAAAzP,IAyDA0P,EAAA,SAAAC,GAEA,MADA,CAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YACAA,EAAA,IAcA,MAAA,CACAlE,qBAxLA,SAAA1L,EAAA8C,GACAvD,EAAA8J,KAAA,CACAnL,IAAA,WAAA4E,iDAAA9C,IACA2H,KAAA,MACAzI,KAAA,GACAoK,aAAA,EACAC,aAAA,EACAC,aACAC,EAAAC,oBAAA1J,EAAA8C,IAEA0G,MAAAG,GACAF,EAAAG,iBAAA5J,EAAA8C,IAEA0G,QAAAY,GACAX,EAAAG,iBAAA5J,EAAA8C,OA2KA+M,mBAtKA,SAAA7P,EAAA8C,GACA,MAAA4E,EAAA,CACAC,KAAA,mBACAC,OAAA,wCACA5H,OAAAA,EACA8C,MAAAA,GAGAxC,IAAAuH,aAAAC,YAAAJ,IA+JAoI,mBA7JA,SAAAlJ,GACA,MAAAmJ,EAAA,UAAAnJ,EAAA5G,OAAA6J,QAAA,aAAAmG,GACA,MAAAA,EAAA,IACA,IAAAA,EAAAC,WAAA,OAIA,IAAAC,EAAA,GAAA,IAAAnM,KAAA6C,EAAAa,MAAA0I,aACAC,EAAA,GAAA,IAAArM,KAAA6C,EAAAa,MAAA4I,WACA,IAAAH,EAAAzR,SAAAyR,EAAA,IAAAA,GACA,IAAAE,EAAA3R,SAAA2R,EAAA,IAAAA,GACA,MAEApN,EAAA,wBAAA+M,MAFA,GAAAK,KAAAF,cAEAtJ,EAAAhF,WAEArC,EAAAzB,UAAAmJ,KAAA,sBAAAnH,OAAAkD,GACAoM,EAAA,uBA8IAA,yBAAAA,EACAzE,yCAvIA,SAAAzK,EAAAD,EAAAqQ,GACAzD,OAAAC,YAAA,QACA,MAAApF,EAAA,CACAC,KAAA,mBACAC,OAAA,yBACA3H,MAAAA,EACAD,OAAAM,IAAAmG,YACA4B,KAAAnI,EACA4C,MAAAxC,IAAAoG,WACA4J,YAAAA,GAEAhQ,IAAAuH,aAAAC,YAAAJ,IA6HAmG,wBA3HA,SAAA3N,EAAAD,GACA,GAAA,IAAAC,IAAA2K,EAAA5K,GAKA,OAJA4K,EAAA5K,KACAV,EAAA,2BAAA8G,QACA9G,EAAA,2BAAA4G,SAAA,uCAEA,EACA,CACA5G,EAAA,2BAAAgH,YAAA,qCAEAsG,OAAAC,YAAA,QAMA,MAAApF,EAAA,CACAC,KAAA,mBACAC,OAAA,yBACA3H,MAAAA,EACAD,OAAAM,IAAAmG,YACA4B,KAAAnI,EACA4C,MAAAxC,IAAAoG,WACA4J,aAAA,GAGAhQ,IAAAuH,aAAAC,YAAAJ,GAEA+B,EAAAc,UAAA,CACAtK,MAAAA,EACAC,SAAAA,IAGAX,EAAA,mCAAAgJ,OACAhJ,EAAA,oCAAAgE,SA0FAsH,QAAAA,EACAI,QA9EA,SAAA/M,GAEA,MADA,0HACAwR,KAAAxR,IA6EAsB,YAzEA,SAAAmH,GACA,MAAAoB,EAAApB,EAAAqB,iBACAC,EAAA,GAMA,OAJA1I,EAAA2I,IAAAH,EAAA,CAAAI,EAAAC,KACAH,EAAAE,EAAAE,MAAAF,EAAAtI,QAGAoI,GAkEA3I,YAhEA,SAAAqH,EAAAsB,GACA1I,EAAA2I,IAAAD,EAAA,CAAAE,EAAAC,KACA7I,EAAA,IAAA6I,GAAAkC,IAAAnC,MA+DAoI,WA3DA,SAAArQ,GAEA,MADA,qBACAwP,KAAAxP,IA0DAmM,mBAxDA,WACA9M,EAAA,+BAAA4G,SAAA,qCACA5G,EAAA,+BAAA0E,IAAA,CAAAW,QAAA,WAuDA0H,mBApDA,WACA/M,EAAA,+BAAAgH,YAAA,qCACAhH,EAAA,+BAAA0E,IAAA,CAAAW,QAAA,SACArF,EAAA,qBAAAgH,YAAA,yBACAhH,EAAA,+BAAAgH,YAAA,yBACAhH,EAAA,6BAAAgH,YAAA,8BAgDAtF,YA7CA,SAAA/C,GACA,GAAA,IAAAA,IAAAA,EAAA,MAAA,GACA,IAAAsS,EAAA3D,OAAA4D,mBAAAvS,GAGA,OAFAsS,EAAAA,EAAAE,OAAA7G,QAAA,MAAA,IAEA,WAAA6F,KAAAc,GACA,OAAAA,EAEA,oBAAAd,KAAAc,GAIAA,EAHA,UAAAA,GAqCAb,aAAAA,EACAgB,qBA5BA,SAAAC,GACA,MAAA,SAAAA,GAAA,aAAAA,EAAA,aAAAA,EAEA,cADAA,EAAAA,EAAAtS,MAAA,MACA,MAAAqR,EAAAiB,EAAA,OAAAA,EAAA,MA0BA1L,cAxBA,SAAA0L,GACA,MAAA,SAAAA,GAAA,aAAAA,EAAA,aAAAA,GACAA,EAAAA,EAAAtS,MAAA,KACAa,QAAAC,IAAA,OAAAwR,GACA,aAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,SArLA,GCAAlD,EA0FA,CACAqB,iBA1FA,SAAA/O,EAAAd,GACA,QAAA8B,IAAA9B,EACA,OAEA,MAAAqD,EAAAhD,EAAA,2CAAAS,OACA,GAAAuC,EAAA9D,OAAA,CACA,MAAAoS,EAAAtO,EAAAZ,SAAA,0CAAAA,SAAA,kCACAkP,EAAAlP,SAAA,uCAAAC,KAAA1C,EAAAgB,UAEAqC,EAAAZ,SAAA,0CAAAA,SAAA,sCAAAC,KAAA1C,EAAA0B,OACA1B,EAAA2B,UACAgQ,EAAAlP,SAAA,0CACAN,KAAA,CAAAkL,KAAAlN,EAAA4B,YAAA/B,EAAA2B,YAEAgQ,EAAAlP,SAAA,kCAAAC,KAAA,UAgBArC,EAAA,8BAAA+K,IAAApL,EAAAgB,UACAX,EAAA,2BAAA+K,IAAApL,EAAA0B,OACArB,EAAA,8BAAA+K,IAAApL,EAAA2B,UACAtB,EAAA,2BAAA+K,IAAApL,EAAAe,OACA,GAAAf,EAAAiP,UACA5O,EAAA,kCAAA8B,KAAA,2BAAA,QACA9B,EAAA,kCAAAqC,KAAA,cAEArC,EAAA,kCAAA8B,KAAA,2BAAA,SACA9B,EAAA,kCAAAqC,KAAA,6BAoDAoN,qBA1CA,SAAAhP,EAAAd,GACA,MAAAqD,EAAAhD,EAAA,2CAAAS,OACA,GAAAuC,EAAA9D,OAAA,CACA,MAAAoS,EAAAtO,EAAAZ,SAAA,0CAAAA,SAAA,kCACAkP,EAAAlP,SAAA,uCAAAC,KAAA1C,EAAAgB,UAEAqC,EAAAZ,SAAA,0CAAAA,SAAA,sCAAAC,KAAA1C,EAAA0B,OAEAiQ,EAAAlP,SAAA,0CACAN,KAAA,CAAAkL,KAAAlN,EAAA4B,YAAA/B,EAAA2B,YAGAgQ,EAAAlP,SAAA,kCAAAC,KAAA,YA+BA+L,wBA1BA,WACApO,EAAA,8BAAA+K,IAAA,IACA/K,EAAA,2BAAA+K,IAAA,IACA/K,EAAA,8BAAA+K,IAAA,IACA/K,EAAA,2BAAA+K,IAAA,IAEA/K,EAAA,8BAAA+K,IAAA,IACA/K,EAAA,+BAAA+K,IAAA,IACA/K,EAAA,8BAAA+K,IAAA,IACA/K,EAAA,wCAAA+K,IAAA,KAkBAuE,mBAhBA,SAAA7O,GACA,MAAAuC,EAAAhD,EAAA,2CAAAS,OACA,GAAAuC,EAAA9D,OAAA,CACA,MAAAoS,EAAAtO,EAAAZ,SAAA,0CAAAA,SAAA,kCACAkP,EAAAlP,SAAA,uCAAAC,KAAA,IACAW,EAAAZ,SAAA,0CAAAA,SAAA,sCAAAC,KAAA,IACAiP,EAAAlP,SAAA,0CACAN,KAAA,CAAAkL,KAAA,KACAsE,EAAAlP,SAAA,kCAAAC,KAAA,qKT1FA","file":"ep.profile.modal.mini.js","sourcesContent":["// var shared = require('../shared');\n\nconst documentReady = (() => {\n  const documentReady = (hooks, context, cb) => {\n   \n    let socket;\n    const loc = document.location;\n    const port = loc.port == '' ? (loc.protocol == 'https:' ? 443 : 80) : loc.port;\n    const url = `${loc.protocol}//${loc.hostname}:${port}/`;\n    const pathComponents = location.pathname.split('/');\n    // Strip admin/plugins\n    const baseURL = `${pathComponents.slice(0, pathComponents.length - 2).join('/')}/`;\n    const resource = `${baseURL.substring(1)}socket.io`;\n\n    const room = `${url}pluginfw/admin/ep_profile_modal`;\n\n    let changeTimer;\n\n\n    switch (context){\n      case \"admin/ep_profile_modal\" : {\n        // connect \n        socket = io.connect(room, {path: `${baseURL}socket.io`, resource});\n        socket.on('load-settings-result', (data) => {\n          console.log(data);\n          shared.setFormData($('#settings-form'), data);\n        });\n\n        $('#save-settings').on('click', () => {\n          const data = shared.getFormData($('#settings-form'));\n          socket.emit('save-settings', data);\n          alert('Succesfully saved.');\n        });\n\n        socket.emit('load-settings');\n        break;\n\n      }\n      case \"admin/ep_profile_modal_analytics\" :{\n        socket = io.connect(room, {path: `${baseURL}socket.io`, resource});\n \n\n        socket.on('load-pads-result', (data) => {\n          console.log(\"load-pads\",data);\n          $.each(data, function(index,value){\n            $('#pads').append(`<option value=\"${value}\">${value}</option>`)\n          })\n       \n        });\n        socket.on('load-analytics-result', (data) => {\n          console.log(\"load-analytics\",data);\n          // $.each(data.email_contributed_users, function(index,value){\n          //   $('#users').append(`\n          //   <tr>\n          //     <td>${value.email}</td>\n          //     <td>${value.data.created_at_date}</td>\n          //     <td>-</td>\n          //   </tr>\n          //   `)\n          // })\n\n          $.each(data.pad_users_data, function(index,value){\n            if(value.userId){\n              $('#users').append(`\n              <tr style=\"height: 0;\">\n                <td>${value.email || value.userId}</td>\n                <td>${value.username}</td>\n                <td>${value.createDate}</td>\n                <td>${value.last_seen_date}</td>\n                <td>${value.verifiedDate || \"-\"}</td>\n                <td>${(value.verified) ? \"Verified\" : \"unconfirmed\"}</td>\n              </tr>\n              `)\n            }\n\n          })\n\n        });\n        \n\n        $('#pads').on('change', function() {\n          socket.emit('load-analytics',{pad:this.value});\n\n          \n        });\n\n        socket.emit('load-pads');\n        break;\n\n      }\n      default : {\n        return [];\n      }\n\n    }\n\n  };\n  return documentReady;\n})();\n","// var shared = require('../shared');\n\n\nconst contributors = (() => {\n  const defaultImg = '../static/plugins/ep_profile_modal/static/dist/img/user.png';\n\n  const createHTMLforUserList = function (total, online, padId, userVerify) { // generate avatar too\n    let html = \"<div id='usersIconList' class='ep_profile_inlineAvatars'>\";\n    let style;\n    let borderStyle = '';\n    $.each(online.reverse(), (key, value) => {\n      style = `background: url(/static/getUserProfileImage/${value.userId}/${padId}) no-repeat 50% 50% ; background-size : 28px;background-color: #fff;`;\n      // if (verified_users && verified_users.length && verified_users !== 'null' && verified_users !== null) {\n      //   if (verified_users.indexOf(value.userId) == -1) { borderStyle = ''; } else { borderStyle = 'box-shadow: 0px 0px 1px 1px rgba(38,121,255,1);margin: 1px;'; }\n      // }\n      if(userVerify) { borderStyle = 'box-shadow: 0px 0px 1px 1px rgba(38,121,255,1);margin: 1px;'; } else  { borderStyle = ''; } \n\n      style += borderStyle;\n      html += `<div class='avatar' data-userId=\"${value.userId}\" data-id=\"user_${value.userId}\"  id=\"user_${value.userId}\" ><div data-userId=\"${value.userId}\"  class='avatarImg' style='${style}' data-id=\"user_${value.userId}\"></div></div>`;\n    });\n    html += ' </div>';\n    return `${html}<span class='slash_profile'>⧸</span><span id='userlist_count' class='userlist_count'>${total}</span>` +\n\t\t\t'<input  value=\\'Share\\'  id=\\'ep_profile_modal_share\\' type=\\'button\\' class=\\'ep_profile_modal_share\\'>';\n  };\n\n  const increaseUserFromList = function (userId, padId) {\n    const style = `background: url(/static/getUserProfileImage/${userId}/${padId}) no-repeat 50% 50% ; background-size : 26px;background-color: #fff;`;\n\n\n    if (!$(`.avatar[data-id=\"user_${userId}\"]`).length) {\n      const $image = $(`<div class='avatar' data-userId=\"${userId}\"  data-id=\"user_${userId}\" id=\"user_${userId}\" ><div class='avatarImg' data-userId=\"${userId}\"  data-id=\"user_${userId}\" style='${style}'></div></div>`);\n      $image.prependTo('#usersIconList');\n      $image.hide().slideDown(200);\n    }\n  };\n\n  const decreaseUserFromList = function (userId, padId) {\n    $(`.avatar[data-id=\"user_${userId}\"]`).animate({opacity: 0}, 1000, 'linear', function () {\n      $(this).remove();\n    }\n    );\n\n    const selector_user = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (selector_user.length) {\n      moveOnlineUserToOffline(selector_user);\n      // selector_user.animate({opacity: 0}, 1000,\"linear\",function()\n      // {\n      //     $(this).remove();\n      // }\n      // )\n    } else {\n      const selector_on = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n      if (selector_on.length) {\n        const selector_off = $('.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]');\n        decreaseFromOnlineAnonymous(selector_on, userId);\n        if (selector_off.length) {\n          increaseToOfflineAnonymous(selector_off, userId);\n        } else {\n          createOfflineAnonymousElement(userId, defaultImg, null, null, selector_user);\n        }\n      } else {\n        let offline_list_selector = $('#ep_profile_user_list_offline');\n        if (offline_list_selector.length) {\n          offline_list_selector.append($(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`));\n        } else {\n          const offline_container = $('#ep_profile_user_list_container_off');\n          offline_container.prepend(\"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'> </div>\");\n          offline_list_selector = $('#ep_profile_user_list_offline');\n          $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`).appendTo(offline_list_selector);\n        }\n        // $(\".ep_profile_user_row[data-id=\\\"user_list_\"+userId+\"\\\"]\").appendTo(\"#ep_profile_user_list_container_off\")\n      }\n    }\n\n    // user img update\n    const image_url = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (user_selector.length) {\n      user_selector.children('.ep_profile_user_img').css({'background-position': '50% 50%',\n        'background-image': `url(${image_url})`, 'background-repeat': 'no-repeat', 'background-size': '69px'});\n    }\n  };\n\n  const paginateContributors = function(all_users_list,onlineUsers,currentUserId,lastPage){\n    \n    const ep_profile_user_list_container_pagination = $('#ep_profile_user_list_container_pagination');\n    if(lastPage){\n      $(\"#ep_profile_modal_load_more_contributors\").css({\"display\":\"none\"})\n    }\n    $.each(all_users_list, (key, value) => {\n      const result = $.grep(onlineUsers, (e) => e.userId == value.userId);\n\n      if (value.last_seen_date !== '' && value.userName != 'Anonymous') {\n        var userListHtml = getHtmlOfUsersList(\n          value.userId, value.userName,\n          value.imageUrl, false, value.about, value.homepage, \n          (result.length) ? 'Online' : shared.getCustomDate(value.last_seen_date) \n        );\n  \n        ep_profile_user_list_container_pagination.append(userListHtml);\n    \n      } \n\n      if (result.length) { // online\n        if (value.userName == 'Anonymous') {\n          const selector_on = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n\n          if (selector_on.length) {\n            increaseToOnlineAnonymous(selector_on, value.userId);\n          } else {\n            var userListHtml = getHtmlOfUsersList(value.userId, value.userName, value.imageUrl, 'on_Anonymous', value.about, value.homepage, 'Online');\n            ep_profile_user_list_container_pagination.append(userListHtml);\n          }\n          if (currentUserId == value.userId) { $(\".ep_profile_user_row[data-id='user_list_on_Anonymous']\").css({'margin-top': '28px'}); } // design\n        }\n      }\n      \n\n    })\n\n    // just for anonymouse to be end of list\n    $.each(all_users_list, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId == value.userId);\n      if (!result.length) { // offline\n        if (value.userName == 'Anonymous') {\n          const selector_off = $('.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]');\n          if (selector_off.length) {\n            const anonymouseCount = selector_off.attr('data-anonymouseCount');\n            const new_anonymouseCount = parseInt(anonymouseCount) + 1;\n\n            const ids_data_off = selector_off.attr('data-user-ids');\n            const ids_data_off_array = ids_data_off.split(',');\n            ids_data_off_array.push(value.userId);\n            selector_off.attr('data-user-ids', ids_data_off_array.join(','));\n\n            selector_off.attr('data-anonymouseCount', new_anonymouseCount);\n            selector_off.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username').text(`Anonymous ×${new_anonymouseCount}`);\n          } else {\n            // createOfflineAnonymousElement(value.userId , value.imageUrl,value.about,value.homepage,)\n            const userListHtml = getHtmlOfUsersList(value.userId, 'Anonymous', value.imageUrl, 'off_Anonymous', value.about, value.homepage);\n            ep_profile_user_list_container_pagination.append(userListHtml);\n\n          }\n        }\n      }\n    });\n  }\n  const manageOnlineOfflineUsers = function (all_users_list, onlineUsers, currentUserId , lastPage) {\n    const online_list_selector = $('#ep_profile_user_list_container');\n    const offline_list_selector = $('#ep_profile_user_list_container_off');\n    if(lastPage){\n      $(\"#ep_profile_modal_load_more_contributors\").css({\"display\":\"none\"})\n    }else{\n      $(\"#ep_profile_modal_load_more_contributors\").css({\"display\":\"block\"})\n    }\n    //offline_list_selector.empty();\n    $.each(all_users_list, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId == value.userId);\n      if (result.length) { // online\n        if (value.userName == 'Anonymous') {\n          const selector_on = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n\n          if (selector_on.length) {\n            increaseToOnlineAnonymous(selector_on, value.userId);\n          } else {\n            var userListHtml = getHtmlOfUsersList(value.userId, value.userName, value.imageUrl, 'on_Anonymous', value.about, value.homepage, 'Online');\n            online_list_selector.append(userListHtml);\n          }\n          if (currentUserId == value.userId) { $(\".ep_profile_user_row[data-id='user_list_on_Anonymous']\").css({'margin-top': '28px'}); } // design\n        } else {\n          if (!$(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).length) {\n            var userListHtml = getHtmlOfUsersList(value.userId, value.userName, value.imageUrl, false, value.about, value.homepage, 'Online');\n            try {\n              online_list_selector.append(userListHtml);\n            } catch (error) {\n              console.log(error);\n            }\n          } else if (currentUserId == value.userId) {\n            $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).prependTo(online_list_selector);\n            // $(\".ep_profile_user_list_date_title_header\").prependTo(online_list_selector)\n          } else {\n            $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).appendTo(online_list_selector);\n          }\n          if (currentUserId == value.userId) { $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).css({'margin-top': '28px'}); } // design\n        }\n      } else { // offline\n        if (value.last_seen_date !== '') {\n          if (value.userName != 'Anonymous') {\n            if (!$(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).length) {\n              var userListHtml = getHtmlOfUsersList(value.userId, value.userName, value.imageUrl, false, value.about, value.homepage, shared.getCustomDate(value.last_seen_date));\n              const selector_offlines_date = $('#ep_profile_user_list_offline');\n              if (selector_offlines_date.length) {\n                selector_offlines_date.append(userListHtml);\n              } else {\n                $('#ep_profile_user_list_container_off').append(`<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'>   ${userListHtml}</div>`);\n              }\n            } else {\n              $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).appendTo(offline_list_selector);\n            }\n          }\n        }\n      }\n\n\n      // }\n    });\n\n    // just for anonymouse to be end of list\n    $.each(all_users_list, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId == value.userId);\n      if (!result.length) { // offline\n        if (value.userName == 'Anonymous') {\n          const selector_off = $('.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]');\n          if (selector_off.length) {\n            const anonymouseCount = selector_off.attr('data-anonymouseCount');\n            const new_anonymouseCount = parseInt(anonymouseCount) + 1;\n\n            const ids_data_off = selector_off.attr('data-user-ids');\n            const ids_data_off_array = ids_data_off.split(',');\n            ids_data_off_array.push(value.userId);\n            selector_off.attr('data-user-ids', ids_data_off_array.join(','));\n\n            selector_off.attr('data-anonymouseCount', new_anonymouseCount);\n            selector_off.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username').text(`Anonymous ×${new_anonymouseCount}`);\n          } else {\n            // createOfflineAnonymousElement(value.userId , value.imageUrl,value.about,value.homepage,)\n            const userListHtml = getHtmlOfUsersList(value.userId, 'Anonymous', value.imageUrl, 'off_Anonymous', value.about, value.homepage, shared.getCustomDate(value.last_seen_date));\n            const selector_offlines_date = $('#ep_profile_user_list_offline');\n            if (selector_offlines_date.length) {\n              selector_offlines_date.append(userListHtml);\n            } else {\n              $('#ep_profile_user_list_container_off').append(`<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'>  ${userListHtml}</div>`);\n            }\n          }\n        }\n      }\n    });\n  };\n\n  var getHtmlOfUsersList = function (userId, username, img, anonymous_handler, about, homepage, seenStatus) {\n    about = about || '';\n    homepage = homepage || '';\n    let style;\n    if (anonymous_handler && username == 'Anonymous') {\n      style = `background: url(${img}) no-repeat 50% 50% ; background-size : 69px ;`;\n\n      return (`<div  data-user-ids='${userId}' data-anonymouseCount='1' data-id='user_list_${anonymous_handler}' class='ep_profile_user_row'>` +\n\t\t\t\t\t`<div style='${style}' class='ep_profile_user_img'></div>` +\n\t\t\t\t\t'<div class=\\'ep_profile_user_list_profile_userDesc\\'>' +\n\t\t\t\t\t\t\t`<div class='ep_profile_user_list_username'><div class='ep_profile_user_list_username_text' >${username}</div>` +\n\t\t\t\t\t\t\t`<div class='ep_profile_contributor_status'>${seenStatus}</div>` +\n\t\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t\t\t`<p class='ep_profile_user_list_profile_desc'>${about}</p>` +\n\t\t\t\t\t'</div> </div>');\n    } else {\n      style = `background: url(${img}) no-repeat 50% 50% ; background-size : 69px ;`;\n      return (`<div data-id='user_list_${userId}' class='ep_profile_user_row'>` +\n\t\t\t\t\t`<div style='${style}' class='ep_profile_user_img'></div>` +\n\t\t\t\t\t'<div class=\\'ep_profile_user_list_profile_userDesc\\'>' +\n\t\t\t\t\t\t\t`<div class='ep_profile_user_list_username'><div class='ep_profile_user_list_username_text' >${username}</div>` +\n\t\t\t\t\t\t\t`<a target='_blank' style='${(homepage == \"\" || homepage == \"#\" || homepage == undefined || homepage == null ) ? \"display : none\" : \"\"}'  class='ep_profile_contributor_link_container' title='${shared.getValidUrl(homepage)}' href='${shared.getValidUrl(homepage)}'> </a>` +\n\t\t\t\t\t\t\t`<div class='ep_profile_contributor_status'>${seenStatus}</div>` +\n\t\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t\t\t`<p class='ep_profile_user_list_profile_desc'>${about}</p>` +\n\t\t\t\t\t'</div> </div>');\n    }\n  };\n\n\n  const increaseToOnlineAnonymous = function (selector_on, userId) {\n    const anonymouseCount = selector_on.attr('data-anonymouseCount');\n    const ids_data = selector_on.attr('data-user-ids');\n    const ids_data_array = ids_data.split(',');\n    if (ids_data_array.indexOf(userId) == -1) {\n      ids_data_array.push(userId);\n      selector_on.attr('data-user-ids', ids_data_array.join(','));\n      const new_anonymouseCount = parseInt(anonymouseCount) + 1;\n      selector_on.attr('data-anonymouseCount', new_anonymouseCount);\n      selector_on.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text').text(`Anonymous ×${new_anonymouseCount}`);\n    }\n  };\n\n  const decreaseFromOnlineAnonymous = function (selector_on, userId) {\n    const anonymouseCount = selector_on.attr('data-anonymouseCount');\n    const ids_data = selector_on.attr('data-user-ids');\n    let ids_data_array = ids_data.split(',');\n\n\n    ids_data_array = $.grep(ids_data_array, (value) => value != userId);\n\n\n    selector_on.attr('data-user-ids', ids_data_array.join(','));\n    const new_anonymouseCount = parseInt(anonymouseCount) - 1;\n    selector_on.attr('data-anonymouseCount', new_anonymouseCount);\n    if (new_anonymouseCount > 1) {\n      selector_on.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text').text(`Anonymous ×${new_anonymouseCount}`);\n    } else {\n      selector_on.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text').text('Anonymous');\n    }\n\n    if (new_anonymouseCount < 1) {\n      selector_on.remove();\n    }\n    return new_anonymouseCount;\n  };\n\n\n  const increaseToOfflineAnonymous = function (selector_off, userId) {\n    const anonymouseCount = selector_off.attr('data-anonymouseCount');\n    let ids_data = selector_off.attr('data-user-ids');\n\n    ids_data = $.grep(ids_data, (value) => value != userId);\n\n    selector_off.attr('data-user-ids', ids_data);\n    const new_anonymouseCount = parseInt(anonymouseCount) + 1;\n    selector_off.attr('data-anonymouseCount', new_anonymouseCount);\n    selector_off.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username').children('.ep_profile_user_list_username_text')\n        .text(`Anonymous ×${new_anonymouseCount}`);\n  };\n\n\n  // var decreaseFromOfflineAnonymous= function (selector_off,userId){\n  //     var anonymouseCount = selector_off.attr(\"data-anonymouseCount\")\n  //     var ids_data = selector_off.attr(\"data-user-ids\")\n\n  //     ids_data = $.grep(ids_data, function(value) {\n  //         return value != userId;\n  //       });\n\n  //     selector_off.attr(\"data-user-ids\",ids_data)\n  //     var new_anonymouseCount= parseInt(anonymouseCount)-1\n  //     selector_off.attr('data-anonymouseCount',new_anonymouseCount);\n  //     (new_anonymouseCount > 1) ? selector_off.children(\".ep_profile_user_username\").text(\"Anonymous ×\"+new_anonymouseCount) : selector_off.children(\".ep_profile_user_username\").text(\"Anonymous\");\n  //     return new_anonymouseCount\n  // }\n\n\n  const createOfflineAnonymousElement = function (userId, img, about, homepage, userElement) {\n    const userListHtml = getHtmlOfUsersList(userId, 'Anonymous', img, 'off_Anonymous', about, homepage, 'Today');\n    // $(\"#ep_profile_user_list_container_off\").append(userListHtml);\n    let offline_list_selector = $('#ep_profile_user_list_offline');\n    if (offline_list_selector.length) {\n      const user_selector = $(\".ep_profile_user_row[data-id='user_list_off_Anonymous']\"); // because need anonymous offline be last one\n      if (user_selector.length) {\n        userElement.insertBefore(user_selector);\n      } else {\n        offline_list_selector.append(userElement);\n      }\n    } else {\n      const offline_container = $('#ep_profile_user_list_container_off');\n      offline_container.prepend(\"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'></div>\");\n      offline_list_selector = $('#ep_profile_user_list_offline');\n      offline_list_selector.append(userListHtml);\n    }\n  };\n\n\n  const createOnlineUserElementInUserList = function (userId, userName, img, currentUserId, user) {\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (!user_selector.length) {\n      const userListHtml = getHtmlOfUsersList(userId, userName, img, false, user.about, user.homepage, 'Online');\n      if (userId == currentUserId) { // it is owner\n        const titleOfContributors = $('#ep_profile_user_list_date_title');\n        if (titleOfContributors.length) {\n          $(userListHtml).insertAfter(titleOfContributors);\n        } else {\n          $('#ep_profile_user_list_container').prepend(userListHtml);\n        }\n      } else {\n        $('#ep_profile_user_list_container').append(userListHtml);\n      }\n    } else {\n      user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username').children('.ep_profile_user_list_username_text')\n          .text(userName);\n      user_selector.children('.ep_profile_user_img').css({'background-position': '50% 50%',\n        'background-image': `url(${img})`, 'background-repeat': 'no-repeat', 'background-size': '69px'});\n      // attr(\"src\",img);\n    }\n  };\n\n  const isThereOnlineAnonymous = function () {\n    const selector = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n    if (selector.length) { return selector; } else { return false; }\n  };\n  const checkUserExistInOnlineAnonymous = function (selector_on, userId) {\n    const ids_data = selector_on.attr('data-user-ids');\n    const ids_data_array = ids_data.split(',');\n    if (ids_data_array.indexOf(userId) == -1) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const createOnlineAnonymousElement = function (userId, userName, imageUrl, user) {\n    const online_list_selector = $('#ep_profile_user_list_container');\n    const userListHtml = getHtmlOfUsersList(userId, userName, imageUrl, 'on_Anonymous', user.about, user.homepage, 'Online');\n    online_list_selector.append(userListHtml);\n  };\n\n  const moveOnlineUserToOffline = function (userElement) {\n    let offline_list_selector = $('#ep_profile_user_list_offline');\n    if (offline_list_selector.length) {\n      const user_selector = $(\".ep_profile_user_row[data-id='user_list_off_Anonymous']\"); // because need anonymous offline be last one\n      if (user_selector.length) {\n        userElement.insertBefore(user_selector);\n      } else {\n        offline_list_selector.append(userElement);\n      }\n    } else {\n      const offline_container = $('#ep_profile_user_list_container_off');\n      offline_container.prepend(\"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'></div>\");\n      offline_list_selector = $('#ep_profile_user_list_offline');\n      offline_list_selector.append(userElement);\n    }\n\n    userElement.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username').children('.ep_profile_contributor_status').text('Last seen today');\n  };\n\n  const removeUserElementInUserList = function (userId) {\n    $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`).remove();\n  };\n\n  return {\n    createHTMLforUserList,\n    increaseUserFromList,\n    decreaseUserFromList,\n    moveOnlineUserToOffline,\n    decreaseFromOnlineAnonymous,\n    increaseToOfflineAnonymous,\n    createOfflineAnonymousElement,\n    manageOnlineOfflineUsers,\n    increaseToOnlineAnonymous,\n    createOnlineUserElementInUserList,\n    isThereOnlineAnonymous,\n    checkUserExistInOnlineAnonymous,\n    createOnlineAnonymousElement,\n    removeUserElementInUserList,\n    paginateContributors,\n  };\n})();\n","// var shared = require('../shared');\n// var helper = require('../helper');\n\nconst profileForm = (() => {\n  const allEventListener= function(){\n    const padOuter = $('iframe[name=\"ace_outer\"]').contents();\n    const padInner = padOuter.find('iframe[name=\"ace_inner\"]');\n    const innerdocbody = padInner.contents().find('#innerdocbody')\n    innerdocbody.on(\"keypress\",function(e) {\n      showModal()\n    });\n    innerdocbody.on(\"mousedown\",function(event) {\n      if(event.which == 1){\n        showModal()\n      }\n      \n  });\n  }\n\n  const removeEventListener =function(){\n    const padOuter = $('iframe[name=\"ace_outer\"]').contents();\n    const padInner = padOuter.find('iframe[name=\"ace_inner\"]');\n    const innerdocbody = padInner.contents().find('#innerdocbody')\n    innerdocbody.off(\"keypress\");\n    innerdocbody.off(\"mousedown\");\n\n  }\n  const showModal = function () {\n    $('#ep_profile_formModal').addClass('ep_profile_formModal_show');\n    $('#ep_profile_formModal_overlay').addClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_formModal_overlay').css({display: 'block'});\n\n    setTimeout(() => { $('#ep_profile_modalForm_name').focus(); }, 1000);\n  };\n  const hideFormModalOverlay = function () {\n    $('#ep_profile_formModal_overlay').removeClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_formModal_overlay').css({display: 'none'});\n\n    handleOnCloseOverlay();\n  };\n  const handleOnCloseOverlay = function () {\n    const userId = pad.getUserId();\n    const padId = pad.getPadId();\n    const $form = $('#ep_profile_formModal_msform');\n    const data = getFormData($form);\n    const msg = {};\n    localStorage.setItem(\"formPassed\",\"yes\")\n    removeEventListener()\n    if (data.ep_profile_modalForm_name == '') { return false; }\n    // var message = {\n    //     type : 'ep_profile_modal',\n    //     action : \"ep_profile_modal_send_chat_message\" ,\n    //     userId :  userId,\n    //     data: data,\n    //     padId : padId\n    //     }\n    // pad.collabClient.sendMessage(message);  // Send the chat position message to the server\n    let text = `Please welcome ${data.ep_profile_modalForm_name}`;\n    if (data.ep_profile_modalForm_about_yourself !== '') { text += `, ${data.ep_profile_modalForm_about_yourself}`; }\n    if (data.ep_profile_modalForm_homepage !== '') {\n      const url = shared.getValidUrl(data.ep_profile_modalForm_homepage);\n      text += `, ${url}`;\n      // text += `, ${message.data.ep_profile_modalForm_homepage} `\n    }\n\n    msg.messageChatText = `${text}`;\n    msg.target = 'profile';\n    msg.userId = userId;\n    msg.time = new Date();\n\n    // shared.addTextChatMessage(msg);\n    const message = {\n      type: 'ep_rocketchat',\n      action: 'ep_rocketchat_sendMessageToChat_login',\n      userId,\n      data: msg,\n      padId,\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const resetModal = function () {\n    const fieldsets = $('#ep_profile_formModal_msform fieldset');\n    fieldsets.each(function (index) {\n      if (index == 0) $(this).show(); else $(this).hide();\n    });\n  };\n  const getFormData = function ($form) {\n    const unindexed_array = $form.serializeArray();\n    const indexed_array = {};\n\n    $.map(unindexed_array, (n, i) => {\n      indexed_array[n.name] = n.value;\n    });\n\n    return indexed_array;\n  };\n  const initModal = function (clientVars) {\n    const modal = $('#ep_profile_formModal_script').tmpl(clientVars);\n    $('body').append(modal);\n\n    // jQuery time\n    let current_fs, next_fs, previous_fs; // fieldsets\n    let left, opacity, scale; // fieldset properties which we will animate\n    let animating; // flag to prevent quick multi-click glitches\n\n    $('#ep_profile_formModal_msform fieldset').on('keypress', function (e) {\n      if (e.keyCode == 13) {\n        // Cancel the default action on keypress event\n        e.preventDefault();\n        current_fs = $(this);\n        next_fs = $(this).next();\n        nextHandler(current_fs, next_fs);\n      }\n    });\n    $('.next').click(function () {\n      current_fs = $(this).parent();\n      next_fs = $(this).parent().next();\n      nextHandler(current_fs, next_fs);\n    });\n\n    $('.skip').click(function () {\n      if (animating) return false;\n      $('#ep_profile_modalForm_name').css({border: '1px solid gray'});\n\n      animating = true;\n\n      current_fs = $(this).parent();\n      next_fs = $(this).parent().next();\n\n      // activate next step on progressbar using the index of next_fs\n      // $(\"#progressbar li\").eq($(\"fieldset\").index(next_fs)).addClass(\"active\");\n\n      // show the next fieldset\n      current_fs.hide();\n      next_fs.show();\n      animating = false;\n    });\n\n\n    $('.close , #ep_profile_formModal_overlay , .ep_profile_formModal_topClose').click(() => {\n      $('#ep_profile_formModal').removeClass('ep_profile_formModal_show');\n\n      hideFormModalOverlay();\n\n      return false;\n    });\n    $('.previous').click(function () {\n      if (animating) return false;\n      animating = true;\n\n      current_fs = $(this).parent();\n      previous_fs = $(this).parent().prev();\n\n      // de-activate current step on progressbar\n      // $(\"#progressbar li\").eq($(\"fieldset\").index(current_fs)).removeClass(\"active\");\n      current_fs.hide();\n      previous_fs.show();\n      animating = false;\n    });\n\n    $('.submit').click(() => {\n      submitHandle();\n      return false;\n    });\n    $('.clear').click(function () {\n      shared.resetAllProfileImage($(this).attr('data-userId'), $(this).attr('data-padId'));\n    });\n\n    function sendFormDataToServer() {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      const $form = $('#ep_profile_formModal_msform');\n      const data = getFormData($form);\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_info',\n        userId,\n        data,\n        padId,\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n    }\n    function submitHandle() {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      $('#ep_profile_formModal').removeClass('ep_profile_formModal_show');\n\n      uploadImg();\n      \n      hideFormModalOverlay();\n\n      sendFormDataToServer();\n\n      const username = $('#ep_profile_modalForm_name').val();\n\n      helper.userLogin({\n        email: $('#ep_profile_modalForm_email').val(),\n        username,\n      });\n      setTimeout(() => {\n        helper.refreshUserImage(userId, padId);\n      }, 2200);\n      // sync profile section to up\n    }\n\n\n    function nextHandler(current_fs, next_fs) {\n      if (animating) return false;\n\n      const currentSection = current_fs.attr('data-section');\n      if (currentSection == 'name') {\n        if ($('#ep_profile_modalForm_name').val() == '') {\n          $('#ep_profile_modalForm_name').css({border: '1px solid red'});\n          return false;\n        }\n        var username = $('#ep_profile_modalForm_name').val();\n        $('#ep_profile_modalForm_name').css({border: '0px solid gray'});\n        // submit username once user input and press next\n        helper.userLogin({\n          username,\n        });\n        shared.loginByEmailAndUsernameWithoutValidation(username, '', false);\n      }\n      if (currentSection == 'email') {\n        const userEmail = $('#ep_profile_modalForm_email').val();\n        if (!shared.isEmail(userEmail) || userEmail == '') {\n          $('#ep_profile_modalForm_email').css({border: '1px solid red'});\n          return false;\n        }\n        var username = $('#ep_profile_modalForm_name').val();\n        shared.loginByEmailAndUsernameWithoutValidation(username, userEmail, true);\n        sendEmailVerification(userEmail, username);\n        $('#ep_profile_modalForm_email').css({border: '0px solid gray'});\n      }\n\n      if (currentSection == 'homepage') {\n        const userLink = $('#ep_profile_modal_homepage').val();\n        //console.log(shared.IsValid(userLink));\n        if (!shared.IsValid(userLink) || userLink == '') {\n          $('#ep_profile_modal_homepage').css({border: '1px solid red'});\n          return false;\n        }\n        $('#ep_profile_modal_homepage').css({border: '0px solid gray'});\n        sendFormDataToServer();\n      }\n\n      // if (currentSection == 'image') {\n      //   uploadImg();\n      // }\n\n\n      animating = true;\n      current_fs.hide();\n      if (next_fs.length) {\n        next_fs.show();\n\n        // focus handling\n        const nextSelection = next_fs.attr('data-section');\n        if (nextSelection == 'email') { $('#ep_profile_modalForm_email').focus().select(); }\n        if (nextSelection == 'homepage') { $('#ep_profile_modal_homepage').focus().select(); }\n        if (nextSelection == 'bio') { $('#ep_profile_modalForm_about_yourself').focus().select(); }\n      } else { // seems last fieldset\n        submitHandle();\n      }\n      animating = false;\n    }\n\n\n    function sendEmailVerification(email, username) {\n      var oldText = $(\"#ep_profile_modal_verification\").text()\n      $.ajax({\n        url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/sendVerificationEmail/${pad.getUserId()}/${username}/${email}`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend() {\n          // setting a timeout\n          const image_url = '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n\n          $('#ep_profile_modal_verification').text('Sending...');\n        },\n        error(xhr) { // if error occured\n          $('#ep_profile_modal_verification').text('Error');\n          setTimeout(() => {\n            $('#ep_profile_modal_verification').text(oldText);\n          }, 2000);\n        },\n        success(response) {\n          $('#ep_profile_modal_verification').text('Verification email has been sent.');\n          $('#ep_profile_modal_verification').attr('data-verification-status', 'true');\n        },\n\n      });\n    }\n\n\n    function uploadImg() {\n      const userId = pad.getUserId();\n      const fd = new FormData();\n      const files = $('#profile_file_modal')[0].files[0];\n      fd.append('file', files);\n      if (!files) return;\n      $.ajax({\n        url: `/static/${clientVars.padId}/pluginfw/ep_profile_modal/upload/${userId}`,\n        type: 'post',\n        data: fd,\n        contentType: false,\n        processData: false,\n        beforeSend() {\n          // setting a timeout\n\n          helper.refreshLoadingImage(userId, clientVars.padId);\n        },\n        error(xhr) { // if error occured\n          helper.refreshUserImage(userId, clientVars.padId);\n          $('#profile_modal_selected_image').attr('style', (i, style) => style && style.replace(/background-image[^;]+;?/g, ''));\n\n          switch (xhr.status) {\n            case 413:\n              $.gritter.add({\n                'title': 'Error',\n                'text': 'ep_profile_modal: image size is large.',\n                'sticky': true,\n                'class_name': 'error'\n              });\n                 // Take action, referencing xhr.responseText as needed.\n          }\n        },\n        success(response) {\n          helper.refreshUserImage(userId, clientVars.padId);\n\n          $('#profile_modal_selected_image').attr('style', (i, style) => style && style.replace(/background-image[^;]+;?/g, ''));\n        },\n\n      });\n    }\n\n\n    // upload image profile\n    $('#profile_file_modal').on('change', (e) => {\n      const files = $('#profile_file_modal')[0].files[0];\n\n      const url = URL.createObjectURL(files);\n      $('#profile_modal_selected_image').css({'background-position': '50% 50%',\n        'background-image': `url(${url})`, 'background-repeat': 'no-repeat', 'background-size': '64px'});\n    });\n  };\n\n\n  return {\n    showModal,\n    hideFormModalOverlay,\n    handleOnCloseOverlay,\n    resetModal,\n    getFormData,\n    initModal,\n    allEventListener,\n  };\n})();\n","// var shared = require('../shared');\n\nconst usersProfileSection = (() => {\n  const initiate = function (clientVars) {\n    const modal = $('#ep_profile_users_profile_script').tmpl(clientVars);\n    $('body').append(modal);\n    // $('#ep_profile_users_profile').addClass('ep_profile_formModal_show')\n  };\n\n  const initiateListeners = function () {\n\n\n    const avatarListerner = (userId)=>{\n      const padId = pad.getPadId();\n      $.ajax({\n        url: `/static/${padId}/pluginfw/ep_profile_modal/getUserInfo/${userId}`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend() {\n          const image_url = '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n          $('#ep_profile_users_profile_userImage').css({'background-position': '50% 50%',\n            'background-image': `url(${image_url})`, 'background-repeat': 'no-repeat', 'background-size': '69px', 'background-color': '#3873E0'});\n          //$('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n          $('#ep_profile_users_profile_name').text(\"\");\n          $('#ep_profile_users_profile_desc').text(\"\");\n\n          $('#ep_profile_users_profile').addClass('ep_profile_formModal_show');\n          shared.showGeneralOverlay();\n\n\n        },\n        error(xhr) { // if error occured\n          $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n          shared.hideGeneralOverlay();\n        },\n        success(response) {\n          const image_url = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n          let username = response.user.username;\n          if (username == null || username == '') { username = 'Anonymous'; }\n          const about = response.user.about || '';\n          const homepage = response.user.homepage || '';\n\n          $('#ep_profile_users_profile_name').text(username);\n          $('#ep_profile_users_profile_desc').text(about);\n          if (homepage ==\"\" ){\n            $('#ep_profile_users_profile_homepage').hide()\n          }else{\n            $('#ep_profile_users_profile_homepage').attr({href: shared.getValidUrl(homepage), target: '_blank'});\n          }\n  \n          $('#ep_profile_users_profile_userImage').css({'background-position': '50% 50%',\n            'background-image': `url(${image_url})`, 'background-repeat': 'no-repeat', 'background-size': '69px', 'background-color': '#3873E0'});\n        },\n      });\n    }\n\n\n    $('#usersIconList').on('avatarClick',function(e,userIdParam){ // coming from external plugins\n      if (!userIdParam || (userIdParam.indexOf(\"a.\") < 0) ) return;\n      avatarListerner(userIdParam)\n    });\n\n    $('#usersIconList').on('click', '.avatar', function () {\n      const userId = $(this).attr('data-userId');\n      avatarListerner(userId)\n    });\n\n\n    $('#ep_profile_users_profile_close').on('click', () => {\n      $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n      shared.hideGeneralOverlay();\n    });\n  };\n\n  return {\n    initiate,\n    initiateListeners,\n  };\n})();\n","// var usersProfileSection = require('./userProfileSection/userProfileSection');\n// var shared = require('./shared');\n// var helper = require('./helper');\n// var profileForm = require('./profileForm/main');\n// var syncData = require('./syncData');\n\n\nconst postAceInit = (() => {\n  const postAceInit = function (hook, context) {\n    // console.log(\"samir\",pad )\n    // console.log(\"samir\",pad.collabClient )\n    // console.log(\"samir\",pad.collabClient.getConnectedUsers())\n    // /static/getUserProfileImage/${clientVars.userId}?t=${clientVars.serverTimestamp}\n\n    usersProfileSection.initiateListeners();\n\n    $('#ep_profile_modal_save').on('click', () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      const username = $('#ep_profile_modal-username');\n      const email = $('#ep_profile_modal-email');\n      const about = $('#ep_profile_modal-about');\n      const homepage = $('#ep_profile_modal-homepage');\n      // var pushNotification = $(\"#ep_profile_modal_push_notification\").checked;\n      // validations\n      if (username.val() == '') {\n        username.css({border: '1px solid red'});\n        return false;\n      }\n      username.css({border: '0'});\n\n      // const userEmail = email.val();\n      // if (!shared.isEmail(userEmail) || userEmail == '') {\n      //   email.css({border: '1px solid red'});\n      //   return false;\n      // }\n      // email.css({border: '0'});\n\n      // const userLink = homepage.val();\n      // if (!shared.IsValid(userLink) && userLink !== '') {\n      //   homepage.css({border: '1px solid red'});\n      //   return false;\n      // }\n      // homepage.css({border: 'unset'});\n\n      // validations\n\n      const $form = $('#ep_profile_modal_one');\n      const data = shared.getFormData($form);\n\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_info',\n        userId,\n        data,\n        padId,\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      pad.collabClient.updateUserInfo({\n        userId: padId,\n        name: username.val(),\n        colorId: '#b4b39a',\n      });\n\n      // //\n      if (window.user_status == 'login') {\n        if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n          $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n          shared.hideGeneralOverlay();\n        } else {\n          $('#ep_profile_modal').addClass('ep_profile_modal-show');\n\n          $('#online_ep_profile_modal_status').show();\n          $('#offline_ep_profile_modal_status').hide();\n\n          shared.showGeneralOverlay();\n        }\n      }\n      // else{\n      // \t($('#ep_profile_modal_ask').hasClass('ep_profile_modal-show'))?\n      // \t$('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n      // \t:\n      // \t$('#ep_profile_modal_ask').addClass('ep_profile_modal-show')\n      // }\n    });\n\n    $('#userlist_count').on('click',()=>{\n      var page = $(\"#ep_profile_modal_user_list\").attr(\"data-page\") || 1;\n      var pageLoaded = $(\"#ep_profile_modal_user_list\").attr(\"data-pageLoaded\") || false;\n      const online_list_selector = $('#ep_profile_user_list_container');\n\n      if(pageLoaded!==\"true\"){\n        $.ajax({\n          url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/getContributors/${page}/`,\n          type: 'get',\n          data: {},\n          contentType: false,\n          processData: false,\n          beforeSend() {\n            // setting a timeout\n            //$('#contributorsLoading').show();\n            $('#ep_profile_user_list_container').css({\"display\":\"none\"})\n            $(\"#ep_profile_modal_load_more_contributors\").css({\"display\":\"none\"})\n            online_list_selector.css({\"display\":\"none\"})\n          },\n          error(xhr) { // if error occured\n            $('#contributorsLoading').css({\"display\":\"none\"});\n            online_list_selector.css({\"display\":\"block\"})\n          },\n          success(response) {\n            online_list_selector.css({\"display\":\"block\"})\n            $('#contributorsLoading').css({\"display\":\"none\"});\n            $('#ep_profile_user_list_container').css({\"display\":\"block\"})\n            $(\"#ep_profile_modal_user_list\").attr(\"data-pageLoaded\",\"true\")\n            const onlineUsers = pad.collabClient.getConnectedUsers();\n            contributors.manageOnlineOfflineUsers(response.data, onlineUsers, pad.getUserId(),response.lastPage);\n          },\n\n        });\n      }\n\n      \n    })\n\n    $(\"#ep_profile_modal_load_more_contributors\").on(\"click\",()=>{\n      var page = $(\"#ep_profile_modal_user_list\").attr(\"data-page\") || 1;\n      page++;\n      $.ajax({\n        url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/getContributors/${page}/`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend() {\n          // setting a timeout\n          $('#loadMoreLoading').show();\n          $(\"#ep_profile_modal_load_more_contributors\").css({\"display\":\"none\"})\n          \n        },\n        error(xhr) { // if error occured\n          $('#loadMoreLoading').hide();\n          $(\"#ep_profile_modal_load_more_contributors\").css({\"display\":\"block\"})\n\n        },\n        success(response) {\n          $(\"#ep_profile_modal_load_more_contributors\").css({\"display\":\"block\"})\n          $('#loadMoreLoading').hide();\n          $(\"#ep_profile_modal_user_list\").attr(\"data-page\",page)\n          const onlineUsers = pad.collabClient.getConnectedUsers();\n          contributors.manageOnlineOfflineUsers(response.data, onlineUsers, pad.getUserId(),response.lastPage);\n        },\n\n      });\n \n    })\n\n    $('#userlist_count,#ep_profile_modal_user_list_close').on('click', () => {\n      if ($('#ep_profile_modal_user_list').hasClass('ep_profile_modal-show')) {\n        $('#ep_profile_modal_user_list').removeClass('ep_profile_modal-show');\n        shared.hideGeneralOverlay();\n      } else {\n        shared.showGeneralOverlay();\n        $('#ep_profile_modal_user_list').addClass('ep_profile_modal-show');\n      }\n    });\n\n    $('#ep_profile_modal_verification').on('click', function () {\n      const verificationStatus = $(this).attr('data-verification-status');\n      const oldText = $(this).text();\n      if (verificationStatus != 'true') {\n        $.ajax({\n          url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/sendVerificationEmail/${pad.getUserId()}/null/null`,\n          type: 'get',\n          data: {},\n          contentType: false,\n          processData: false,\n          beforeSend() {\n            // setting a timeout\n            const image_url = '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n\n            $('#ep_profile_modal_verification').text('Sending...');\n          },\n          error(xhr) { // if error occured\n            $('#ep_profile_modal_verification').text('Error');\n            setTimeout(() => {\n              $('#ep_profile_modal_verification').text(oldText);\n            }, 2000);\n          },\n          success(response) {\n            $('#ep_profile_modal_verification').text('Verification email has been sent.');\n            $('#ep_profile_modal_verification').attr('data-verification-status', 'true');\n          },\n\n        });\n      }\n      return false;\n    });\n    $('#ep_profile_modal_share').on('click', () => {\n      const dummy = document.createElement('input');\n      const text = window.location.href;\n\n      document.body.appendChild(dummy);\n      dummy.value = text;\n      dummy.select();\n      document.execCommand('copy');\n      document.body.removeChild(dummy);\n      $.gritter.add({\n        text: 'Link copied to clipboard',\n      });\n    });\n\n    $('#ep-profile-button').on('click', () => {\n      if (window.user_status == 'login') {\n        if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n          $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n        } else {\n          $('#ep_profile_modal').addClass('ep_profile_modal-show');\n          $('#online_ep_profile_modal_status').show();\n          $('#offline_ep_profile_modal_status').hide();\n          shared.showGeneralOverlay();\n        }\n      } else {\n        // ($('#ep_profile_modal_ask').hasClass('ep_profile_modal-show'))?\n        // $('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n        // :\n        // $('#ep_profile_modal_ask').addClass('ep_profile_modal-show')\n        profileForm.resetModal();\n\n        profileForm.showModal();\n      }\n    });\n\n    $('#ep_profile_modal_close').on('click', () => {\n      if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n        $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n        shared.hideGeneralOverlay();\n      } else {\n        shared.showGeneralOverlay();\n        $('#ep_profile_modal').addClass('ep_profile_modal-show');\n      }\n    });\n    $('#ep_profile_modal_close_ask').on('click', () => {\n      ($('#ep_profile_modal_ask').hasClass('ep_profile_modal-show'))\n        ? $('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n        :\t\t$('#ep_profile_modal_ask').addClass('ep_profile_modal-show');\n    });\n\n\n    $('#ep_profile_modal_signout').on('click', () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      window.user_status = 'out';\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_logout',\n        email: $('#ep_profile_hidden_email').val(),\n        userId,\n        padId,\n\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n      $('#online_ep_profile_modal_status').hide();\n      $('#offline_ep_profile_modal_status').show();\n      // $('#ep_profile_modal_ask').addClass('ep_profile_modal-show')\n      syncData.resetProfileModalFields();\n      // $('#ep_profile_modal').addClass('ep_profile_modal-show')\n      // shared.showGeneralOverlay()\n      shared.hideGeneralOverlay();\n      // shared.sendSignOutMessage(userId,padId)\n      $(`.avatar[data-id=\"user_${userId}\"]`).attr({style: ''});\n      helper.userLogout();\n    });\n\n\n    // upload image profile\n    $('#profile_file').on('change', (e) => {\n      const userId = pad.getUserId();\n      const fd = new FormData();\n      const files = $('#profile_file')[0].files[0];\n      fd.append('file', files);\n      if (!files) return;\n      $.ajax({\n        url: `/static/${clientVars.padId}/pluginfw/ep_profile_modal/upload/${userId}`,\n        type: 'post',\n        data: fd,\n        contentType: false,\n        processData: false,\n        beforeSend() {\n          // setting a timeout\n          helper.refreshLoadingImage(userId, clientVars.padId);\n        },\n        error(xhr) { // if error occured\n          helper.refreshUserImage(userId, clientVars.padId);\n        },\n        success(response) {\n          helper.refreshUserImage(userId, clientVars.padId);\n        },\n\n      });\n    });\n\n    $('#ep_profile_modal_submit').on('click', () => {\n      const username = $('#ep_profile_modal_username').val();\n      const email = $('#ep_profile_modal_email').val();\n\n      shared.loginByEmailAndUsername(username, email);\n    });\n\n    $('#ep_profile_modal_login').on('click', () => {\n      const username = $('#ep_profile_modal-username').val();\n      const email = $('#ep_profile_modal-email').val();\n\n      shared.loginByEmailAndUsername(username, email);\n      $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n    });\n\n    $('#ep_profile_general_overlay').on('click', () => {\n      shared.hideGeneralOverlay();\n    });\n\n    return [];\n  };\n  return postAceInit;\n})();\n","// var contributors = require('./contributors/contributors');\n// var profileForm = require('./profileForm/main');\n// var usersProfileSection = require('./userProfileSection/userProfileSection');\n\n\nconst aceInitialized = (() => {\n  const aceInitialized = (hook, context) => {\n    const userId = pad.getUserId();\n    // if (!window.matchMedia('(max-width: 720px)').matches) {\n    profileForm.initModal(clientVars);\n    // if (clientVars.ep_profile_modal.form_passed !== true) {\n    //   profileForm.showModal();\n    // }\n    if (localStorage.getItem(\"formPassed\") != \"yes\")\n      profileForm.allEventListener()\n    //   profileForm.showModal();\n    \n    // / user profile section\n    usersProfileSection.initiate(clientVars);\n    // / user profile section\n\n    //template generate \n    $('body').append(modal);\n    // /\n    var modal = $('#ep_profile_modal_script').tmpl(clientVars);\n    $('body').append(modal);\n    // /\n    modal = $('#ep_profile_modal_user_list_script').tmpl(clientVars);\n    $('body').append(modal);\n    // /general\n    modal = $('#ep_profile_modal_general_script').tmpl();\n    $('body').append(modal);\n    //template generate \n\n    const style = `background : url(/static/getUserProfileImage/${userId}/${clientVars.padId}) no-repeat 50% 50% ; background-size :32px`;\n    const onlineUsers = pad.collabClient.getConnectedUsers();\n    const usersListHTML = contributors.createHTMLforUserList(clientVars.ep_profile_modal.contributed_authors_count, onlineUsers, clientVars.padId, clientVars.ep_profile_modal.verified);\n\n    $('#pad_title').append(`<div class='ep_profile_modal_header'><div class='userlist' id='userlist'>${usersListHTML}</div><div class='ep-profile-button' id='ep-profile-button'><div id='ep-profile-image' style='${style}' /></div></div>`);\n\n    if (clientVars.ep_profile_modal.user_status == '2') {\n      window.user_status = 'login';\n    } else {\n      window.user_status = 'out';\n      // if (clientVars.ep_profile_modal.form_passed == true) {\n      //   setTimeout(() => {\n      //     profileForm.showModal();\n\n      //     // $('#ep_profile_modal_ask').addClass('ep_profile_modal-show')\n      //   }, 1000);\n      // }\n    }\n    // We were telling to server that we are ready to get data that due to large data need to be request base over HTTP + just for analytics\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_ready',\n      userId,\n      padId: clientVars.padId,\n      data: clientVars.ep_profile_modal,\n    };\n    pad.collabClient.sendMessage(message);\n    if (clientVars.ep_profile_modal.userName == 'Anonymous') {\n      pad.collabClient.updateUserInfo({\n        userId,\n        name: 'Anonymous',\n        colorId: '#b4b39a',\n      });\n    }\n    // }\n\n\n    return [];\n  };\n\n  return aceInitialized;\n})();\n","// var helper = require('./helper');\n// var contributors = require('./contributors/contributors');\n// var syncData = require('./syncData');\n// var shared = require('./shared');\n\n\nconst handleClientMessage = (() => {\n  const handleClientMessage_USER_NEWINFO = (hook, context) => {\n    const padId = pad.getPadId();\n\n    contributors.increaseUserFromList(context.payload.userId, padId);\n    return [];\n  };\n  const handleClientMessage_USER_LEAVE = (hook, context) => {\n    const padId = pad.getPadId();\n\n    contributors.decreaseUserFromList(context.payload.userId, padId);\n    return [];\n  };\n  const handleClientMessage_CUSTOM = (hook, context, cb) => {\n    const current_user_id = pad.getUserId();\n\n    if (context.payload.action == 'totalUserHasBeenChanged') {\n      const totalUserCount = context.payload.totalUserCount;\n      $('#userlist_count').text(totalUserCount);\n      // var style = \"background : url(/static/getUserProfileImage/\"+current_user_id+\"/\"+ clientVars.padId +\") no-repeat 50% 50% ; background-size :32px\"\n      // var onlineUsers = pad.collabClient.getConnectedUsers();\n      // var usersListHTML = contributors.createHTMLforUserList( context.payload.totalUserCount,onlineUsers,context.payload.padId,\n      // context.payload.verified_users)\n      // $(\"#pad_title\").append(\"<div class='ep_profile_modal_header'><div class='userlist' id='userlist'>\"+usersListHTML+\"</div><div class='ep-profile-button' id='ep-profile-button'><div id='ep-profile-image' style='\"+style+\"' /></div></div>\")\n      // var tmplObject = {\n      // \tonlineUsers : onlineUsers.reverse(),\n      // \ttotalUserCount : context.payload.totalUserCount ,\n      // \tpadId : context.payload.padId,\n      // \tverified_users : context.payload.verified_users\n      // }\n      // modal = $(\"#ep_profile_modal_user_list_script\").tmpl(tmplObject,\n      // \t{\n      // \t  isInArray: function (items , needle) {\n      // \t\treturn items.indexOf(needle);\n      // \t  }\n      // \t});\n    }\n\n    // if (context.payload.action == 'EP_PROFILE_MODAL_PROMPT_DATA') { // when we quess user by exist data prompt\n    //   // if (confirm('Do you want to prefill your existing data?')) {\n    //   // \t//for set image\n    //   // \tif (context.payload.data.image){\n    //   // \t\tvar message = {\n    //   // \t\t\ttype : 'ep_profile_modal',\n    //   // \t\t\taction : \"ep_profile_modal_prefill\" ,\n    //   // \t\t\tuserId :  context.payload.userId,\n    //   // \t\t\tdata: context.payload.data,\n    //   // \t\t\tpadId : context.payload.padId\n    //   // \t\t  }\n    //   // \t\tpad.collabClient.sendMessage(message);  // Send the chat position message to the server\n    //   // \t}\n\n    //   // \t$(\"#ep_profile_modal_homepage\").val(context.payload.data.homepage)\n    //   // \t$(\"#ep_profile_modalForm_about_yourself\").val(context.payload.data.about)\n    //   // \t$(\"#profile_modal_selected_image\").css({\"background-position\":\"50% 50%\",\n    //   // \t\"background-image\":\"url(\"+context.payload.data.image+\")\" , \"background-repeat\":\"no-repeat\",\"background-size\": \"64px\"\n    //   // \t});\n    //   // \t// Save it!\n    //   // }else{\n    //   // \tvar message = {\n    //   // \t\ttype : 'ep_profile_modal',\n    //   // \t\taction : \"ep_profile_modal_prefill\" ,\n    //   // \t\tuserId :  context.payload.userId,\n    //   // \t\tdata: {\n    //   // \t\t\timage:\"\"\n    //   // \t\t},\n    //   // \t\tpadId : context.payload.padId\n    //   // \t  }\n    //   // \tpad.collabClient.sendMessage(message);\n    //   // }\n    //   // var image_url = `/static/getUserProfileImage/${context.payload.userId}/${context.payload.padId}?t=${new Date().getTime()}`;\n    //   // $('#ep_profile_modal_homepage').val(context.payload.data.homepage);\n    //   // $('#ep_profile_modalForm_about_yourself').val(context.payload.data.about);\n    //   // $('#profile_modal_selected_image').css({'background-position': '50% 50%',\n    //   //   'background-image': `url(${image_url})`, 'background-repeat': 'no-repeat', 'background-size': '64px'});\n    // }\n    \n    // if (context.payload.action == 'EP_PROFILE_USERS_LIST') {\n    //   const onlineUsers = pad.collabClient.getConnectedUsers();\n    //   contributors.manageOnlineOfflineUsers(context.payload.list, onlineUsers, pad.getUserId());\n    // }\n\n    if (context.payload.action == 'EP_PROFILE_USER_IMAGE_CHANGE') { // when user A change image and user B want to know\n      helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n    }\n\n    if (context.payload.action == 'EP_PROFILE_USER_LOGOUT_UPDATE') {\n      var image_url = `/static/getUserProfileImage/${context.payload.userId}/${context.payload.padId}?t=${new Date().getTime()}`;\n\n      if (current_user_id == context.payload.userId) {\n        helper.refreshUserImage(current_user_id, context.payload.padId);\n        helper.logoutCssFix(current_user_id);\n\n        //\t\t\t$(\"#ep_profile_modal_section_info_name\").text(context.payload.userName);\n      } else {\n        helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n      }\n\n      syncData.resetGeneralFields(context.payload.userId);\n\n      // making user as anonymous\n      var online_anonymous_selector = contributors.isThereOnlineAnonymous();\n      if (online_anonymous_selector) {\n        contributors.increaseToOnlineAnonymous(online_anonymous_selector, context.payload.userId);\n      } else {\n        contributors.createOnlineAnonymousElement(context.payload.userId, 'Anonymous', image_url, {});\n      }\n\n      contributors.removeUserElementInUserList(context.payload.userId);\n    }\n\n    // if (context.payload.action == 'EP_PROFILE_MODAL_SEND_MESSAGE_TO_CHAT') {\n    //   shared.addTextChatMessage(context.payload.msg);\n    // }\n    if (context.payload.action == 'EP_PROFILE_USER_LOGIN_UPDATE') {\n      // ///////////////// related to user list when user has been loginned\n      var online_anonymous_selector = contributors.isThereOnlineAnonymous();\n      if (context.payload.userName == 'Anonymous') {\n        if (online_anonymous_selector) {\n          contributors.increaseToOnlineAnonymous(online_anonymous_selector, context.payload.userId);\n        } else {\n          contributors.createOnlineAnonymousElement(context.payload.userId, context.payload.userName, context.payload.img, context.payload.user);\n        }\n\n        contributors.removeUserElementInUserList(context.payload.userId);\n      } else {\n        if (online_anonymous_selector) {\n          if (contributors.checkUserExistInOnlineAnonymous(online_anonymous_selector, context.payload.userId)) {\n            contributors.decreaseFromOnlineAnonymous(online_anonymous_selector, context.payload.userId);\n          }\n        }\n        contributors.createOnlineUserElementInUserList(context.payload.userId, context.payload.userName, context.payload.img, current_user_id, context.payload.user);\n      }\n\n\n      // change owner loginned img at top of page\n      if (current_user_id == context.payload.userId) {\n        helper.refreshUserImage(current_user_id, context.payload.padId);\n        syncData.syncAllFormsData(context.payload.userId, context.payload.user);\n\n        // $(\"#ep_profile_modal_section_info_name\").text(context.payload.userName);\n      } else {\n        helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n        syncData.syncGeneralFormsData(context.payload.userId, context.payload.user);\n      }\n    }\n\n    return [];\n  };\n  return {\n    handleClientMessage_USER_NEWINFO,\n    handleClientMessage_USER_LEAVE,\n    handleClientMessage_CUSTOM,\n\n  };\n})();\n","const helper = (() => {\n  const userLogin = function (data) {\n    window.user_status = 'login';\n    pad.collabClient.updateUserInfo({\n      userId: pad.getUserId(),\n      name: data.username,\n      colorId: '#b4b39a',\n    });\n  };\n  const userLogout = function () {\n    window.user_status = 'logout';\n    pad.collabClient.updateUserInfo({\n      userId: pad.getUserId(),\n      name: 'Anonymous',\n      colorId: '#b4b39a',\n    });\n  };\n  const logoutCssFix = function (userId) {\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({'margin': '0px', 'box-shadow': 'none'});\n    }\n  };\n  const refreshUserImage = function (userId, padId) {\n    const image_url = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${image_url})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    $('.ep_profile_modal_section_image_big_ask').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n    });\n    $('.ep_profile_modal_section_image_big').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '72px',\n    });\n    $('#ep-profile-image').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '32px',\n    });\n\n    const user_selector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (user_selector.length) {\n      user_selector\n          .children('.ep_profile_user_img')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${image_url})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n    }\n  };\n\n  const refreshLoadingImage = function (userId, padId) {\n    const image_url =\n\t\t\t'../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${image_url})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    $('.ep_profile_modal_section_image_big_ask').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n    });\n    $('.ep_profile_modal_section_image_big').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '72px',\n    });\n    $('#ep-profile-image').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '32px',\n    });\n\n    const user_selector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (user_selector.length) {\n      user_selector\n          .children('.ep_profile_user_img')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${image_url})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n    }\n  };\n\n  const refreshGeneralImage = function (userId, padId) {\n    const image_url = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${image_url})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    const user_selector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (user_selector.length) {\n      user_selector\n          .children('.ep_profile_user_img')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${image_url})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n    }\n  };\n\n  return {\n    userLogin,\n    userLogout,\n    logoutCssFix,\n    refreshUserImage,\n    refreshLoadingImage,\n    refreshGeneralImage,\n  };\n})();\n","// var helper = require('./helper');\n\n\nconst shared = (() => {\n  const resetAllProfileImage = function (userId, padId) {\n    $.ajax({\n      url: `/static/${padId}/pluginfw/ep_profile_modal/resetProfileImage/${userId}`,\n      type: 'get',\n      data: {},\n      contentType: false,\n      processData: false,\n      beforeSend() {\n        helper.refreshLoadingImage(userId, padId);\n      },\n      error(xhr) { // if error occured\n        helper.refreshUserImage(userId, padId);\n      },\n      success(response) {\n        helper.refreshUserImage(userId, padId);\n      },\n\n    });\n  };\n  const sendSignOutMessage = function (userId, padId) {\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_send_signout_message',\n      userId,\n      padId,\n\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const addTextChatMessage = function (msg) {\n    const authorClass = `author-${msg.userId.replace(/[^a-y0-9]/g, (c) => {\n      if (c === '.') return '-';\n      return `z${c.charCodeAt(0)}z`;\n    })}`;\n\n    // create the time string\n    let minutes = `${new Date(msg.time).getMinutes()}`;\n    let hours = `${new Date(msg.time).getHours()}`;\n    if (minutes.length === 1) minutes = `0${minutes}`;\n    if (hours.length === 1) hours = `0${hours}`;\n    const timeStr = `${hours}:${minutes}`;\n\n    const html = `<p><span class='time ${authorClass}'>${timeStr}</span> ${msg.text}</p>`;\n\n    $(document).find('#chatbox #chattext').append(html);\n    scrollDownToLastChatText('#chatbox #chattext');\n  };\n  const scrollDownToLastChatText = function scrollDownToLastChatText(selector) {\n    const $element = $(selector);\n    if ($element.length <= 0 || !$element[0]) return true;\n    $element.animate({scrollTop: $element[0].scrollHeight}, {duration: 400, queue: false});\n  };\n\n  const loginByEmailAndUsernameWithoutValidation = function (username, email, suggestData) {\n    window.user_status = 'login';\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_login',\n      email,\n      userId: pad.getUserId(),\n      name: username,\n      padId: pad.getPadId(),\n      suggestData,\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const loginByEmailAndUsername = function (username, email) {\n    if (username == '' || !isEmail(email)) {\n      if (!isEmail(email)) {\n        $('#ep_profile_modal_email').focus();\n        $('#ep_profile_modal_email').addClass('ep_profile_modal_validation_error');\n      }\n      return false;\n    } else {\n      $('#ep_profile_modal_email').removeClass('ep_profile_modal_validation_error');\n\n      window.user_status = 'login';\n      // pad.collabClient.updateUserInfo({\n      //     userId :  pad.getUserId() ,\n      //     name: username,\n      //     colorId: \"#b4b39a\"\n      // } )\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_login',\n        email,\n        userId: pad.getUserId(),\n        name: username,\n        padId: pad.getPadId(),\n        suggestData: false,\n\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      // $('#ep_profile_modal').addClass('ep_profile_modal-show')\n      helper.userLogin({\n        email,\n        username,\n      });\n\n      $('#online_ep_profile_modal_status').show();\n      $('#offline_ep_profile_modal_status').hide();\n      // $('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n      // $(\"#ep_profile_modal_section_info_email\").text(email)\n      // $(\"#ep_profile_modal_section_info_name\").text(username)\n    }\n  };\n\n\n  const isEmail = function (email) {\n    const regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (email == '') { return true; } else { return regex.test(email); }\n  };\n\n  const IsValid = function (url) {\n    const pattern = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n    return pattern.test(url);\n  };\n\n\n  const getFormData = function ($form) {\n    const unindexed_array = $form.serializeArray();\n    const indexed_array = {};\n\n    $.map(unindexed_array, (n, i) => {\n      indexed_array[n.name] = n.value;\n    });\n\n    return indexed_array;\n  };\n  const setFormData = function ($form, indexed_array) {\n    $.map(indexed_array, (n, i) => {\n      $(`#${i}`).val(n);\n    });\n  };\n\n  const isUsername = function (username) {\n    const regex = /^([a-zA-Z0-9_.+-])/;\n    return regex.test(username);\n  };\n  const showGeneralOverlay = function () {\n    $('#ep_profile_general_overlay').addClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_general_overlay').css({display: 'block'});\n  };\n\n  const hideGeneralOverlay = function () {\n    $('#ep_profile_general_overlay').removeClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_general_overlay').css({display: 'none'});\n    $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n    $('#ep_profile_modal_user_list').removeClass('ep_profile_modal-show');\n    $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n  };\n\n  const getValidUrl = function (url) {\n    if (url == '' || !url) return '';\n    let newUrl = window.decodeURIComponent(url);\n    newUrl = newUrl.trim().replace(/\\s/g, '');\n\n    if (/^(:\\/\\/)/.test(newUrl)) {\n      return `http${newUrl}`;\n    }\n    if (!/^(f|ht)tps?:\\/\\//i.test(newUrl)) {\n      return `http://${newUrl}`;\n    }\n\n    return newUrl;\n  };\n\n  const getMonthName = function (monthNumber) {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[monthNumber - 1];\n  };\n  const getCustomeFormatDate = function (date) {\n    if (date == 'today' || date == 'yesterday') return `Last seen ${date}`;\n    date = date.split('-');\n    return `Last seen ${date[2]} ${getMonthName(date[1])} ${date[0]}`;\n  };\n  const getCustomDate = function (date) {\n    if (date == 'today' || date == 'yesterday') return `Last seen ${date}`;\n    date = date.split('-');\n    console.log(\"date\",date)\n    return `Last seen ${date[2]}/${date[1]}/${date[0]}`;\n  };\n\n  return {\n    resetAllProfileImage,\n    sendSignOutMessage,\n    addTextChatMessage,\n    scrollDownToLastChatText,\n    loginByEmailAndUsernameWithoutValidation,\n    loginByEmailAndUsername,\n    isEmail,\n    IsValid,\n    getFormData,\n    setFormData,\n    isUsername,\n    showGeneralOverlay,\n    hideGeneralOverlay,\n    getValidUrl,\n    getMonthName,\n    getCustomeFormatDate,\n    getCustomDate,\n\n  };\n})();\n","// var shared = require('./shared');\n\n\nconst syncData = (() => {\n  const syncAllFormsData = function (userId, data) {\n    if (data === undefined)\n      return;\n    // users List\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (user_selector.length) {\n      const usernameBox = user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text(data.username);\n\n      user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_profile_desc').text(data.about);\n      if (data.homepage) {\n        const homepageElem = usernameBox.children('.ep_profile_contributor_link_container');\n        homepageElem.attr({href: shared.getValidUrl(data.homepage)});\n      }\n      usernameBox.children('.ep_profile_contributor_status').text('Online');\n    }\n    // users list\n\n\n    // profile card\n\n    // $(\"#ep_profile_users_profile_name\").text(data.username)\n    // $(\"#ep_profile_users_profile_desc\").text(data.about)\n    // $(\"#ep_profile_users_profile_homepage\").attr({\"href\":data.homepage})\n    // $(\"#ep_profile_users_profile_homepage\").text(data.homepage)\n\n    // profile card\n\n    // profile modal\n\n    $('#ep_profile_modal-username').val(data.username);\n    $('#ep_profile_modal-about').val(data.about);\n    $('#ep_profile_modal-homepage').val(data.homepage);\n    $('#ep_profile_modal-email').val(data.email);\n    if (data.verified == true) {\n      $('#ep_profile_modal_verification').attr('data-verification-status', 'true');\n      $('#ep_profile_modal_verification').text('Verified');\n    } else {\n      $('#ep_profile_modal_verification').attr('data-verification-status', 'false');\n      $('#ep_profile_modal_verification').text('Send verification email');\n    }\n\n    // if(data.push_notification == false)\n    //     $(\"#ep_profile_modal_push_notification\").attr('checked','')\n    // else\n    //     $(\"#ep_profile_modal_push_notification\").attr('checked','checked')\n\n    // profile modal\n  };\n  const syncGeneralFormsData = function (userId, data) {\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (user_selector.length) {\n      const usernameBox = user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text(data.username);\n\n      user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_profile_desc').text(data.about);\n\n      const homepageElem = usernameBox.children('.ep_profile_contributor_link_container');\n      homepageElem.attr({href: shared.getValidUrl(data.homepage)});\n\n\n      usernameBox.children('.ep_profile_contributor_status').text('Online');\n    }\n  };\n\n\n  const resetProfileModalFields = function () {\n    $('#ep_profile_modal-username').val('');\n    $('#ep_profile_modal-about').val('');\n    $('#ep_profile_modal-homepage').val('');\n    $('#ep_profile_modal-email').val('');\n\n    $('#ep_profile_modalForm_name').val('');\n    $('#ep_profile_modalForm_email').val('');\n    $('#ep_profile_modal_homepage').val('');\n    $('#ep_profile_modalForm_about_yourself').val('');\n  };\n  const resetGeneralFields = function (userId) {\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (user_selector.length) {\n      const usernameBox = user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text('');\n      user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_profile_desc').text('');\n      const homepageElem = usernameBox.children('.ep_profile_contributor_link_container');\n      homepageElem.attr({href: ''});\n      usernameBox.children('.ep_profile_contributor_status').text('');\n    }\n  };\n\n  return {\n    syncAllFormsData,\n    syncGeneralFormsData,\n    resetProfileModalFields,\n    resetGeneralFields,\n  };\n})();\n"]}