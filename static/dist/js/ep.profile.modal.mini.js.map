{"version":3,"sources":["admin.js","contributors.js","main.js","userProfileSection.js","postAceInit.js","aceInitialized.js","handleClientMessage.js","helper.js","shared.js","syncData.js"],"names":["exports","moduleList","documentReady","hooks","context","cb","socket","loc","document","location","port","protocol","url","hostname","pathComponents","pathname","split","baseURL","slice","length","join","resource","substring","room","io","connect","path","on","data","console","log","shared","setFormData","$","getFormData","emit","alert","contributors","getHtmlOfUsersList","userId","username","img","anonymous_handler","about","homepage","seenStatus","style","getValidUrl","increaseToOnlineAnonymous","selector_on","anonymouseCount","attr","ids_data_array","indexOf","push","new_anonymouseCount","parseInt","children","text","decreaseFromOnlineAnonymous","grep","value","remove","increaseToOfflineAnonymous","selector_off","ids_data","createOfflineAnonymousElement","userElement","userListHtml","offline_list_selector","user_selector","insertBefore","append","prepend","moveOnlineUserToOffline","createHTMLforUserList","total","online","padId","verified_users","html","borderStyle","each","reverse","key","increaseUserFromList","$image","prependTo","hide","slideDown","decreaseUserFromList","animate","opacity","this","selector_user","appendTo","image_url","Date","getTime","css","background-position","background-image","background-repeat","background-size","manageOnlineOfflineUsers","all_users_list","onlineUsers","currentUserId","online_list_selector","empty","e","userName","imageUrl","margin-top","error","last_seen_date","getCustomDate","selector_offlines_date","ids_data_off_array","createOnlineUserElementInUserList","user","titleOfContributors","insertAfter","isThereOnlineAnonymous","selector","checkUserExistInOnlineAnonymous","createOnlineAnonymousElement","removeUserElementInUserList","profileForm","hideFormModalOverlay","removeClass","display","handleOnCloseOverlay","pad","getUserId","getPadId","$form","msg","ep_profile_modalForm_name","ep_profile_modalForm_about_yourself","ep_profile_modalForm_homepage","target","time","message","type","action","collabClient","sendMessage","unindexed_array","serializeArray","indexed_array","map","n","i","name","showModal","addClass","setTimeout","focus","resetModal","index","show","initModal","clientVars","modal","tmpl","current_fs","next_fs","previous_fs","animating","sendFormDataToServer","submitHandle","val","helper","userLogin","email","refreshUserImage","nextHandler","currentSection","border","loginByEmailAndUsernameWithoutValidation","userEmail","isEmail","oldText","ajax","contentType","processData","[object Object]","xhr","response","sendEmailVerification","userLink","IsValid","fd","FormData","files","refreshLoadingImage","replace","uploadImg","nextSelection","select","keyCode","preventDefault","next","click","parent","prev","resetAllProfileImage","URL","createObjectURL","usersProfileSection","initiate","initiateListeners","background-color","href","showGeneralOverlay","hideGeneralOverlay","postAceInit","hook","updateUserInfo","colorId","window","user_status","hasClass","verificationStatus","dummy","createElement","body","appendChild","execCommand","removeChild","gritter","add","syncData","resetProfileModalFields","userLogout","loginByEmailAndUsername","aceInitialized","ep_profile_modal","form_passed","getConnectedUsers","usersListHTML","contributed_authors_count","handleClientMessage","handleClientMessage_USER_NEWINFO","payload","handleClientMessage_USER_LEAVE","handleClientMessage_CUSTOM","current_user_id","totalUserCount","list","refreshGeneralImage","logoutCssFix","resetGeneralFields","online_anonymous_selector","addTextChatMessage","syncAllFormsData","syncGeneralFormsData","avatar","margin","box-shadow","scrollDownToLastChatText","$element","scrollTop","scrollHeight","duration","queue","test","getMonthName","monthNumber","sendSignOutMessage","authorClass","c","charCodeAt","minutes","getMinutes","hours","getHours","find","suggestData","isUsername","newUrl","decodeURIComponent","trim","getCustomeFormatDate","date","usernameBox","verified"],"mappings":"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","file":"ep.profile.modal.mini.js","sourcesContent":["// var shared = require('../shared');\n\nconst documentReady = (() => {\n  const documentReady = (hooks, context, cb) => {\n    if (context !== 'admin/ep_profile_modal') {\n      return [];\n    }\n\n    let socket;\n    const loc = document.location;\n    const port = loc.port == '' ? (loc.protocol == 'https:' ? 443 : 80) : loc.port;\n    const url = `${loc.protocol}//${loc.hostname}:${port}/`;\n    const pathComponents = location.pathname.split('/');\n    // Strip admin/plugins\n    const baseURL = `${pathComponents.slice(0, pathComponents.length - 2).join('/')}/`;\n    const resource = `${baseURL.substring(1)}socket.io`;\n\n    const room = `${url}pluginfw/admin/ep_profile_modal`;\n\n    let changeTimer;\n\n\n    // connect\n    socket = io.connect(room, {path: `${baseURL}socket.io`, resource});\n    socket.on('load-settings-result', (data) => {\n      console.log(data);\n      shared.setFormData($('#settings-form'), data);\n    });\n\n    $('#save-settings').on('click', () => {\n      const data = shared.getFormData($('#settings-form'));\n      console.log(data, 'data');\n      socket.emit('save-settings', data);\n      alert('Succesfully saved.');\n    });\n\n    socket.emit('load-settings');\n\n\n    return [];\n  };\n\n  return documentReady;\n})();\n","// var shared = require('../shared');\n\n\nconst contributors = (() => {\n  const defaultImg = '../static/plugins/ep_profile_modal/static/dist/img/user.png';\n\n  const createHTMLforUserList = function (total, online, padId, verified_users) { // generate avatar too\n    let html = \"<div id='usersIconList' class='ep_profile_inlineAvatars'>\";\n    let style;\n    let borderStyle = '';\n    $.each(online.reverse(), (key, value) => {\n      style = `background: url(/static/getUserProfileImage/${value.userId}/${padId}) no-repeat 50% 50% ; background-size : 28px;background-color: #fff;`;\n      if (verified_users && verified_users.length && verified_users !== 'null' && verified_users !== null) {\n        if (verified_users.indexOf(value.userId) == -1) { borderStyle = ''; } else { borderStyle = 'box-shadow: 0px 0px 1px 1px rgba(38,121,255,1);margin: 1px;'; }\n      }\n\n      style += borderStyle;\n      html += `<div class='avatar' data-userId=\"${value.userId}\" data-id=\"user_${value.userId}\"  id=\"user_${value.userId}\" ><div data-userId=\"${value.userId}\"  class='avatarImg' style='${style}' data-id=\"user_${value.userId}\"></div></div>`;\n    });\n    html += ' </div>';\n    return `${html}<span class='slash_profile'>⧸</span><span id='userlist_count' class='userlist_count'>${total}</span>` +\n\t\t\t'<input  value=\\'Share\\'  id=\\'ep_profile_modal_share\\' type=\\'button\\' class=\\'ep_profile_modal_share\\'>';\n  };\n\n  const increaseUserFromList = function (userId, padId) {\n    const style = `background: url(/static/getUserProfileImage/${userId}/${padId}) no-repeat 50% 50% ; background-size : 26px;background-color: #fff;`;\n\n\n    if (!$(`.avatar[data-id=\"user_${userId}\"]`).length) {\n      const $image = $(`<div class='avatar' data-userId=\"${userId}\"  data-id=\"user_${userId}\" id=\"user_${userId}\" ><div class='avatarImg' data-userId=\"${userId}\"  data-id=\"user_${userId}\" style='${style}'></div></div>`);\n      $image.prependTo('#usersIconList');\n      $image.hide().slideDown(200);\n    }\n  };\n\n  const decreaseUserFromList = function (userId, padId) {\n    $(`.avatar[data-id=\"user_${userId}\"]`).animate({opacity: 0}, 1000, 'linear', function () {\n      $(this).remove();\n    }\n    );\n\n    const selector_user = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (selector_user.length) {\n      moveOnlineUserToOffline(selector_user);\n      // selector_user.animate({opacity: 0}, 1000,\"linear\",function()\n      // {\n      //     $(this).remove();\n      // }\n      // )\n    } else {\n      const selector_on = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n      if (selector_on.length) {\n        const selector_off = $('.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]');\n        decreaseFromOnlineAnonymous(selector_on, userId);\n        if (selector_off.length) {\n          increaseToOfflineAnonymous(selector_off, userId);\n        } else {\n          createOfflineAnonymousElement(userId, defaultImg, null, null, selector_user);\n        }\n      } else {\n        let offline_list_selector = $('#ep_profile_user_list_offline');\n        if (offline_list_selector.length) {\n          offline_list_selector.append($(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`));\n        } else {\n          const offline_container = $('#ep_profile_user_list_container_off');\n          offline_container.prepend(\"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'> </div>\");\n          offline_list_selector = $('#ep_profile_user_list_offline');\n          $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`).appendTo(offline_list_selector);\n        }\n        // $(\".ep_profile_user_row[data-id=\\\"user_list_\"+userId+\"\\\"]\").appendTo(\"#ep_profile_user_list_container_off\")\n      }\n    }\n\n    // user img update\n    const image_url = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (user_selector.length) {\n      user_selector.children('.ep_profile_user_img').css({'background-position': '50% 50%',\n        'background-image': `url(${image_url})`, 'background-repeat': 'no-repeat', 'background-size': '69px'});\n    }\n  };\n\n\n  const manageOnlineOfflineUsers = function (all_users_list, onlineUsers, currentUserId) {\n    const online_list_selector = $('#ep_profile_user_list_container');\n    const offline_list_selector = $('#ep_profile_user_list_container_off');\n\n    offline_list_selector.empty();\n    $.each(all_users_list, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId == value.userId);\n      if (result.length) { // online\n        if (value.userName == 'Anonymous') {\n          const selector_on = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n\n          if (selector_on.length) {\n            increaseToOnlineAnonymous(selector_on, value.userId);\n          } else {\n            var userListHtml = getHtmlOfUsersList(value.userId, value.userName, value.imageUrl, 'on_Anonymous', value.about, value.homepage, 'Online');\n            online_list_selector.append(userListHtml);\n          }\n          if (currentUserId == value.userId) { $(\".ep_profile_user_row[data-id='user_list_on_Anonymous']\").css({'margin-top': '28px'}); } // design\n        } else {\n          if (!$(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).length) {\n            var userListHtml = getHtmlOfUsersList(value.userId, value.userName, value.imageUrl, false, value.about, value.homepage, 'Online');\n            try {\n              online_list_selector.append(userListHtml);\n            } catch (error) {\n              console.log(error);\n            }\n          } else if (currentUserId == value.userId) {\n            $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).prependTo(online_list_selector);\n            // $(\".ep_profile_user_list_date_title_header\").prependTo(online_list_selector)\n          } else {\n            $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).appendTo(online_list_selector);\n          }\n          if (currentUserId == value.userId) { $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).css({'margin-top': '28px'}); } // design\n        }\n      } else { // offline\n        if (value.last_seen_date !== '') {\n          if (value.userName != 'Anonymous') {\n            if (!$(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).length) {\n              var userListHtml = getHtmlOfUsersList(value.userId, value.userName, value.imageUrl, false, value.about, value.homepage, shared.getCustomDate(value.last_seen_date));\n              const selector_offlines_date = $('#ep_profile_user_list_offline');\n              if (selector_offlines_date.length) {\n                selector_offlines_date.append(userListHtml);\n              } else {\n                $('#ep_profile_user_list_container_off').append(`<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'>   ${userListHtml}</div>`);\n              }\n            } else {\n              $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).appendTo(offline_list_selector);\n            }\n          }\n        }\n      }\n\n\n      // }\n    });\n\n    // just for anonymouse to be end of list\n    $.each(all_users_list, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId == value.userId);\n      if (!result.length) { // offline\n        if (value.last_seen_date !== '' && value.userName == 'Anonymous') {\n          const selector_off = $('.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]');\n          if (selector_off.length) {\n            const anonymouseCount = selector_off.attr('data-anonymouseCount');\n            const new_anonymouseCount = parseInt(anonymouseCount) + 1;\n\n            const ids_data_off = selector_off.attr('data-user-ids');\n            const ids_data_off_array = ids_data_off.split(',');\n            ids_data_off_array.push(value.userId);\n            selector_off.attr('data-user-ids', ids_data_off_array.join(','));\n\n            selector_off.attr('data-anonymouseCount', new_anonymouseCount);\n            selector_off.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username').text(`Anonymous ×${new_anonymouseCount}`);\n          } else {\n            // createOfflineAnonymousElement(value.userId , value.imageUrl,value.about,value.homepage,)\n            const userListHtml = getHtmlOfUsersList(value.userId, 'Anonymous', value.imageUrl, 'off_Anonymous', value.about, value.homepage, shared.getCustomDate(value.last_seen_date));\n            const selector_offlines_date = $('#ep_profile_user_list_offline');\n            if (selector_offlines_date.length) {\n              selector_offlines_date.append(userListHtml);\n            } else {\n              $('#ep_profile_user_list_container_off').append(`<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'>  ${userListHtml}</div>`);\n            }\n          }\n        }\n      }\n    });\n  };\n\n  var getHtmlOfUsersList = function (userId, username, img, anonymous_handler, about, homepage, seenStatus) {\n    about = about || '';\n    homepage = homepage || '';\n    let style;\n    if (anonymous_handler && username == 'Anonymous') {\n      style = `background: url(${img}) no-repeat 50% 50% ; background-size : 69px ;`;\n\n      return (`<div  data-user-ids='${userId}' data-anonymouseCount='1' data-id='user_list_${anonymous_handler}' class='ep_profile_user_row'>` +\n\t\t\t\t\t`<div style='${style}' class='ep_profile_user_img'></div>` +\n\t\t\t\t\t'<div class=\\'ep_profile_user_list_profile_userDesc\\'>' +\n\t\t\t\t\t\t\t`<div class='ep_profile_user_list_username'><div class='ep_profile_user_list_username_text' >${username}</div>` +\n\t\t\t\t\t\t\t`<div class='ep_profile_contributor_status'>${seenStatus}</div>` +\n\t\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t\t\t`<p class='ep_profile_user_list_profile_desc'>${about}</p>` +\n\t\t\t\t\t'</div> </div>');\n    } else {\n      style = `background: url(${img}) no-repeat 50% 50% ; background-size : 69px ;`;\n      return (`<div data-id='user_list_${userId}' class='ep_profile_user_row'>` +\n\t\t\t\t\t`<div style='${style}' class='ep_profile_user_img'></div>` +\n\t\t\t\t\t'<div class=\\'ep_profile_user_list_profile_userDesc\\'>' +\n\t\t\t\t\t\t\t`<div class='ep_profile_user_list_username'><div class='ep_profile_user_list_username_text' >${username}</div>` +\n\t\t\t\t\t\t\t`<a target='_blank'  class='ep_profile_contributor_link_container' title='${shared.getValidUrl(homepage)}' href='${shared.getValidUrl(homepage)}'> </a>` +\n\t\t\t\t\t\t\t`<div class='ep_profile_contributor_status'>${seenStatus}</div>` +\n\t\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t\t\t`<p class='ep_profile_user_list_profile_desc'>${about}</p>` +\n\t\t\t\t\t'</div> </div>');\n    }\n  };\n\n\n  const increaseToOnlineAnonymous = function (selector_on, userId) {\n    const anonymouseCount = selector_on.attr('data-anonymouseCount');\n    const ids_data = selector_on.attr('data-user-ids');\n    const ids_data_array = ids_data.split(',');\n    if (ids_data_array.indexOf(userId) == -1) {\n      ids_data_array.push(userId);\n      selector_on.attr('data-user-ids', ids_data_array.join(','));\n      const new_anonymouseCount = parseInt(anonymouseCount) + 1;\n      selector_on.attr('data-anonymouseCount', new_anonymouseCount);\n      selector_on.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text').text(`Anonymous ×${new_anonymouseCount}`);\n    }\n  };\n\n  const decreaseFromOnlineAnonymous = function (selector_on, userId) {\n    const anonymouseCount = selector_on.attr('data-anonymouseCount');\n    const ids_data = selector_on.attr('data-user-ids');\n    let ids_data_array = ids_data.split(',');\n\n\n    ids_data_array = $.grep(ids_data_array, (value) => value != userId);\n\n\n    selector_on.attr('data-user-ids', ids_data_array.join(','));\n    const new_anonymouseCount = parseInt(anonymouseCount) - 1;\n    selector_on.attr('data-anonymouseCount', new_anonymouseCount);\n    if (new_anonymouseCount > 1) {\n      selector_on.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text').text(`Anonymous ×${new_anonymouseCount}`);\n    } else {\n      selector_on.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text').text('Anonymous');\n    }\n\n    if (new_anonymouseCount < 1) {\n      selector_on.remove();\n    }\n    return new_anonymouseCount;\n  };\n\n\n  const increaseToOfflineAnonymous = function (selector_off, userId) {\n    const anonymouseCount = selector_off.attr('data-anonymouseCount');\n    let ids_data = selector_off.attr('data-user-ids');\n\n    ids_data = $.grep(ids_data, (value) => value != userId);\n\n    selector_off.attr('data-user-ids', ids_data);\n    const new_anonymouseCount = parseInt(anonymouseCount) + 1;\n    selector_off.attr('data-anonymouseCount', new_anonymouseCount);\n    selector_off.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username').children('.ep_profile_user_list_username_text')\n        .text(`Anonymous ×${new_anonymouseCount}`);\n  };\n\n\n  // var decreaseFromOfflineAnonymous= function (selector_off,userId){\n  //     var anonymouseCount = selector_off.attr(\"data-anonymouseCount\")\n  //     var ids_data = selector_off.attr(\"data-user-ids\")\n\n  //     ids_data = $.grep(ids_data, function(value) {\n  //         return value != userId;\n  //       });\n\n  //     selector_off.attr(\"data-user-ids\",ids_data)\n  //     var new_anonymouseCount= parseInt(anonymouseCount)-1\n  //     selector_off.attr('data-anonymouseCount',new_anonymouseCount);\n  //     (new_anonymouseCount > 1) ? selector_off.children(\".ep_profile_user_username\").text(\"Anonymous ×\"+new_anonymouseCount) : selector_off.children(\".ep_profile_user_username\").text(\"Anonymous\");\n  //     return new_anonymouseCount\n  // }\n\n\n  const createOfflineAnonymousElement = function (userId, img, about, homepage, userElement) {\n    const userListHtml = getHtmlOfUsersList(userId, 'Anonymous', img, 'off_Anonymous', about, homepage, 'Today');\n    // $(\"#ep_profile_user_list_container_off\").append(userListHtml);\n    let offline_list_selector = $('#ep_profile_user_list_offline');\n    if (offline_list_selector.length) {\n      const user_selector = $(\".ep_profile_user_row[data-id='user_list_off_Anonymous']\"); // because need anonymous offline be last one\n      if (user_selector.length) {\n        userElement.insertBefore(user_selector);\n      } else {\n        offline_list_selector.append(userElement);\n      }\n    } else {\n      const offline_container = $('#ep_profile_user_list_container_off');\n      offline_container.prepend(\"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'></div>\");\n      offline_list_selector = $('#ep_profile_user_list_offline');\n      offline_list_selector.append(userListHtml);\n    }\n  };\n\n\n  const createOnlineUserElementInUserList = function (userId, userName, img, currentUserId, user) {\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (!user_selector.length) {\n      const userListHtml = getHtmlOfUsersList(userId, userName, img, false, user.about, user.homepage, 'Online');\n      if (userId == currentUserId) { // it is owner\n        const titleOfContributors = $('#ep_profile_user_list_date_title');\n        if (titleOfContributors.length) {\n          $(userListHtml).insertAfter(titleOfContributors);\n        } else {\n          $('#ep_profile_user_list_container').prepend(userListHtml);\n        }\n      } else {\n        $('#ep_profile_user_list_container').append(userListHtml);\n      }\n    } else {\n      user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username').children('.ep_profile_user_list_username_text')\n          .text(userName);\n      user_selector.children('.ep_profile_user_img').css({'background-position': '50% 50%',\n        'background-image': `url(${img})`, 'background-repeat': 'no-repeat', 'background-size': '69px'});\n      // attr(\"src\",img);\n    }\n  };\n\n  const isThereOnlineAnonymous = function () {\n    const selector = $('.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]');\n    if (selector.length) { return selector; } else { return false; }\n  };\n  const checkUserExistInOnlineAnonymous = function (selector_on, userId) {\n    const ids_data = selector_on.attr('data-user-ids');\n    const ids_data_array = ids_data.split(',');\n    if (ids_data_array.indexOf(userId) == -1) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const createOnlineAnonymousElement = function (userId, userName, imageUrl, user) {\n    const online_list_selector = $('#ep_profile_user_list_container');\n    const userListHtml = getHtmlOfUsersList(userId, userName, imageUrl, 'on_Anonymous', user.about, user.homepage, 'Online');\n    online_list_selector.append(userListHtml);\n  };\n\n  const moveOnlineUserToOffline = function (userElement) {\n    let offline_list_selector = $('#ep_profile_user_list_offline');\n    if (offline_list_selector.length) {\n      const user_selector = $(\".ep_profile_user_row[data-id='user_list_off_Anonymous']\"); // because need anonymous offline be last one\n      if (user_selector.length) {\n        userElement.insertBefore(user_selector);\n      } else {\n        offline_list_selector.append(userElement);\n      }\n    } else {\n      const offline_container = $('#ep_profile_user_list_container_off');\n      offline_container.prepend(\"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'></div>\");\n      offline_list_selector = $('#ep_profile_user_list_offline');\n      offline_list_selector.append(userElement);\n    }\n\n    userElement.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username').children('.ep_profile_contributor_status').text('Last seen today');\n  };\n\n  const removeUserElementInUserList = function (userId) {\n    $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`).remove();\n  };\n\n  return {\n    createHTMLforUserList,\n    increaseUserFromList,\n    decreaseUserFromList,\n    moveOnlineUserToOffline,\n    decreaseFromOnlineAnonymous,\n    increaseToOfflineAnonymous,\n    createOfflineAnonymousElement,\n    manageOnlineOfflineUsers,\n    increaseToOnlineAnonymous,\n    createOnlineUserElementInUserList,\n    isThereOnlineAnonymous,\n    checkUserExistInOnlineAnonymous,\n    createOnlineAnonymousElement,\n    removeUserElementInUserList,\n\n  };\n})();\n","// var shared = require('../shared');\n// var helper = require('../helper');\n\nconst profileForm = (() => {\n  const showModal = function () {\n    $('#ep_profile_formModal').addClass('ep_profile_formModal_show');\n    $('#ep_profile_formModal_overlay').addClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_formModal_overlay').css({display: 'block'});\n\n    setTimeout(() => { $('#ep_profile_modalForm_name').focus(); }, 1000);\n  };\n  const hideFormModalOverlay = function () {\n    $('#ep_profile_formModal_overlay').removeClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_formModal_overlay').css({display: 'none'});\n\n    handleOnCloseOverlay();\n  };\n  const handleOnCloseOverlay = function () {\n    const userId = pad.getUserId();\n    const padId = pad.getPadId();\n    const $form = $('#ep_profile_formModal_msform');\n    const data = getFormData($form);\n    const msg = {};\n    if (data.ep_profile_modalForm_name == '') { return false; }\n    // var message = {\n    //     type : 'ep_profile_modal',\n    //     action : \"ep_profile_modal_send_chat_message\" ,\n    //     userId :  userId,\n    //     data: data,\n    //     padId : padId\n    //     }\n    // pad.collabClient.sendMessage(message);  // Send the chat position message to the server\n    let text = `Please welcome ${data.ep_profile_modalForm_name}`;\n    if (data.ep_profile_modalForm_about_yourself !== '') { text += `, ${data.ep_profile_modalForm_about_yourself}`; }\n    if (data.ep_profile_modalForm_homepage !== '') {\n      const url = shared.getValidUrl(data.ep_profile_modalForm_homepage);\n      text += `, <a target='_blank' href='${url}'>${data.ep_profile_modalForm_homepage}</a>`;\n      // text += `, ${message.data.ep_profile_modalForm_homepage} `\n    }\n\n    msg.text = `<span><b>${text}</b></span>`;\n    msg.target = 'profile';\n    msg.userId = userId;\n    msg.time = new Date();\n\n    // shared.addTextChatMessage(msg);\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'EP_PROFILE_MODAL_SEND_MESSAGE_TO_CHAT',\n      userId,\n      data: msg,\n      padId,\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const resetModal = function () {\n    const fieldsets = $('#ep_profile_formModal_msform fieldset');\n    fieldsets.each(function (index) {\n      if (index == 0) $(this).show(); else $(this).hide();\n    });\n  };\n  const getFormData = function ($form) {\n    const unindexed_array = $form.serializeArray();\n    const indexed_array = {};\n\n    $.map(unindexed_array, (n, i) => {\n      indexed_array[n.name] = n.value;\n    });\n\n    return indexed_array;\n  };\n  const initModal = function (clientVars) {\n    const modal = $('#ep_profile_formModal_script').tmpl(clientVars);\n    $('body').append(modal);\n\n    // jQuery time\n    let current_fs, next_fs, previous_fs; // fieldsets\n    let left, opacity, scale; // fieldset properties which we will animate\n    let animating; // flag to prevent quick multi-click glitches\n\n    $('#ep_profile_formModal_msform fieldset').on('keypress', function (e) {\n      if (e.keyCode == 13) {\n        // Cancel the default action on keypress event\n        e.preventDefault();\n        current_fs = $(this);\n        next_fs = $(this).next();\n        nextHandler(current_fs, next_fs);\n      }\n    });\n    $('.next').click(function () {\n      current_fs = $(this).parent();\n      next_fs = $(this).parent().next();\n      nextHandler(current_fs, next_fs);\n    });\n\n    $('.skip').click(function () {\n      if (animating) return false;\n      $('#ep_profile_modalForm_name').css({border: '1px solid gray'});\n\n      animating = true;\n\n      current_fs = $(this).parent();\n      next_fs = $(this).parent().next();\n\n      // activate next step on progressbar using the index of next_fs\n      // $(\"#progressbar li\").eq($(\"fieldset\").index(next_fs)).addClass(\"active\");\n\n      // show the next fieldset\n      current_fs.hide();\n      next_fs.show();\n      animating = false;\n    });\n\n\n    $('.close , #ep_profile_formModal_overlay , .ep_profile_formModal_topClose').click(() => {\n      $('#ep_profile_formModal').removeClass('ep_profile_formModal_show');\n\n      hideFormModalOverlay();\n\n      return false;\n    });\n    $('.previous').click(function () {\n      if (animating) return false;\n      animating = true;\n\n      current_fs = $(this).parent();\n      previous_fs = $(this).parent().prev();\n\n      // de-activate current step on progressbar\n      // $(\"#progressbar li\").eq($(\"fieldset\").index(current_fs)).removeClass(\"active\");\n      current_fs.hide();\n      previous_fs.show();\n      animating = false;\n    });\n\n    $('.submit').click(() => {\n      submitHandle();\n      return false;\n    });\n    $('.clear').click(function () {\n      shared.resetAllProfileImage($(this).attr('data-userId'), $(this).attr('data-padId'));\n    });\n\n    function sendFormDataToServer() {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      const $form = $('#ep_profile_formModal_msform');\n      const data = getFormData($form);\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_info',\n        userId,\n        data,\n        padId,\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n    }\n    function submitHandle() {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      $('#ep_profile_formModal').removeClass('ep_profile_formModal_show');\n      hideFormModalOverlay();\n\n      sendFormDataToServer();\n\n      const username = $('#ep_profile_modalForm_name').val();\n\n      helper.userLogin({\n        email: $('#ep_profile_modalForm_email').val(),\n        username,\n      });\n      setTimeout(() => {\n        helper.refreshUserImage(userId, padId);\n      }, 2200);\n      // sync profile section to up\n    }\n\n\n    function nextHandler(current_fs, next_fs) {\n      console.log('clicked');\n      if (animating) return false;\n\n      const currentSection = current_fs.attr('data-section');\n      if (currentSection == 'name') {\n        if ($('#ep_profile_modalForm_name').val() == '') {\n          $('#ep_profile_modalForm_name').css({border: '1px solid red'});\n          return false;\n        }\n        var username = $('#ep_profile_modalForm_name').val();\n        $('#ep_profile_modalForm_name').css({border: '0px solid gray'});\n        // submit username once user input and press next\n        helper.userLogin({\n          username,\n        });\n        shared.loginByEmailAndUsernameWithoutValidation(username, '', false);\n      }\n      if (currentSection == 'email') {\n        const userEmail = $('#ep_profile_modalForm_email').val();\n        if (!shared.isEmail(userEmail) || userEmail == '') {\n          $('#ep_profile_modalForm_email').css({border: '1px solid red'});\n          return false;\n        }\n        var username = $('#ep_profile_modalForm_name').val();\n        shared.loginByEmailAndUsernameWithoutValidation(username, userEmail, true);\n        sendEmailVerification(userEmail, username);\n        $('#ep_profile_modalForm_email').css({border: '0px solid gray'});\n      }\n\n      if (currentSection == 'homepage') {\n        const userLink = $('#ep_profile_modal_homepage').val();\n        console.log(shared.IsValid(userLink));\n        if (!shared.IsValid(userLink) || userLink == '') {\n          $('#ep_profile_modal_homepage').css({border: '1px solid red'});\n          return false;\n        }\n        $('#ep_profile_modal_homepage').css({border: '0px solid gray'});\n        sendFormDataToServer();\n      }\n\n      if (currentSection == 'image') {\n        uploadImg();\n      }\n\n\n      animating = true;\n      current_fs.hide();\n      if (next_fs.length) {\n        next_fs.show();\n\n        // focus handling\n        const nextSelection = next_fs.attr('data-section');\n        if (nextSelection == 'email') { $('#ep_profile_modalForm_email').focus().select(); }\n        if (nextSelection == 'homepage') { $('#ep_profile_modal_homepage').focus().select(); }\n        if (nextSelection == 'bio') { $('#ep_profile_modalForm_about_yourself').focus().select(); }\n      } else { // seems last fieldset\n        submitHandle();\n      }\n      animating = false;\n    }\n\n\n    function sendEmailVerification(email, username) {\n      var oldText = $(\"#ep_profile_modal_verification\").text()\n      $.ajax({\n        url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/sendVerificationEmail/${pad.getUserId()}/${username}/${email}`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend() {\n          // setting a timeout\n          const image_url = '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n\n          $('#ep_profile_modal_verification').text('Sending...');\n        },\n        error(xhr) { // if error occured\n          $('#ep_profile_modal_verification').text('Error');\n          setTimeout(() => {\n            $('#ep_profile_modal_verification').text(oldText);\n          }, 2000);\n        },\n        success(response) {\n          $('#ep_profile_modal_verification').text('Verification email has been sent.');\n          $('#ep_profile_modal_verification').attr('data-verification-status', 'true');\n        },\n\n      });\n    }\n\n\n    function uploadImg() {\n      const userId = pad.getUserId();\n      const fd = new FormData();\n      const files = $('#profile_file_modal')[0].files[0];\n      fd.append('file', files);\n      if (!files) return;\n      $.ajax({\n        url: `/static/${clientVars.padId}/pluginfw/ep_profile_modal/upload/${userId}`,\n        type: 'post',\n        data: fd,\n        contentType: false,\n        processData: false,\n        beforeSend() {\n          // setting a timeout\n\n          helper.refreshLoadingImage(userId, clientVars.padId);\n        },\n        error(xhr) { // if error occured\n          helper.refreshUserImage(userId, clientVars.padId);\n          $('#profile_modal_selected_image').attr('style', (i, style) => style && style.replace(/background-image[^;]+;?/g, ''));\n        },\n        success(response) {\n          helper.refreshUserImage(userId, clientVars.padId);\n\n          $('#profile_modal_selected_image').attr('style', (i, style) => style && style.replace(/background-image[^;]+;?/g, ''));\n        },\n\n      });\n    }\n\n\n    // upload image profile\n    $('#profile_file_modal').on('change', (e) => {\n      const files = $('#profile_file_modal')[0].files[0];\n\n      const url = URL.createObjectURL(files);\n      $('#profile_modal_selected_image').css({'background-position': '50% 50%',\n        'background-image': `url(${url})`, 'background-repeat': 'no-repeat', 'background-size': '64px'});\n    });\n  };\n\n\n  return {\n    showModal,\n    hideFormModalOverlay,\n    handleOnCloseOverlay,\n    resetModal,\n    getFormData,\n    initModal,\n\n  };\n})();\n","// var shared = require('../shared');\n\nconst usersProfileSection = (() => {\n  const initiate = function (clientVars) {\n    const modal = $('#ep_profile_users_profile_script').tmpl(clientVars);\n    $('body').append(modal);\n    // $('#ep_profile_users_profile').addClass('ep_profile_formModal_show')\n  };\n\n  const initiateListeners = function () {\n    $('#usersIconList').on('click', '.avatar', function () {\n      console.log('clicked');\n      const userId = $(this).attr('data-userId');\n      const padId = pad.getPadId();\n      $.ajax({\n        url: `/static/${padId}/pluginfw/ep_profile_modal/getUserInfo/${userId}`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend() {\n          const image_url = '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n          $('#ep_profile_users_profile_userImage').css({'background-position': '50% 50%',\n            'background-image': `url(${image_url})`, 'background-repeat': 'no-repeat', 'background-size': '69px', 'background-color': '#3873E0'});\n          $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n        },\n        error(xhr) { // if error occured\n\n        },\n        success(response) {\n          console.log(response);\n          const image_url = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n          let username = response.user.username;\n          if (username == null || username == '') { username = 'Anonymous'; }\n          const about = response.user.about || '';\n          const homepage = response.user.homepage || '';\n\n          $('#ep_profile_users_profile_name').text(username);\n          $('#ep_profile_users_profile_desc').text(about);\n          $('#ep_profile_users_profile_homepage').attr({href: shared.getValidUrl(homepage), target: '_blank'});\n\n\n          $('#ep_profile_users_profile').addClass('ep_profile_formModal_show');\n          shared.showGeneralOverlay();\n\n\n          $('#ep_profile_users_profile_userImage').css({'background-position': '50% 50%',\n            'background-image': `url(${image_url})`, 'background-repeat': 'no-repeat', 'background-size': '69px', 'background-color': '#3873E0'});\n        },\n      });\n    });\n\n    $('#ep_profile_users_profile_close').on('click', () => {\n      $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n      shared.hideGeneralOverlay();\n    });\n  };\n\n  return {\n    initiate,\n    initiateListeners,\n  };\n})();\n","// var usersProfileSection = require('./userProfileSection/userProfileSection');\n// var shared = require('./shared');\n// var helper = require('./helper');\n// var profileForm = require('./profileForm/main');\n// var syncData = require('./syncData');\n\n\nconst postAceInit = (() => {\n  const postAceInit = function (hook, context) {\n    // console.log(\"samir\",pad )\n    // console.log(\"samir\",pad.collabClient )\n    // console.log(\"samir\",pad.collabClient.getConnectedUsers())\n    // /static/getUserProfileImage/${clientVars.userId}?t=${clientVars.serverTimestamp}\n\n    usersProfileSection.initiateListeners();\n\n    $('#ep_profile_modal_save').on('click', () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      const username = $('#ep_profile_modal-username');\n      const email = $('#ep_profile_modal-email');\n      const about = $('#ep_profile_modal-about');\n      const homepage = $('#ep_profile_modal-homepage');\n      // var pushNotification = $(\"#ep_profile_modal_push_notification\").checked;\n      // validations\n      if (username.val() == '') {\n        username.css({border: '1px solid red'});\n        return false;\n      }\n      username.css({border: '0'});\n\n      const userEmail = email.val();\n      if (!shared.isEmail(userEmail) || userEmail == '') {\n        email.css({border: '1px solid red'});\n        return false;\n      }\n      email.css({border: '0'});\n\n      const userLink = homepage.val();\n      console.log(shared.IsValid(userLink));\n      if (!shared.IsValid(userLink) || userLink == '') {\n        homepage.css({border: '1px solid red'});\n        return false;\n      }\n      homepage.css({border: '0'});\n\n      // validations\n\n      const $form = $('#ep_profile_modal_one');\n      const data = shared.getFormData($form);\n\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_info',\n        userId,\n        data,\n        padId,\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      pad.collabClient.updateUserInfo({\n        userId: padId,\n        name: username.val(),\n        colorId: '#b4b39a',\n      });\n\n      // //\n      if (window.user_status == 'login') {\n        if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n          $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n          shared.hideGeneralOverlay();\n        } else {\n          $('#ep_profile_modal').addClass('ep_profile_modal-show');\n\n          $('#online_ep_profile_modal_status').show();\n          $('#offline_ep_profile_modal_status').hide();\n\n          shared.showGeneralOverlay();\n        }\n      }\n      // else{\n      // \t($('#ep_profile_modal_ask').hasClass('ep_profile_modal-show'))?\n      // \t$('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n      // \t:\n      // \t$('#ep_profile_modal_ask').addClass('ep_profile_modal-show')\n      // }\n    });\n\n    $('#userlist_count,#ep_profile_modal_user_list_close').on('click', () => {\n      if ($('#ep_profile_modal_user_list').hasClass('ep_profile_modal-show')) {\n        $('#ep_profile_modal_user_list').removeClass('ep_profile_modal-show');\n        shared.hideGeneralOverlay();\n      } else {\n        shared.showGeneralOverlay();\n        $('#ep_profile_modal_user_list').addClass('ep_profile_modal-show');\n      }\n    });\n\n    $('#ep_profile_modal_verification').on('click', function () {\n      const verificationStatus = $(this).attr('data-verification-status');\n      const oldText = $(this).text();\n      if (verificationStatus != 'true') {\n        $.ajax({\n          url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/sendVerificationEmail/${pad.getUserId()}/null/null`,\n          type: 'get',\n          data: {},\n          contentType: false,\n          processData: false,\n          beforeSend() {\n            // setting a timeout\n            const image_url = '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n\n            $('#ep_profile_modal_verification').text('Sending...');\n          },\n          error(xhr) { // if error occured\n            $('#ep_profile_modal_verification').text('Error');\n            setTimeout(() => {\n              $('#ep_profile_modal_verification').text(oldText);\n            }, 2000);\n          },\n          success(response) {\n            $('#ep_profile_modal_verification').text('Verification email has been sent.');\n            $('#ep_profile_modal_verification').attr('data-verification-status', 'true');\n          },\n\n        });\n      }\n      return false;\n    });\n    $('#ep_profile_modal_share').on('click', () => {\n      const dummy = document.createElement('input');\n      const text = window.location.href;\n\n      document.body.appendChild(dummy);\n      dummy.value = text;\n      dummy.select();\n      document.execCommand('copy');\n      document.body.removeChild(dummy);\n      $.gritter.add({\n        text: 'Link copied to clipboard',\n      });\n    });\n\n    $('#ep-profile-button').on('click', () => {\n      if (window.user_status == 'login') {\n        if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n          $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n        } else {\n          $('#ep_profile_modal').addClass('ep_profile_modal-show');\n          $('#online_ep_profile_modal_status').show();\n          $('#offline_ep_profile_modal_status').hide();\n          shared.showGeneralOverlay();\n        }\n      } else {\n        // ($('#ep_profile_modal_ask').hasClass('ep_profile_modal-show'))?\n        // $('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n        // :\n        // $('#ep_profile_modal_ask').addClass('ep_profile_modal-show')\n        profileForm.resetModal();\n\n        profileForm.showModal();\n      }\n    });\n\n    $('#ep_profile_modal_close').on('click', () => {\n      if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n        $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n        shared.hideGeneralOverlay();\n      } else {\n        shared.showGeneralOverlay();\n        $('#ep_profile_modal').addClass('ep_profile_modal-show');\n      }\n    });\n    $('#ep_profile_modal_close_ask').on('click', () => {\n      ($('#ep_profile_modal_ask').hasClass('ep_profile_modal-show'))\n        ? $('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n        :\t\t$('#ep_profile_modal_ask').addClass('ep_profile_modal-show');\n    });\n\n\n    $('#ep_profile_modal_signout').on('click', () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      window.user_status = 'out';\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_logout',\n        email: $('#ep_profile_hidden_email').val(),\n        userId,\n        padId,\n\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n      $('#online_ep_profile_modal_status').hide();\n      $('#offline_ep_profile_modal_status').show();\n      // $('#ep_profile_modal_ask').addClass('ep_profile_modal-show')\n      syncData.resetProfileModalFields();\n      // $('#ep_profile_modal').addClass('ep_profile_modal-show')\n      // shared.showGeneralOverlay()\n      shared.hideGeneralOverlay();\n      // shared.sendSignOutMessage(userId,padId)\n      $(`.avatar[data-id=\"user_${userId}\"]`).attr({style: ''});\n      helper.userLogout();\n    });\n\n\n    // upload image profile\n    $('#profile_file').on('change', (e) => {\n      const userId = pad.getUserId();\n      const fd = new FormData();\n      const files = $('#profile_file')[0].files[0];\n      fd.append('file', files);\n      if (!files) return;\n      $.ajax({\n        url: `/static/${clientVars.padId}/pluginfw/ep_profile_modal/upload/${userId}`,\n        type: 'post',\n        data: fd,\n        contentType: false,\n        processData: false,\n        beforeSend() {\n          // setting a timeout\n          helper.refreshLoadingImage(userId, clientVars.padId);\n        },\n        error(xhr) { // if error occured\n          helper.refreshUserImage(userId, clientVars.padId);\n        },\n        success(response) {\n          helper.refreshUserImage(userId, clientVars.padId);\n        },\n\n      });\n    });\n\n    $('#ep_profile_modal_submit').on('click', () => {\n      const username = $('#ep_profile_modal_username').val();\n      const email = $('#ep_profile_modal_email').val();\n\n      shared.loginByEmailAndUsername(username, email);\n    });\n\n    $('#ep_profile_modal_login').on('click', () => {\n      const username = $('#ep_profile_modal-username').val();\n      const email = $('#ep_profile_modal-email').val();\n\n      shared.loginByEmailAndUsername(username, email);\n      $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n    });\n\n    $('#ep_profile_general_overlay').on('click', () => {\n      shared.hideGeneralOverlay();\n    });\n\n    return [];\n  };\n  return postAceInit;\n})();\n","// var contributors = require('./contributors/contributors');\n// var profileForm = require('./profileForm/main');\n// var usersProfileSection = require('./userProfileSection/userProfileSection');\n\n\nconst aceInitialized = (() => {\n  const aceInitialized = (hook, context) => {\n    const userId = pad.getUserId();\n    // if (!window.matchMedia('(max-width: 720px)').matches) {\n    let modal = $('#ep_profile_askmodal_script').tmpl(clientVars);\n    profileForm.initModal(clientVars);\n    if (clientVars.ep_profile_modal.form_passed !== true) {\n      profileForm.showModal();\n    }\n    // / user profile section\n    usersProfileSection.initiate(clientVars);\n    // / user profile section\n\n    //\n    $('body').append(modal);\n    // /\n    modal = $('#ep_profile_modal_script').tmpl(clientVars);\n    $('body').append(modal);\n    // /\n    modal = $('#ep_profile_modal_user_list_script').tmpl(clientVars);\n    $('body').append(modal);\n    // /general\n    modal = $('#ep_profile_modal_general_script').tmpl(clientVars);\n    $('body').append(modal);\n    const style = `background : url(/static/getUserProfileImage/${userId}/${clientVars.padId}) no-repeat 50% 50% ; background-size :32px`;\n    const onlineUsers = pad.collabClient.getConnectedUsers();\n    const usersListHTML = contributors.createHTMLforUserList(clientVars.ep_profile_modal.contributed_authors_count, onlineUsers, clientVars.padId, clientVars.ep_profile_modal.verified_users);\n    if (clientVars.ep_profile_modal.user_status == '2') {\n      window.user_status = 'login';\n      $('#pad_title').append(`<div class='ep_profile_modal_header'><div class='userlist' id='userlist'>${usersListHTML}</div><div class='ep-profile-button' id='ep-profile-button'><div id='ep-profile-image' style='${style}' /></div></div>`);\n    } else {\n      $('#pad_title').append(`<div class='ep_profile_modal_header'><div class='userlist' id='userlist'>${usersListHTML} </div><div class='ep-profile-button' id='ep-profile-button'><div id='ep-profile-image'  style='${style}' /></div></div>`);\n      window.user_status = 'out';\n      if (clientVars.ep_profile_modal.form_passed == true) {\n        setTimeout(() => {\n          profileForm.showModal();\n\n          // $('#ep_profile_modal_ask').addClass('ep_profile_modal-show')\n        }, 1000);\n      }\n    }\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_ready',\n      userId,\n      padId: pad.getPadId(),\n      data: clientVars.ep_profile_modal,\n    };\n    pad.collabClient.sendMessage(message);\n    if (clientVars.ep_profile_modal.userName == 'Anonymous') {\n      pad.collabClient.updateUserInfo({\n        userId,\n        name: 'Anonymous',\n        colorId: '#b4b39a',\n      });\n    }\n    // }\n\n\n    return [];\n  };\n\n  return aceInitialized;\n})();\n","// var helper = require('./helper');\n// var contributors = require('./contributors/contributors');\n// var syncData = require('./syncData');\n// var shared = require('./shared');\n\n\nconst handleClientMessage = (() => {\n  const handleClientMessage_USER_NEWINFO = (hook, context) => {\n    const padId = pad.getPadId();\n\n    contributors.increaseUserFromList(context.payload.userId, padId);\n    return [];\n  };\n  const handleClientMessage_USER_LEAVE = (hook, context) => {\n    const padId = pad.getPadId();\n\n    contributors.decreaseUserFromList(context.payload.userId, padId);\n    return [];\n  };\n  const handleClientMessage_CUSTOM = (hook, context, cb) => {\n    const current_user_id = pad.getUserId();\n\n    if (context.payload.action == 'totalUserHasBeenChanged') {\n      const totalUserCount = context.payload.totalUserCount;\n      $('#userlist_count').text(totalUserCount);\n      // var style = \"background : url(/static/getUserProfileImage/\"+current_user_id+\"/\"+ clientVars.padId +\") no-repeat 50% 50% ; background-size :32px\"\n      // var onlineUsers = pad.collabClient.getConnectedUsers();\n      // var usersListHTML = contributors.createHTMLforUserList( context.payload.totalUserCount,onlineUsers,context.payload.padId,\n      // context.payload.verified_users)\n      // $(\"#pad_title\").append(\"<div class='ep_profile_modal_header'><div class='userlist' id='userlist'>\"+usersListHTML+\"</div><div class='ep-profile-button' id='ep-profile-button'><div id='ep-profile-image' style='\"+style+\"' /></div></div>\")\n      // var tmplObject = {\n      // \tonlineUsers : onlineUsers.reverse(),\n      // \ttotalUserCount : context.payload.totalUserCount ,\n      // \tpadId : context.payload.padId,\n      // \tverified_users : context.payload.verified_users\n      // }\n      // modal = $(\"#ep_profile_modal_user_list_script\").tmpl(tmplObject,\n      // \t{\n      // \t  isInArray: function (items , needle) {\n      // \t\treturn items.indexOf(needle);\n      // \t  }\n      // \t});\n    }\n\n    if (context.payload.action == 'EP_PROFILE_MODAL_PROMPT_DATA') { // when we quess user by exist data prompt\n      // if (confirm('Do you want to prefill your existing data?')) {\n      // \t//for set image\n      // \tif (context.payload.data.image){\n      // \t\tvar message = {\n      // \t\t\ttype : 'ep_profile_modal',\n      // \t\t\taction : \"ep_profile_modal_prefill\" ,\n      // \t\t\tuserId :  context.payload.userId,\n      // \t\t\tdata: context.payload.data,\n      // \t\t\tpadId : context.payload.padId\n      // \t\t  }\n      // \t\tpad.collabClient.sendMessage(message);  // Send the chat position message to the server\n      // \t}\n\n      // \t$(\"#ep_profile_modal_homepage\").val(context.payload.data.homepage)\n      // \t$(\"#ep_profile_modalForm_about_yourself\").val(context.payload.data.about)\n      // \t$(\"#profile_modal_selected_image\").css({\"background-position\":\"50% 50%\",\n      // \t\"background-image\":\"url(\"+context.payload.data.image+\")\" , \"background-repeat\":\"no-repeat\",\"background-size\": \"64px\"\n      // \t});\n      // \t// Save it!\n      // }else{\n      // \tvar message = {\n      // \t\ttype : 'ep_profile_modal',\n      // \t\taction : \"ep_profile_modal_prefill\" ,\n      // \t\tuserId :  context.payload.userId,\n      // \t\tdata: {\n      // \t\t\timage:\"\"\n      // \t\t},\n      // \t\tpadId : context.payload.padId\n      // \t  }\n      // \tpad.collabClient.sendMessage(message);\n      // }\n      var image_url = `/static/getUserProfileImage/${context.payload.userId}/${context.payload.padId}?t=${new Date().getTime()}`;\n      $('#ep_profile_modal_homepage').val(context.payload.data.homepage);\n      $('#ep_profile_modalForm_about_yourself').val(context.payload.data.about);\n      $('#profile_modal_selected_image').css({'background-position': '50% 50%',\n        'background-image': `url(${image_url})`, 'background-repeat': 'no-repeat', 'background-size': '64px'});\n    }\n    if (context.payload.action == 'EP_PROFILE_USERS_LIST') {\n      const onlineUsers = pad.collabClient.getConnectedUsers();\n      contributors.manageOnlineOfflineUsers(context.payload.list, onlineUsers, pad.getUserId());\n    }\n\n    if (context.payload.action == 'EP_PROFILE_USER_IMAGE_CHANGE') { // when user A change image and user B want to know\n      helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n    }\n\n    if (context.payload.action == 'EP_PROFILE_USER_LOGOUT_UPDATE') {\n      var image_url = `/static/getUserProfileImage/${context.payload.userId}/${context.payload.padId}?t=${new Date().getTime()}`;\n\n      if (current_user_id == context.payload.userId) {\n        helper.refreshUserImage(current_user_id, context.payload.padId);\n        helper.logoutCssFix(current_user_id);\n\n        //\t\t\t$(\"#ep_profile_modal_section_info_name\").text(context.payload.userName);\n      } else {\n        helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n      }\n\n      syncData.resetGeneralFields(context.payload.userId);\n\n      // making user as anonymous\n      var online_anonymous_selector = contributors.isThereOnlineAnonymous();\n      if (online_anonymous_selector) {\n        contributors.increaseToOnlineAnonymous(online_anonymous_selector, context.payload.userId);\n      } else {\n        contributors.createOnlineAnonymousElement(context.payload.userId, 'Anonymous', image_url, {});\n      }\n\n      contributors.removeUserElementInUserList(context.payload.userId);\n    }\n\n    if (context.payload.action == 'EP_PROFILE_MODAL_SEND_MESSAGE_TO_CHAT') {\n      shared.addTextChatMessage(context.payload.msg);\n    }\n    if (context.payload.action == 'EP_PROFILE_USER_LOGIN_UPDATE') {\n      // ///////////////// related to user list when user has been loginned\n      var online_anonymous_selector = contributors.isThereOnlineAnonymous();\n      if (context.payload.userName == 'Anonymous') {\n        if (online_anonymous_selector) {\n          contributors.increaseToOnlineAnonymous(online_anonymous_selector, context.payload.userId);\n        } else {\n          contributors.createOnlineAnonymousElement(context.payload.userId, context.payload.userName, context.payload.img, context.payload.user);\n        }\n\n        contributors.removeUserElementInUserList(context.payload.userId);\n      } else {\n        if (online_anonymous_selector) {\n          if (contributors.checkUserExistInOnlineAnonymous(online_anonymous_selector, context.payload.userId)) {\n            contributors.decreaseFromOnlineAnonymous(online_anonymous_selector, context.payload.userId);\n          }\n        }\n        contributors.createOnlineUserElementInUserList(context.payload.userId, context.payload.userName, context.payload.img, current_user_id, context.payload.user);\n      }\n\n\n      // change owner loginned img at top of page\n      if (current_user_id == context.payload.userId) {\n        helper.refreshUserImage(current_user_id, context.payload.padId);\n        syncData.syncAllFormsData(context.payload.userId, context.payload.user);\n\n        // $(\"#ep_profile_modal_section_info_name\").text(context.payload.userName);\n      } else {\n        helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n        syncData.syncGeneralFormsData(context.payload.userId, context.payload.user);\n      }\n    }\n\n    return [];\n  };\n  return {\n    handleClientMessage_USER_NEWINFO,\n    handleClientMessage_USER_LEAVE,\n    handleClientMessage_CUSTOM,\n\n  };\n})();\n","const helper = (() => {\n  const userLogin = function (data) {\n    window.user_status = 'login';\n    pad.collabClient.updateUserInfo({\n      userId: pad.getUserId(),\n      name: data.username,\n      colorId: '#b4b39a',\n    });\n  };\n  const userLogout = function () {\n    window.user_status = 'logout';\n    pad.collabClient.updateUserInfo({\n      userId: pad.getUserId(),\n      name: 'Anonymous',\n      colorId: '#b4b39a',\n    });\n  };\n  const logoutCssFix = function (userId) {\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({'margin': '0px', 'box-shadow': 'none'});\n    }\n  };\n  const refreshUserImage = function (userId, padId) {\n    const image_url = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${image_url})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    $('.ep_profile_modal_section_image_big_ask').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n    });\n    $('.ep_profile_modal_section_image_big').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '72px',\n    });\n    $('#ep-profile-image').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '32px',\n    });\n\n    const user_selector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (user_selector.length) {\n      user_selector\n          .children('.ep_profile_user_img')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${image_url})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n    }\n  };\n\n  const refreshLoadingImage = function (userId, padId) {\n    const image_url =\n\t\t\t'../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${image_url})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    $('.ep_profile_modal_section_image_big_ask').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n    });\n    $('.ep_profile_modal_section_image_big').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '72px',\n    });\n    $('#ep-profile-image').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${image_url})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '32px',\n    });\n\n    const user_selector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (user_selector.length) {\n      user_selector\n          .children('.ep_profile_user_img')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${image_url})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n    }\n  };\n\n  const refreshGeneralImage = function (userId, padId) {\n    const image_url = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${image_url})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    const user_selector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (user_selector.length) {\n      user_selector\n          .children('.ep_profile_user_img')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${image_url})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n    }\n  };\n\n  return {\n    userLogin,\n    userLogout,\n    logoutCssFix,\n    refreshUserImage,\n    refreshLoadingImage,\n    refreshGeneralImage,\n  };\n})();\n","// var helper = require('./helper');\n\n\nconst shared = (() => {\n  const resetAllProfileImage = function (userId, padId) {\n    $.ajax({\n      url: `/static/${padId}/pluginfw/ep_profile_modal/resetProfileImage/${userId}`,\n      type: 'get',\n      data: {},\n      contentType: false,\n      processData: false,\n      beforeSend() {\n        helper.refreshLoadingImage(userId, padId);\n      },\n      error(xhr) { // if error occured\n        helper.refreshUserImage(userId, padId);\n      },\n      success(response) {\n        helper.refreshUserImage(userId, padId);\n      },\n\n    });\n  };\n  const sendSignOutMessage = function (userId, padId) {\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_send_signout_message',\n      userId,\n      padId,\n\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const addTextChatMessage = function (msg) {\n    const authorClass = `author-${msg.userId.replace(/[^a-y0-9]/g, (c) => {\n      if (c === '.') return '-';\n      return `z${c.charCodeAt(0)}z`;\n    })}`;\n\n    // create the time string\n    let minutes = `${new Date(msg.time).getMinutes()}`;\n    let hours = `${new Date(msg.time).getHours()}`;\n    if (minutes.length === 1) minutes = `0${minutes}`;\n    if (hours.length === 1) hours = `0${hours}`;\n    const timeStr = `${hours}:${minutes}`;\n\n    const html = `<p><span class='time ${authorClass}'>${timeStr}</span> ${msg.text}</p>`;\n\n    $(document).find('#chatbox #chattext').append(html);\n    scrollDownToLastChatText('#chatbox #chattext');\n  };\n  const scrollDownToLastChatText = function scrollDownToLastChatText(selector) {\n    const $element = $(selector);\n    if ($element.length <= 0 || !$element[0]) return true;\n    $element.animate({scrollTop: $element[0].scrollHeight}, {duration: 400, queue: false});\n  };\n\n  const loginByEmailAndUsernameWithoutValidation = function (username, email, suggestData) {\n    window.user_status = 'login';\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_login',\n      email,\n      userId: pad.getUserId(),\n      name: username,\n      padId: pad.getPadId(),\n      suggestData,\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const loginByEmailAndUsername = function (username, email) {\n    if (username == '' || !isEmail(email)) {\n      if (!isEmail(email)) {\n        $('#ep_profile_modal_email').focus();\n        $('#ep_profile_modal_email').addClass('ep_profile_modal_validation_error');\n      }\n      return false;\n    } else {\n      $('#ep_profile_modal_email').removeClass('ep_profile_modal_validation_error');\n\n      window.user_status = 'login';\n      // pad.collabClient.updateUserInfo({\n      //     userId :  pad.getUserId() ,\n      //     name: username,\n      //     colorId: \"#b4b39a\"\n      // } )\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_login',\n        email,\n        userId: pad.getUserId(),\n        name: username,\n        padId: pad.getPadId(),\n        suggestData: false,\n\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      // $('#ep_profile_modal').addClass('ep_profile_modal-show')\n      helper.userLogin({\n        email,\n        username,\n      });\n\n      $('#online_ep_profile_modal_status').show();\n      $('#offline_ep_profile_modal_status').hide();\n      // $('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n      // $(\"#ep_profile_modal_section_info_email\").text(email)\n      // $(\"#ep_profile_modal_section_info_name\").text(username)\n    }\n  };\n\n\n  const isEmail = function (email) {\n    const regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (email == '') { return true; } else { return regex.test(email); }\n  };\n\n  const IsValid = function (url) {\n    const pattern = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n    return pattern.test(url);\n  };\n\n\n  const getFormData = function ($form) {\n    const unindexed_array = $form.serializeArray();\n    const indexed_array = {};\n\n    $.map(unindexed_array, (n, i) => {\n      indexed_array[n.name] = n.value;\n    });\n\n    return indexed_array;\n  };\n  const setFormData = function ($form, indexed_array) {\n    $.map(indexed_array, (n, i) => {\n      $(`#${i}`).val(n);\n    });\n  };\n\n  const isUsername = function (username) {\n    const regex = /^([a-zA-Z0-9_.+-])/;\n    return regex.test(username);\n  };\n  const showGeneralOverlay = function () {\n    $('#ep_profile_general_overlay').addClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_general_overlay').css({display: 'block'});\n  };\n\n  const hideGeneralOverlay = function () {\n    $('#ep_profile_general_overlay').removeClass('ep_profile_formModal_overlay_show');\n    $('#ep_profile_general_overlay').css({display: 'none'});\n    $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n    $('#ep_profile_modal_user_list').removeClass('ep_profile_modal-show');\n    $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n  };\n\n  const getValidUrl = function (url) {\n    if (url == '' || !url) return '';\n    let newUrl = window.decodeURIComponent(url);\n    newUrl = newUrl.trim().replace(/\\s/g, '');\n\n    if (/^(:\\/\\/)/.test(newUrl)) {\n      return `http${newUrl}`;\n    }\n    if (!/^(f|ht)tps?:\\/\\//i.test(newUrl)) {\n      return `http://${newUrl}`;\n    }\n\n    return newUrl;\n  };\n\n  const getMonthName = function (monthNumber) {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[monthNumber - 1];\n  };\n  const getCustomeFormatDate = function (date) {\n    if (date == 'today' || date == 'yesterday') return `Last seen ${date}`;\n    date = date.split('-');\n    return `Last seen ${date[2]} ${getMonthName(date[1])} ${date[0]}`;\n  };\n  const getCustomDate = function (date) {\n    if (date == 'today' || date == 'yesterday') return `Last seen ${date}`;\n    date = date.split('-');\n    return `Last seen ${date[2]}/${date[1]}/${date[0]}`;\n  };\n\n  return {\n    resetAllProfileImage,\n    sendSignOutMessage,\n    addTextChatMessage,\n    scrollDownToLastChatText,\n    loginByEmailAndUsernameWithoutValidation,\n    loginByEmailAndUsername,\n    isEmail,\n    IsValid,\n    getFormData,\n    setFormData,\n    isUsername,\n    showGeneralOverlay,\n    hideGeneralOverlay,\n    getValidUrl,\n    getMonthName,\n    getCustomeFormatDate,\n    getCustomDate,\n\n  };\n})();\n","// var shared = require('./shared');\n\n\nconst syncData = (() => {\n  const syncAllFormsData = function (userId, data) {\n    // users List\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (user_selector.length) {\n      const usernameBox = user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text(data.username);\n\n      user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_profile_desc').text(data.about);\n      if (data.homepage) {\n        const homepageElem = usernameBox.children('.ep_profile_contributor_link_container');\n        homepageElem.attr({href: shared.getValidUrl(data.homepage)});\n      }\n      usernameBox.children('.ep_profile_contributor_status').text('Online');\n    }\n    // users list\n\n\n    // profile card\n\n    // $(\"#ep_profile_users_profile_name\").text(data.username)\n    // $(\"#ep_profile_users_profile_desc\").text(data.about)\n    // $(\"#ep_profile_users_profile_homepage\").attr({\"href\":data.homepage})\n    // $(\"#ep_profile_users_profile_homepage\").text(data.homepage)\n\n    // profile card\n\n    // profile modal\n\n    $('#ep_profile_modal-username').val(data.username);\n    $('#ep_profile_modal-about').val(data.about);\n    $('#ep_profile_modal-homepage').val(data.homepage);\n    $('#ep_profile_modal-email').val(data.email);\n    if (data.verified == true) {\n      $('#ep_profile_modal_verification').attr('data-verification-status', 'true');\n      $('#ep_profile_modal_verification').text('Verified');\n    } else {\n      $('#ep_profile_modal_verification').attr('data-verification-status', 'false');\n      $('#ep_profile_modal_verification').text('Send verification email');\n    }\n\n    // if(data.push_notification == false)\n    //     $(\"#ep_profile_modal_push_notification\").attr('checked','')\n    // else\n    //     $(\"#ep_profile_modal_push_notification\").attr('checked','checked')\n\n    // profile modal\n  };\n  const syncGeneralFormsData = function (userId, data) {\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (user_selector.length) {\n      const usernameBox = user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text(data.username);\n\n      user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_profile_desc').text(data.about);\n\n      const homepageElem = usernameBox.children('.ep_profile_contributor_link_container');\n      homepageElem.attr({href: shared.getValidUrl(data.homepage)});\n\n\n      usernameBox.children('.ep_profile_contributor_status').text('Online');\n    }\n  };\n\n\n  const resetProfileModalFields = function () {\n    $('#ep_profile_modal-username').val('');\n    $('#ep_profile_modal-about').val('');\n    $('#ep_profile_modal-homepage').val('');\n    $('#ep_profile_modal-email').val('');\n\n    $('#ep_profile_modalForm_name').val('');\n    $('#ep_profile_modalForm_email').val('');\n    $('#ep_profile_modal_homepage').val('');\n    $('#ep_profile_modalForm_about_yourself').val('');\n  };\n  const resetGeneralFields = function (userId) {\n    const user_selector = $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`);\n    if (user_selector.length) {\n      const usernameBox = user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text('');\n      user_selector.children('.ep_profile_user_list_profile_userDesc').children('.ep_profile_user_list_profile_desc').text('');\n      const homepageElem = usernameBox.children('.ep_profile_contributor_link_container');\n      homepageElem.attr({href: ''});\n      usernameBox.children('.ep_profile_contributor_status').text('');\n    }\n  };\n\n  return {\n    syncAllFormsData,\n    syncGeneralFormsData,\n    resetProfileModalFields,\n    resetGeneralFields,\n  };\n})();\n"]}