{"version":3,"sources":["admin.js","contributors.js","main.js","userProfileSection.js","postAceInit.js","aceInitialized.js","handleClientMessage.js","helper.js","shared.js","syncData.js"],"names":["exports","moduleList","documentReady","hooks","context","cb","socket","loc","document","location","port","protocol","url","hostname","pathComponents","pathname","split","baseURL","slice","length","join","resource","substring","room","io","connect","path","on","data","shared","setFormData","$","getFormData","emit","alert","console","log","each","index","value","append","pad_users_data","userId","email","username","createDate","lastSeenDate","verifiedDate","verified","pad","this","contributors","getHtmlOfUsersList","img","anonymousHandler","about","homepage","seenStatus","style","undefined","getValidUrl","increaseToOnlineAnonymous","selectorOn","anonymouseCount","attr","idsDataArray","indexOf","push","newAnonymouseCount","parseInt","children","text","decreaseFromOnlineAnonymous","grep","remove","increaseToOfflineAnonymous","selectorOff","idsData","createOfflineAnonymousElement","userElement","userListHtml","offlineListSelector","userSelector","insertBefore","prepend","moveOnlineUserToOffline","createHTMLforUserList","total","online","padId","userVerify","html","borderStyle","reverse","key","increaseUserFromList","$image","prependTo","hide","slideDown","decreaseUserFromList","animate","opacity","selectorUser","appendTo","imageUrl","Date","getTime","css","background-position","background-image","background-repeat","background-size","manageOnlineOfflineUsers","allUsersList","onlineUsers","currentUserId","lastPage","onlineListSelector","display","e","userName","margin-top","error","getCustomDate","offlinesDateSelector","idsDataOffArray","selectorOfflinesDate","createOnlineUserElementInUserList","user","titleOfContributors","insertAfter","isThereOnlineAnonymous","selector","checkUserExistInOnlineAnonymous","createOnlineAnonymousElement","removeUserElementInUserList","paginateContributors","containerPaginationList","result","profileForm","showModal","addClass","setTimeout","focus","$form","unindexedArray","serializeArray","indexedArray","map","n","i","name","handleOnCloseOverlay","getUserId","getPadId","msg","localStorage","setItem","innerdocbody","contents","find","off","removeEventListener","ep_profile_modalForm_name","includes","getItem","ep_profile_modalForm_about_yourself","ep_profile_modalForm_homepage","messageChatText","target","time","message","type","action","collabClient","sendMessage","event","CustomEvent","detail","eventName","title","body","window","dispatchEvent","hideFormModalOverlay","removeClass","resetModal","show","initModal","clientVars","modal","tmpl","currentFs","nextFs","previousFs","animating","click","border","parent","next","prev","resetAllProfileImage","sendFormDataToServer","ep_profile_modalForm_push","submitHandle","fd","FormData","files","ajax","contentType","processData","beforeSend","helper","refreshLoadingImage","xhr","refreshUserImage","replace","status","gritter","add","sticky","class_name","success","response","uploadImg","val","userLogin","nextHandler","currentSection","loginByEmailAndUsernameWithoutValidation","userEmail","isEmail","oldText","sendEmailVerification","userLink","isValid","nextSelection","select","keyCode","preventDefault","URL","createObjectURL","allEventListener","which","usersProfileSection","initiate","initiateListeners","avatarListerner","showGeneralOverlay","hideGeneralOverlay","href","userIdParam","postAceInit","hook","elem","checked","is","updateUserInfo","colorId","userStatus","hasClass","page","pageLoaded","getConnectedUsers","verificationStatus","dummy","createElement","appendChild","execCommand","removeChild","ep_profile_modal","syncData","resetProfileModalFields","userLogout","loginByEmailAndUsername","aceInitialized","element","eventHandler","addEventListener","attachEvent","bindEvent","trigger","usersListHTML","contributed_authors_count","handleClientMessage","handleClientMessage_USER_NEWINFO","payload","handleClientMessage_USER_LEAVE","handleClientMessage_CUSTOM","totalUserCount","refreshGeneralImage","logoutCssFix","resetGeneralFields","onlineAnonymousSelector","syncAllFormsData","syncGeneralFormsData","avatar","margin","box-shadow","background-color","rocketChatOnlineUser","scrollDownToLastChatText","$element","scrollTop","scrollHeight","duration","queue","test","getMonthName","monthNumber","sendSignOutMessage","addTextChatMessage","authorClass","c","charCodeAt","minutes","getMinutes","hours","getHours","suggestData","isUsername","newUrl","decodeURIComponent","trim","getCustomeFormatDate","date","usernameBox"],"mappings":"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","file":"ep.profile.modal.mini.js","sourcesContent":["/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\nconst documentReady = (() => {\n  const documentReady = (hooks, context, cb) => {\n    let socket;\n    const loc = document.location;\n    const port =\n      loc.port === '' ? (loc.protocol === 'https:' ? 443 : 80) : loc.port;\n    const url = `${loc.protocol}//${loc.hostname}:${port}/`;\n    const pathComponents = location.pathname.split('/');\n    // Strip admin/plugins\n    const baseURL = `${pathComponents\n        .slice(0, pathComponents.length - 2)\n        .join('/')}/`;\n    const resource = `${baseURL.substring(1)}socket.io`;\n\n    const room = `${url}pluginfw/admin/ep_profile_modal`;\n\n    switch (context) {\n      case 'admin/ep_profile_modal': {\n        // connect\n        socket = io.connect(room, {path: `${baseURL}socket.io`, resource});\n        socket.on('load-settings-result', (data) => {\n          shared.setFormData($('#settings-form'), data);\n        });\n\n        $('#save-settings').on('click', () => {\n          const data = shared.getFormData($('#settings-form'));\n          socket.emit('save-settings', data);\n          alert('Succesfully saved.');\n        });\n\n        socket.emit('load-settings');\n        break;\n      }\n      case 'admin/ep_profile_modal_analytics': {\n        socket = io.connect(room, {path: `${baseURL}socket.io`, resource});\n\n        socket.on('load-pads-result', (data) => {\n          console.log('load-pads', data);\n          $.each(data, (index, value) => {\n            $('#pads').append(`<option value=\"${value}\">${value}</option>`);\n          });\n        });\n        socket.on('load-analytics-result', (data) => {\n          console.log('load-analytics', data);\n          $.each(data.pad_users_data, (index, value) => {\n            if (value.userId) {\n              $('#users').append(`\n              <tr style=\"height: 0;\">\n                <td>${value.email || value.userId}</td>\n                <td>${value.username}</td>\n                <td>${value.createDate}</td>\n                <td>${value.lastSeenDate}</td>\n                <td>${value.verifiedDate || '-'}</td>\n                <td>${value.verified ? 'Verified' : 'unconfirmed'}</td>\n              </tr>\n              `);\n            }\n          });\n        });\n\n        $('#pads').on('change', function () {\n          socket.emit('load-analytics', {pad: this.value});\n        });\n\n        socket.emit('load-pads');\n        break;\n      }\n      default: {\n        return [];\n      }\n    }\n  };\n  return documentReady;\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\nconst contributors = (() => {\n  const defaultImg =\n    '../static/plugins/ep_profile_modal/static/dist/img/user.png';\n\n  const createHTMLforUserList = (total, online, padId, userVerify) => {\n    // generate avatar too\n    let html = \"<div id='usersIconList' class='ep_profile_inlineAvatars'>\";\n    let style;\n    let borderStyle = '';\n    $.each(online.reverse(), (key, value) => {\n      style = `background: url(/static/getUserProfileImage/${value.userId\n      }/${padId}) no-repeat 50% 50% ; background-size : 28px;background-color: #fff;`;\n      if (userVerify) {\n        borderStyle =\n          'box-shadow: 0px 0px 1px 1px rgba(38,121,255,1);margin: 1px;';\n      } else {\n        borderStyle = '';\n      }\n\n      style += borderStyle;\n      html += `<div class='avatar' data-userId=\"${value.userId}\" data-id=\"user_${value.userId\n      }\"  id=\"user_${value.userId}\" ><div data-userId=\"${value.userId\n      }\"  class='avatarImg' style='${style}' data-id=\"user_${value.userId}\"></div></div>`;\n    });\n    html += ' </div>';\n    return `${html}<span class='slash_profile'>⧸</span><span \n    id='userlist_count' class='userlist_count'>${total}</span> <input  value='Share'  \n      id='ep_profile_modal_share' type='button' class='ep_profile_modal_share'>`;\n  };\n\n  const increaseUserFromList = (userId, padId) => {\n    const style = `background: url(/static/getUserProfileImage/${userId}/${padId\n    }) no-repeat 50% 50% ; background-size : 26px;background-color: #fff;`;\n\n    if (!$(`.avatar[data-id=\"user_${userId}\"]`).length) {\n      const $image = $(\n          `<div class='avatar' data-userId=\"${userId}\"  data-id=\"user_${userId}\" id=\"user_${userId\n          }\" ><div class='avatarImg' data-userId=\"${userId}\"  data-id=\"user_${userId\n          }\" style='${style}'></div></div>`\n      );\n      $image.prependTo('#usersIconList');\n      $image.hide().slideDown(200);\n    }\n  };\n\n  // @todo rewrite and use template\n  const getHtmlOfUsersList = (\n      userId,\n      username,\n      img,\n      anonymousHandler,\n      about,\n      homepage,\n      seenStatus\n  ) => {\n    about = about || '';\n    homepage = homepage || '';\n    let style;\n    if (anonymousHandler && username === 'Anonymous') {\n      style = `background: url(${img}) no-repeat 50% 50% ; background-size : 69px ;`;\n\n      return (\n        `<div  data-user-ids='${userId}' data-anonymouseCount='1' data-id='user_list_${\n          anonymousHandler}' class='ep_profile_user_row'>` +\n        `<div style='${style}' class='ep_profile_user_img' id='ep_profile_user_img'></div>` +\n        \"<div class='ep_profile_user_list_profile_userDesc'>\" +\n        `<div class='ep_profile_user_list_username'>\n<div class='ep_profile_user_list_username_text' id='ep_profile_users_profile_name'>${\n        username}</div>` +\n        `<div class='ep_profile_contributor_status'>${seenStatus}</div>` +\n        '</div>' +\n        `<p class='ep_profile_user_list_profile_desc' id='ep_profile_users_profile_desc'>\n${about}</p>` +\n        '</div> </div>'\n      );\n    } else {\n      style = `background: url(${img}) no-repeat 50% 50% ; background-size : 69px ;`;\n      return (\n        `<div data-id='user_list_${userId}' class='ep_profile_user_row'>` +\n        `<div style='${style}' class='ep_profile_user_img'  id='ep_profile_user_img'></div>` +\n        \"<div class='ep_profile_user_list_profile_userDesc'>\" +\n        `<div class='ep_profile_user_list_username'>\n<div class='ep_profile_user_list_username_text' id='ep_profile_users_profile_name'>\n${username}</div>` +\n        `<a target='_blank' style='\n${\n        homepage === '' ||\n  homepage === '#' ||\n  homepage === undefined ||\n  homepage == null\n          ? 'display : none'\n          : ''\n        }'  class='ep_profile_contributor_link_container' title='\n        ${shared.getValidUrl(homepage)}' href='${shared.getValidUrl(\n            homepage\n        )}'> </a>` +\n        `<div class='ep_profile_contributor_status'>${seenStatus}</div>` +\n        '</div>' +\n        `<p class='ep_profile_user_list_profile_desc' id='ep_profile_users_profile_desc'>${\n          about}</p>` +\n        '</div> </div>'\n      );\n    }\n  };\n  const increaseToOnlineAnonymous = (selectorOn, userId) => {\n    const anonymouseCount = selectorOn.attr('data-anonymouseCount');\n    const idsData = selectorOn.attr('data-user-ids');\n    const idsDataArray = idsData.split(',');\n    if (idsDataArray.indexOf(userId) === -1) {\n      idsDataArray.push(userId);\n      selectorOn.attr('data-user-ids', idsDataArray.join(','));\n      const newAnonymouseCount = parseInt(anonymouseCount) + 1;\n      selectorOn.attr('data-anonymouseCount', newAnonymouseCount);\n      selectorOn\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text')\n          .text(`Anonymous ×${newAnonymouseCount}`);\n    }\n  };\n\n  const manageOnlineOfflineUsers = (\n      allUsersList,\n      onlineUsers,\n      currentUserId,\n      lastPage\n  ) => {\n    const onlineListSelector = $('#ep_profile_user_list_container');\n    const offlineListSelector = $('#ep_profile_user_list_container_off');\n    if (lastPage) {\n      $('#ep_profile_modal_load_more_contributors').css({display: 'none'});\n    } else {\n      $('#ep_profile_modal_load_more_contributors').css({display: 'block'});\n    }\n    // offline_list_selector.empty();\n    $.each(allUsersList, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId === value.userId);\n      if (result.length) {\n        // online\n        if (value.userName === 'Anonymous') {\n          const selectorOn = $(\n              '.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]'\n          );\n\n          if (selectorOn.length) {\n            increaseToOnlineAnonymous(selectorOn, value.userId);\n          } else {\n            const userListHtml = getHtmlOfUsersList(\n                value.userId,\n                value.userName,\n                value.imageUrl,\n                'on_Anonymous',\n                value.about,\n                value.homepage,\n                'Online'\n            );\n            onlineListSelector.append(userListHtml);\n          }\n          if (currentUserId === value.userId) {\n            $(\".ep_profile_user_row[data-id='user_list_on_Anonymous']\").css({\n              'margin-top': '28px',\n            });\n          }\n        } else {\n          if (\n            !$(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`)\n                .length\n          ) {\n            const userListHtml = getHtmlOfUsersList(\n                value.userId,\n                value.userName,\n                value.imageUrl,\n                false,\n                value.about,\n                value.homepage,\n                'Online'\n            );\n            try {\n              onlineListSelector.append(userListHtml);\n            } catch (error) {\n              console.log(error);\n            }\n          } else if (currentUserId === value.userId) {\n            $(\n                `.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`\n            ).prependTo(onlineListSelector);\n          } else {\n            $(\n                `.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`\n            ).appendTo(onlineListSelector);\n          }\n          if (currentUserId === value.userId) {\n            $(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`).css({\n              'margin-top': '28px',\n            });\n          }\n        }\n      }\n      // offline\n      if (value.lastSeenDate !== '') {\n        if (value.userName !== 'Anonymous') {\n          if (\n            !$(`.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`)\n                .length\n          ) {\n            console.log('value', value);\n            const userListHtml = getHtmlOfUsersList(\n                value.userId,\n                value.userName,\n                value.imageUrl,\n                false,\n                value.about,\n                value.homepage,\n                shared.getCustomDate(value.lastSeenDate)\n            );\n            const offlinesDateSelector = $('#ep_profile_user_list_offline');\n            if (offlinesDateSelector.length) {\n              offlinesDateSelector.append(userListHtml);\n            } else {\n              $('#ep_profile_user_list_container_off').append(\n                  `<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'>\n                ${userListHtml}</div>`\n              );\n            }\n          } else {\n            $(\n                `.ep_profile_user_row[data-id=\"user_list_${value.userId}\"]`\n            ).appendTo(offlineListSelector);\n          }\n        }\n      }\n\n      // }\n    });\n\n    // just for anonymouse to be end of list\n    $.each(allUsersList, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId === value.userId);\n      if (!result.length) {\n        // offline\n        if (value.userName === 'Anonymous') {\n          const selectorOff = $(\n              '.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]'\n          );\n          if (selectorOff.length) {\n            const anonymouseCount = selectorOff.attr('data-anonymouseCount');\n            const newAnonymouseCount = parseInt(anonymouseCount) + 1;\n\n            const idsDataOff = selectorOff.attr('data-user-ids');\n            const idsDataOffArray = idsDataOff.split(',');\n            idsDataOffArray.push(value.userId);\n            selectorOff.attr('data-user-ids', idsDataOffArray.join(','));\n\n            selectorOff.attr('data-anonymouseCount', newAnonymouseCount);\n            selectorOff\n                .children('.ep_profile_user_list_profile_userDesc')\n                .children('.ep_profile_user_list_username')\n                .text(`Anonymous ×${newAnonymouseCount}`);\n          } else {\n            const userListHtml = getHtmlOfUsersList(\n                value.userId,\n                'Anonymous',\n                value.imageUrl,\n                'off_Anonymous',\n                value.about,\n                value.homepage,\n                shared.getCustomDate(value.lastSeenDate)\n            );\n            const selectorOfflinesDate = $('#ep_profile_user_list_offline');\n            if (selectorOfflinesDate.length) {\n              selectorOfflinesDate.append(userListHtml);\n            } else {\n              $('#ep_profile_user_list_container_off').append(\n                  `<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'>\n                ${userListHtml}</div>`\n              );\n            }\n          }\n        }\n      }\n    });\n  };\n\n  const decreaseFromOnlineAnonymous = (selectorOn, userId) => {\n    const anonymouseCount = selectorOn.attr('data-anonymouseCount');\n    const idsData = selectorOn.attr('data-user-ids');\n    let idsDataArray = idsData.split(',');\n\n    idsDataArray = $.grep(idsDataArray, (value) => value !== userId);\n\n    selectorOn.attr('data-user-ids', idsDataArray.join(','));\n    const newAnonymouseCount = parseInt(anonymouseCount) - 1;\n    selectorOn.attr('data-anonymouseCount', newAnonymouseCount);\n    if (newAnonymouseCount > 1) {\n      selectorOn\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text')\n          .text(`Anonymous ×${newAnonymouseCount}`);\n    } else {\n      selectorOn\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text')\n          .text('Anonymous');\n    }\n\n    if (newAnonymouseCount < 1) {\n      selectorOn.remove();\n    }\n    return newAnonymouseCount;\n  };\n\n  const increaseToOfflineAnonymous = (selectorOff, userId) => {\n    const anonymouseCount = selectorOff.attr('data-anonymouseCount');\n    let idsData = selectorOff.attr('data-user-ids');\n\n    idsData = $.grep(idsData, (value) => value !== userId);\n\n    selectorOff.attr('data-user-ids', idsData);\n    const newAnonymouseCount = parseInt(anonymouseCount) + 1;\n    selectorOff.attr('data-anonymouseCount', newAnonymouseCount);\n    selectorOff\n        .children('.ep_profile_user_list_profile_userDesc')\n        .children('.ep_profile_user_list_username')\n        .children('.ep_profile_user_list_username_text')\n        .text(`Anonymous ×${newAnonymouseCount}`);\n  };\n\n  const createOfflineAnonymousElement = (\n      userId,\n      img,\n      about,\n      homepage,\n      userElement\n  ) => {\n    const userListHtml = getHtmlOfUsersList(\n        userId,\n        'Anonymous',\n        img,\n        'off_Anonymous',\n        about,\n        homepage,\n        'Today'\n    );\n    const offlineListSelector = $('#ep_profile_user_list_offline');\n    if (offlineListSelector.length) {\n      // because need anonymous offline be last one\n      const userSelector = $(\n          \".ep_profile_user_row[data-id='user_list_off_Anonymous']\"\n      );\n      if (userSelector.length) {\n        userElement.insertBefore(userSelector);\n      } else {\n        offlineListSelector.append(userElement);\n      }\n    } else {\n      const offlineContainer = $('#ep_profile_user_list_container_off');\n      offlineContainer.prepend(\n          \"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'></div>\"\n      );\n      offlineListSelector.append(userListHtml);\n    }\n  };\n\n  const createOnlineUserElementInUserList = (\n      userId,\n      userName,\n      img,\n      currentUserId,\n      user\n  ) => {\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (!userSelector.length) {\n      const userListHtml = getHtmlOfUsersList(\n          userId,\n          userName,\n          img,\n          false,\n          user.about,\n          user.homepage,\n          'Online'\n      );\n      if (userId === currentUserId) {\n        // it is owner\n        const titleOfContributors = $('#ep_profile_user_list_date_title');\n        if (titleOfContributors.length) {\n          $(userListHtml).insertAfter(titleOfContributors);\n        } else {\n          $('#ep_profile_user_list_container').prepend(userListHtml);\n        }\n      } else {\n        $('#ep_profile_user_list_container').append(userListHtml);\n      }\n    } else {\n      userSelector\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_username')\n          .children('.ep_profile_user_list_username_text')\n          .text(userName);\n      userSelector.children('.ep_profile_user_img').css({\n        'background-position': '50% 50%',\n        'background-image': `url(${img})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '69px',\n      });\n    }\n  };\n\n  const isThereOnlineAnonymous = () => {\n    const selector = $(\n        '.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]'\n    );\n    if (selector.length) {\n      return selector;\n    } else {\n      return false;\n    }\n  };\n  const checkUserExistInOnlineAnonymous = (selectorOn, userId) => {\n    const idsData = selectorOn.attr('data-user-ids');\n    const idsDataArray = idsData.split(',');\n    if (idsDataArray.indexOf(userId) === -1) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const createOnlineAnonymousElement = (userId, userName, imageUrl, user) => {\n    const onlineListSelector = $('#ep_profile_user_list_container');\n    const userListHtml = getHtmlOfUsersList(\n        userId,\n        userName,\n        imageUrl,\n        'on_Anonymous',\n        user.about,\n        user.homepage,\n        'Online'\n    );\n    onlineListSelector.append(userListHtml);\n  };\n\n  const moveOnlineUserToOffline = (userElement) => {\n    const offlineListSelector = $('#ep_profile_user_list_offline');\n    if (offlineListSelector.length) {\n      // because need anonymous offline be last one\n      const userSelector = $(\n          \".ep_profile_user_row[data-id='user_list_off_Anonymous']\"\n      );\n      if (userSelector.length) {\n        userElement.insertBefore(userSelector);\n      } else {\n        offlineListSelector.append(userElement);\n      }\n    } else {\n      const offlineContainer = $('#ep_profile_user_list_container_off');\n      offlineContainer.prepend(\n          \"<div class='ep_profile_user_list_date_title' id='ep_profile_user_list_offline'></div>\"\n      );\n      offlineListSelector.append(userElement);\n    }\n\n    userElement\n        .children('.ep_profile_user_list_profile_userDesc')\n        .children('.ep_profile_user_list_username')\n        .children('.ep_profile_contributor_status')\n        .text('Last seen today');\n  };\n\n  const decreaseUserFromList = function (userId, padId) {\n    $(`.avatar[data-id=\"user_${userId}\"]`).animate(\n        {opacity: 0},\n        1000,\n        'linear',\n        function () {\n          $(this).remove();\n        }\n    );\n\n    const selectorUser = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (selectorUser.length) {\n      moveOnlineUserToOffline(selectorUser);\n    } else {\n      const selectorOn = $(\n          '.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]'\n      );\n      if (selectorOn.length) {\n        const selectorOff = $(\n            '.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]'\n        );\n        decreaseFromOnlineAnonymous(selectorOn, userId);\n        if (selectorOff.length) {\n          increaseToOfflineAnonymous(selectorOff, userId);\n        } else {\n          createOfflineAnonymousElement(\n              userId,\n              defaultImg,\n              null,\n              null,\n              selectorUser\n          );\n        }\n      } else {\n        let offlineListSelector = $('#ep_profile_user_list_offline');\n        if (offlineListSelector.length) {\n          offlineListSelector.append(\n              $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`)\n          );\n        } else {\n          const offlineContainer = $('#ep_profile_user_list_container_off');\n          offlineContainer.prepend(\n              `<div class=\"ep_profile_user_list_date_title\" \n              id=\"ep_profile_user_list_offline\"></div>`\n          );\n          offlineListSelector = $('#ep_profile_user_list_offline');\n          $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`).appendTo(\n              offlineListSelector\n          );\n        }\n      }\n    }\n\n    // user img update\n    const imageUrl = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      userSelector.children('.ep_profile_user_img').css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '69px',\n      });\n    }\n  };\n\n  const removeUserElementInUserList = (userId) => {\n    $(`.ep_profile_user_row[data-id=\"user_list_${userId}\"]`).remove();\n  };\n\n  const paginateContributors = (\n      allUsersList,\n      onlineUsers,\n      currentUserId,\n      lastPage\n  ) => {\n    const containerPaginationList = $(\n        '#ep_profile_user_list_container_pagination'\n    );\n    if (lastPage) {\n      $('#ep_profile_modal_load_more_contributors').css({display: 'none'});\n    }\n    $.each(allUsersList, (key, value) => {\n      const result = $.grep(onlineUsers, (e) => e.userId === value.userId);\n\n      if (value.lastSeenDate !== '' && value.userName !== 'Anonymous') {\n        const userListHtml = getHtmlOfUsersList(\n            value.userId,\n            value.userName,\n            value.imageUrl,\n            false,\n            value.about,\n            value.homepage,\n            result.length ? 'Online' : shared.getCustomDate(value.lastSeenDate)\n        );\n\n        containerPaginationList.append(userListHtml);\n      }\n\n      if (result.length) {\n        // online\n        if (value.userName === 'Anonymous') {\n          const selectorOn = $(\n              '.ep_profile_user_row[data-id=\"user_list_on_Anonymous\"]'\n          );\n\n          if (selectorOn.length) {\n            increaseToOnlineAnonymous(selectorOn, value.userId);\n          } else {\n            const userListHtml = getHtmlOfUsersList(\n                value.userId,\n                value.userName,\n                value.imageUrl,\n                'on_Anonymous',\n                value.about,\n                value.homepage,\n                'Online'\n            );\n            containerPaginationList.append(userListHtml);\n          }\n          if (currentUserId === value.userId) {\n            $(\".ep_profile_user_row[data-id='user_list_on_Anonymous']\").css({\n              'margin-top': '28px',\n            });\n          }\n        }\n      }\n    });\n\n    // just for anonymouse to be end of list\n    $.each(allUsersList, (key, value) => {\n      // if (value.userId != currentUserId){\n      const result = $.grep(onlineUsers, (e) => e.userId === value.userId);\n      if (!result.length) {\n        // offline\n        if (value.userName === 'Anonymous') {\n          const selectorOff = $(\n              '.ep_profile_user_row[data-id=\"user_list_off_Anonymous\"]'\n          );\n          if (selectorOff.length) {\n            const anonymouseCount = selectorOff.attr('data-anonymouseCount');\n            const newAnonymouseCount = parseInt(anonymouseCount) + 1;\n\n            const idsDataOff = selectorOff.attr('data-user-ids');\n            const idsDataOffArray = idsDataOff.split(',');\n            idsDataOffArray.push(value.userId);\n            selectorOff.attr('data-user-ids', idsDataOffArray.join(','));\n\n            selectorOff.attr('data-anonymouseCount', newAnonymouseCount);\n            selectorOff\n                .children('.ep_profile_user_list_profile_userDesc')\n                .children('.ep_profile_user_list_username')\n                .text(`Anonymous ×${newAnonymouseCount}`);\n          } else {\n            const userListHtml = getHtmlOfUsersList(\n                value.userId,\n                'Anonymous',\n                value.imageUrl,\n                'off_Anonymous',\n                value.about,\n                value.homepage\n            );\n            containerPaginationList.append(userListHtml);\n          }\n        }\n      }\n    });\n  };\n  return {\n    createHTMLforUserList,\n    increaseUserFromList,\n    decreaseUserFromList,\n    moveOnlineUserToOffline,\n    decreaseFromOnlineAnonymous,\n    increaseToOfflineAnonymous,\n    createOfflineAnonymousElement,\n    manageOnlineOfflineUsers,\n    increaseToOnlineAnonymous,\n    createOnlineUserElementInUserList,\n    isThereOnlineAnonymous,\n    checkUserExistInOnlineAnonymous,\n    createOnlineAnonymousElement,\n    removeUserElementInUserList,\n    paginateContributors,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n// var shared = require('../shared');\n// var helper = require('../helper');\n\nconst profileForm = (() => {\n  const showModal = () => {\n    $('#ep_profile_formModal').addClass('ep_profile_formModal_show');\n    $('#ep_profile_formModal_overlay').addClass(\n        'ep_profile_formModal_overlay_show'\n    );\n    $('#ep_profile_formModal_overlay').css({display: 'block'});\n    setTimeout(() => {\n      $('#ep_profile_modalForm_name').focus();\n    }, 1000);\n  };\n\n  const allEventListener = () => {\n    const padOuter = $('iframe[name=\"ace_outer\"]').contents();\n    const padInner = padOuter.find('iframe[name=\"ace_inner\"]');\n    const innerdocbody = padInner.contents().find('#innerdocbody');\n\n    innerdocbody.on('keypress', (e) => {\n      showModal();\n    });\n    innerdocbody.on('mousedown', (event) => {\n      if (event.which === 1) {\n        showModal();\n      }\n    });\n  };\n\n  const removeEventListener = () => {\n    const padOuter = $('iframe[name=\"ace_outer\"]').contents();\n    const padInner = padOuter.find('iframe[name=\"ace_inner\"]');\n    const innerdocbody = padInner.contents().find('#innerdocbody');\n    innerdocbody.off('keypress');\n    innerdocbody.off('mousedown');\n  };\n\n  const getFormData = ($form) => {\n    const unindexedArray = $form.serializeArray();\n    const indexedArray = {};\n\n    $.map(unindexedArray, (n, i) => {\n      indexedArray[n.name] = n.value;\n    });\n\n    return indexedArray;\n  };\n  const handleOnCloseOverlay = () => {\n    const userId = pad.getUserId();\n    const padId = pad.getPadId();\n    const $form = $('#ep_profile_formModal_msform');\n    const data = getFormData($form);\n    const msg = {};\n    localStorage.setItem('formPassed', 'yes');\n    removeEventListener();\n    if (\n      data.ep_profile_modalForm_name === '' ||\n      ['', null, undefined].includes(localStorage.getItem('formStatus'))\n    ) {\n      return false;\n    }\n    let text = `Please welcome ${data.ep_profile_modalForm_name}`;\n    if (data.ep_profile_modalForm_about_yourself !== '') {\n      text += `, ${data.ep_profile_modalForm_about_yourself}`;\n    }\n    if (data.ep_profile_modalForm_homepage !== '') {\n      const url = shared.getValidUrl(data.ep_profile_modalForm_homepage);\n      text += `, ${url}`;\n    }\n\n    msg.messageChatText = `${text}`;\n    msg.target = 'profile';\n    msg.userId = userId;\n    msg.time = new Date();\n\n    const message = {\n      type: 'ep_rocketchat',\n      action: 'ep_rocketchat_sendMessageToChat_login',\n      userId,\n      data: msg,\n      padId,\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n\n    // Dispatch/Trigger/Fire the event\n    const eventData = {userId, padId, title: 'Welcome', body: text};\n    const event = new CustomEvent('ep_push_notification',\n        {detail: {eventName: 'notifyAll', data: eventData}});\n    window.dispatchEvent(event);\n  };\n  const hideFormModalOverlay = () => {\n    $('#ep_profile_formModal_overlay').removeClass(\n        'ep_profile_formModal_overlay_show'\n    );\n    $('#ep_profile_formModal_overlay').css({display: 'none'});\n\n    handleOnCloseOverlay();\n  };\n  const resetModal = function () {\n    const fieldsets = $('#ep_profile_formModal_msform fieldset');\n    fieldsets.each(function (index) {\n      if (index === 0) $(this).show();\n      else $(this).hide();\n    });\n  };\n\n  const initModal = function (clientVars) {\n    const modal = $('#ep_profile_formModal_script').tmpl(clientVars);\n    $('body').append(modal);\n\n    // jQuery time\n    let currentFs, nextFs, previousFs; // fieldsets\n    let animating; // flag to prevent quick multi-click glitches\n\n    $('.skip').click(function () {\n      if (animating) return false;\n      $('#ep_profile_modalForm_name').css({border: '1px solid gray'});\n\n      animating = true;\n\n      currentFs = $(this).parent();\n      nextFs = $(this).parent().next();\n\n      // activate next step on progressbar using the index of next_fs\n      // $(\"#progressbar li\").eq($(\"fieldset\").index(next_fs)).addClass(\"active\");\n\n      // show the next fieldset\n      currentFs.hide();\n      nextFs.show();\n      animating = false;\n    });\n\n    $(\n        '.close , #ep_profile_formModal_overlay , .ep_profile_formModal_topClose'\n    ).click(() => {\n      $('#ep_profile_formModal').removeClass('ep_profile_formModal_show');\n\n      hideFormModalOverlay();\n\n      return false;\n    });\n    $('.previous').click(function () {\n      if (animating) return false;\n      animating = true;\n\n      currentFs = $(this).parent();\n      previousFs = $(this).parent().prev();\n\n      // de-activate current step on progressbar\n      // $(\"#progressbar li\").eq($(\"fieldset\").index(current_fs)).removeClass(\"active\");\n      currentFs.hide();\n      previousFs.show();\n      animating = false;\n    });\n\n    $('.clear').click(function () {\n      shared.resetAllProfileImage(\n          $(this).attr('data-userId'),\n          $(this).attr('data-padId')\n      );\n    });\n\n    const sendFormDataToServer = () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      const $form = $('#ep_profile_formModal_msform');\n      const data = getFormData($form);\n      // send to ep_push_notification\n      if (data.ep_profile_modalForm_push === 'Yes') {\n        const event = new CustomEvent('ep_push_notification',\n            {detail: {eventName: 'checkPermission'}});\n        // Dispatch/Trigger/Fire the event\n        window.dispatchEvent(event);\n      }\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_info',\n        userId,\n        data,\n        padId,\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n    };\n\n    const sendEmailVerification = (email, username) => {\n      const oldText = $('#ep_profile_modal_verification').text();\n      $.ajax({\n        url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/sendVerificationEmail/$\n        {pad.getUserId()}/${username}/${email}`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          // setting a timeout\n          $('#ep_profile_modal_verification').text('Sending...');\n        },\n        error: (xhr) => {\n          // if error occured\n          $('#ep_profile_modal_verification').text('Error');\n          setTimeout(() => {\n            $('#ep_profile_modal_verification').text(oldText);\n          }, 2000);\n        },\n        success: (response) => {\n          $('#ep_profile_modal_verification').text(\n              'Verification email has been sent.'\n          );\n          $('#ep_profile_modal_verification').attr(\n              'data-verification-status',\n              'true'\n          );\n        },\n      });\n    };\n\n    const uploadImg = () => {\n      const userId = pad.getUserId();\n      const fd = new FormData();\n      const files = $('#profile_file_modal')[0].files[0];\n      fd.append('file', files);\n      if (!files) return;\n      $.ajax({\n        url: `/static/${clientVars.padId}/pluginfw/ep_profile_modal/upload/${userId}`,\n        type: 'post',\n        data: fd,\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          // setting a timeout\n\n          helper.refreshLoadingImage(userId, clientVars.padId);\n        },\n        error: (xhr) => {\n          // if error occured\n          helper.refreshUserImage(userId, clientVars.padId);\n          $('#profile_modal_selected_image').attr(\n              'style',\n              (i, style) => style && style.replace(/background-image[^;]+;?/g, '')\n          );\n\n          switch (xhr.status) {\n            case 413:\n              $.gritter.add({\n                title: 'Error',\n                text: 'ep_profile_modal: image size is large.',\n                sticky: true,\n                // eslint-disable-next-line camelcase\n                class_name: 'error',\n              });\n            // Take action, referencing xhr.responseText as needed.\n          }\n        },\n        success: (response) => {\n          helper.refreshUserImage(userId, clientVars.padId);\n\n          $('#profile_modal_selected_image').attr(\n              'style',\n              (i, style) => style && style.replace(/background-image[^;]+;?/g, '')\n          );\n        },\n      });\n    };\n\n    const submitHandle = () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      $('#ep_profile_formModal').removeClass('ep_profile_formModal_show');\n\n      uploadImg();\n\n      hideFormModalOverlay();\n\n      sendFormDataToServer();\n\n      const username = $('#ep_profile_modalForm_name').val();\n\n      helper.userLogin({\n        email: $('#ep_profile_modalForm_email').val(),\n        username,\n      });\n      setTimeout(() => {\n        helper.refreshUserImage(userId, padId);\n      }, 2200);\n      // sync profile section to up\n    };\n\n    const nextHandler = (currentFs, nextFs) => {\n      if (animating) return false;\n\n      const currentSection = currentFs.attr('data-section');\n      localStorage.setItem('formStatus', currentSection);\n      if (currentSection === 'name') {\n        if ($('#ep_profile_modalForm_name').val() === '') {\n          $('#ep_profile_modalForm_name').css({border: '1px solid red'});\n          return false;\n        }\n        const username = $('#ep_profile_modalForm_name').val();\n        $('#ep_profile_modalForm_name').css({border: '0px solid gray'});\n        // submit username once user input and press next\n        helper.userLogin({\n          username,\n        });\n        shared.loginByEmailAndUsernameWithoutValidation(username, '', false);\n      }\n      if (currentSection === 'email') {\n        const userEmail = $('#ep_profile_modalForm_email').val();\n        if (!shared.isEmail(userEmail) || userEmail === '') {\n          $('#ep_profile_modalForm_email').css({border: '1px solid red'});\n          return false;\n        }\n        const username = $('#ep_profile_modalForm_name').val();\n        shared.loginByEmailAndUsernameWithoutValidation(\n            username,\n            userEmail,\n            true\n        );\n        sendEmailVerification(userEmail, username);\n        $('#ep_profile_modalForm_email').css({border: '0px solid gray'});\n      }\n\n      if (currentSection === 'homepage') {\n        const userLink = $('#ep_profile_modal_homepage').val();\n        // console.log(shared.IsValid(userLink));\n        if (!shared.isValid(userLink) || userLink === '') {\n          $('#ep_profile_modal_homepage').css({border: '1px solid red'});\n          return false;\n        }\n        $('#ep_profile_modal_homepage').css({border: '0px solid gray'});\n        sendFormDataToServer();\n      }\n      // if (currentSection === 'push') {\n      //   helper.checkNotificationPermission();\n      // }\n\n      if (currentSection === 'push') {\n        $('#ep_profile_modalForm_push').val(true);\n        $('#ep_profile_modalForm_push').attr('checked', 'checked');\n        $('#ep_profile_modal_push').val('Yes');\n        sendFormDataToServer();\n      }\n\n      // if (currentSection == 'image') {\n      //   uploadImg();\n      // }\n\n      animating = true;\n      currentFs.hide();\n      if (nextFs.length) {\n        nextFs.show();\n\n        // focus handling\n        const nextSelection = nextFs.attr('data-section');\n        if (nextSelection === 'email') {\n          $('#ep_profile_modalForm_email').focus().select();\n        }\n        if (nextSelection === 'homepage') {\n          $('#ep_profile_modal_homepage').focus().select();\n        }\n        if (nextSelection === 'bio') {\n          $('#ep_profile_modalForm_about_yourself').focus().select();\n        }\n      } else {\n        // seems last fieldset\n        submitHandle();\n      }\n      animating = false;\n    };\n\n    $('#ep_profile_formModal_msform fieldset').on('keypress', (e) => {\n      if (e.keyCode === 13) {\n        // Cancel the default action on keypress event\n        e.preventDefault();\n        $(e.target).parent().find('.next').click();\n      }\n    });\n    $('.next').click(function () {\n      currentFs = $(this).parent();\n      nextFs = $(this).parent().next();\n      nextHandler(currentFs, nextFs);\n    });\n\n    $('.submit').click(() => {\n      submitHandle();\n      return false;\n    });\n    // upload image profile\n    $('#profile_file_modal').on('change', (e) => {\n      const files = $('#profile_file_modal')[0].files[0];\n\n      const url = URL.createObjectURL(files);\n      $('#profile_modal_selected_image').css({\n        'background-position': '50% 50%',\n        'background-image': `url(${url})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '64px',\n      });\n    });\n  };\n\n  return {\n    showModal,\n    hideFormModalOverlay,\n    handleOnCloseOverlay,\n    resetModal,\n    getFormData,\n    initModal,\n    allEventListener,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n// var shared = require('../shared');\n\nconst usersProfileSection = (() => {\n  const initiate = (clientVars) => {\n    const modal = $('#ep_profile_users_profile_script').tmpl(clientVars);\n    $('body').append(modal);\n    // $('#ep_profile_users_profile').addClass('ep_profile_formModal_show')\n  };\n\n  const initiateListeners = () => {\n    const avatarListerner = (userId) => {\n      const padId = pad.getPadId();\n      $.ajax({\n        url: `/static/${padId}/pluginfw/ep_profile_modal/getUserInfo/${userId}`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          const imageUrl =\n            '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n          $('#ep_profile_users_profile_userImage').css({\n            'background-position': '50% 50%',\n            'background-image': `url(${imageUrl})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n          // $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n          $('#ep_profile_user_img').css({\n            'background-position': '50% 50%',\n            'background-image': `url(${imageUrl})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n          $('#ep_profile_users_profile_name').text('');\n          $('#ep_profile_users_profile_desc').text('');\n\n          $('#ep_profile_users_profile').addClass('ep_profile_formModal_show');\n          shared.showGeneralOverlay();\n        },\n        error: (xhr) => {\n          // if error occured\n          $('#ep_profile_users_profile').removeClass(\n              'ep_profile_formModal_show'\n          );\n          shared.hideGeneralOverlay();\n        },\n        success: (response) => {\n          const imageUrl =\n          `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n          let username = response.user.username;\n          if (username == null || username === '') {\n            username = 'Anonymous';\n          }\n          const about = response.user.about || '';\n          const homepage = response.user.homepage || '';\n\n          $('#ep_profile_users_profile_name').text(username);\n          $('#ep_profile_users_profile_desc').text(about);\n          if (homepage === '') {\n            $('#ep_profile_users_profile_homepage').hide();\n          } else {\n            $('#ep_profile_users_profile_homepage').attr({\n              href: shared.getValidUrl(homepage),\n              target: '_blank',\n            });\n          }\n\n          $('#ep_profile_users_profile_userImage').css({\n            'background-position': '50% 50%',\n            'background-image': `url(${imageUrl})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n          $('#ep_profile_user_img').css({\n            'background-position': '50% 50%',\n            'background-image': `url(${imageUrl})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '69px',\n          });\n        },\n      });\n    };\n\n    $('#usersIconList').on('avatarClick', (e, userIdParam) => {\n      // coming from external plugins\n      if (!userIdParam || userIdParam.indexOf('a.') < 0) return;\n      avatarListerner(userIdParam);\n    });\n\n    $('#usersIconList').on('click', '.avatar', function () {\n      const userId = $(this).attr('data-userId');\n      avatarListerner(userId);\n    });\n\n    $('#ep_profile_users_profile_close').on('click', () => {\n      $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n      shared.hideGeneralOverlay();\n    });\n  };\n\n  return {\n    initiate,\n    initiateListeners,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\nconst postAceInit = (() => {\n  const __LOGOUT = '1';\n  const postAceInit = (hook, context) => {\n    usersProfileSection.initiateListeners();\n\n    $('#ep_profile_modalForm_push').on('change', (e) => {\n      const elem = $('#ep_profile_modalForm_push');\n      const checked = elem.is(':checked');\n      elem.attr('checked', checked);\n      elem.val(checked);\n    });\n\n    $('#ep_profile_modal_save').on('click', () => {\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      const username = $('#ep_profile_modal-username');\n      // validations\n      if (username.val() === '') {\n        username.css({border: '1px solid red'});\n        return false;\n      }\n      username.css({border: '0'});\n      // validations\n\n      const $form = $('#ep_profile_modal_one');\n      const data = shared.getFormData($form);\n\n\n      // send to ep_push_notification\n      if (data.ep_profile_modalForm_push) {\n        const event = new CustomEvent('ep_push_notification',\n            {detail: {eventName: 'checkPermission'}});\n        // Dispatch/Trigger/Fire the event\n        window.dispatchEvent(event);\n      }\n\n\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_info',\n        userId,\n        data,\n        padId,\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      pad.collabClient.updateUserInfo({\n        userId: padId,\n        name: username.val(),\n        colorId: '#b4b39a',\n      });\n\n      if (window.userStatus === 'login') {\n        if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n          $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n          shared.hideGeneralOverlay();\n        } else {\n          $('#ep_profile_modal').addClass('ep_profile_modal-show');\n\n          $('#online_ep_profile_modal_status').show();\n          $('#offline_ep_profile_modal_status').hide();\n\n          shared.showGeneralOverlay();\n        }\n      }\n    });\n\n    $('#userlist_count').on('click', () => {\n      const page = $('#ep_profile_modal_user_list').attr('data-page') || 1;\n      const pageLoaded =\n        $('#ep_profile_modal_user_list').attr('data-pageLoaded') || false;\n      const onlineListSelector = $('#ep_profile_user_list_container');\n\n      if (pageLoaded !== 'true') {\n        $.ajax({\n          url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/getContributors/${page}/`,\n          type: 'get',\n          data: {},\n          contentType: false,\n          processData: false,\n          beforeSend: () => {\n            // setting a timeout\n            // $('#contributorsLoading').show();\n            $('#ep_profile_user_list_container').css({display: 'none'});\n            $('#ep_profile_modal_load_more_contributors').css({\n              display: 'none',\n            });\n            onlineListSelector.css({display: 'none'});\n          },\n          error: (xhr) => {\n            // if error occured\n            $('#contributorsLoading').css({display: 'none'});\n            onlineListSelector.css({display: 'block'});\n          },\n          success: (response) => {\n            onlineListSelector.css({display: 'block'});\n            $('#contributorsLoading').css({display: 'none'});\n            $('#ep_profile_user_list_container').css({display: 'block'});\n            $('#ep_profile_modal_user_list').attr('data-pageLoaded', 'true');\n            const onlineUsers = pad.collabClient.getConnectedUsers();\n            contributors.manageOnlineOfflineUsers(\n                response.data,\n                onlineUsers,\n                pad.getUserId(),\n                response.lastPage\n            );\n          },\n        });\n      }\n    });\n\n    $('#ep_profile_modal_load_more_contributors').on('click', () => {\n      let page = $('#ep_profile_modal_user_list').attr('data-page') || 1;\n      page++;\n      $.ajax({\n        url: `/static/${pad.getPadId()}/pluginfw/ep_profile_modal/getContributors/${page}/`,\n        type: 'get',\n        data: {},\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          // setting a timeout\n          $('#loadMoreLoading').show();\n          $('#ep_profile_modal_load_more_contributors').css({\n            display: 'none',\n          });\n        },\n        error: (xhr) => {\n          // if error occured\n          $('#loadMoreLoading').hide();\n          $('#ep_profile_modal_load_more_contributors').css({\n            display: 'block',\n          });\n        },\n        success: (response) => {\n          $('#ep_profile_modal_load_more_contributors').css({\n            display: 'block',\n          });\n          $('#loadMoreLoading').hide();\n          $('#ep_profile_modal_user_list').attr('data-page', page);\n          const onlineUsers = pad.collabClient.getConnectedUsers();\n          contributors.manageOnlineOfflineUsers(\n              response.data,\n              onlineUsers,\n              pad.getUserId(),\n              response.lastPage\n          );\n        },\n      });\n    });\n\n    $('#userlist_count,#ep_profile_modal_user_list_close').on('click', () => {\n      if ($('#ep_profile_modal_user_list').hasClass('ep_profile_modal-show')) {\n        $('#ep_profile_modal_user_list').removeClass('ep_profile_modal-show');\n        shared.hideGeneralOverlay();\n      } else {\n        shared.showGeneralOverlay();\n        $('#ep_profile_modal_user_list').addClass('ep_profile_modal-show');\n      }\n    });\n\n    $('#ep_profile_modal_verification').on('click', function () {\n      const verificationStatus = $(this).attr('data-verification-status');\n      const oldText = $(this).text();\n      if (verificationStatus !== 'true') {\n        $.ajax({\n          url: `/static/${pad.getPadId()\n          }/pluginfw/ep_profile_modal/sendVerificationEmail/${pad.getUserId()}/null/null`,\n          type: 'get',\n          data: {},\n          contentType: false,\n          processData: false,\n          beforeSend: () => {\n            // setting a timeout\n            $('#ep_profile_modal_verification').text('Sending...');\n          },\n          error: (xhr) => {\n            // if error occured\n            $('#ep_profile_modal_verification').text('Error');\n            setTimeout(() => {\n              $('#ep_profile_modal_verification').text(oldText);\n            }, 2000);\n          },\n          success: (response) => {\n            $('#ep_profile_modal_verification').text(\n                'Verification email has been sent.'\n            );\n            $('#ep_profile_modal_verification').attr(\n                'data-verification-status',\n                'true'\n            );\n          },\n        });\n      }\n      return false;\n    });\n    $('#ep_profile_modal_share').on('click', () => {\n      const dummy = document.createElement('input');\n      const text = window.location.href;\n\n      document.body.appendChild(dummy);\n      dummy.value = text;\n      dummy.select();\n      document.execCommand('copy');\n      document.body.removeChild(dummy);\n      $.gritter.add({\n        text: 'Link copied to clipboard',\n      });\n    });\n\n    $('#ep-profile-button').on('click', () => {\n      if (window.userStatus === 'login') {\n        if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n          $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n        } else {\n          $('#ep_profile_modal').addClass('ep_profile_modal-show');\n          $('#online_ep_profile_modal_status').show();\n          $('#offline_ep_profile_modal_status').hide();\n          shared.showGeneralOverlay();\n        }\n      } else {\n        profileForm.resetModal();\n        profileForm.showModal();\n      }\n    });\n\n    $('#ep_profile_modal_close').on('click', () => {\n      if ($('#ep_profile_modal').hasClass('ep_profile_modal-show')) {\n        $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n        shared.hideGeneralOverlay();\n      } else {\n        shared.showGeneralOverlay();\n        $('#ep_profile_modal').addClass('ep_profile_modal-show');\n      }\n    });\n    $('#ep_profile_modal_close_ask').on('click', () => {\n      $('#ep_profile_modal_ask').hasClass('ep_profile_modal-show')\n        ? $('#ep_profile_modal_ask').removeClass('ep_profile_modal-show')\n        : $('#ep_profile_modal_ask').addClass('ep_profile_modal-show');\n    });\n\n    $('#ep_profile_modal_signout').on('click', () => {\n      profileForm.resetModal();\n\n      const userId = pad.getUserId();\n      const padId = pad.getPadId();\n      localStorage.setItem('formStatus', '');\n      clientVars.ep_profile_modal.userStatus = __LOGOUT;\n\n      window.userStatus = 'out';\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_logout',\n        email: $('#ep_profile_hidden_email').val(),\n        userId,\n        padId,\n      };\n      clientVars.ep_profile_modal.userStatus = __LOGOUT;\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n      $('#online_ep_profile_modal_status').hide();\n      $('#offline_ep_profile_modal_status').show();\n      syncData.resetProfileModalFields();\n      shared.hideGeneralOverlay();\n      $(`.avatar[data-id=\"user_${userId}\"]`).attr({style: ''});\n      helper.userLogout();\n    });\n\n    // upload image profile\n    $('#profile_file').on('change', (e) => {\n      const userId = pad.getUserId();\n      const fd = new FormData();\n      const files = $('#profile_file')[0].files[0];\n      fd.append('file', files);\n      if (!files) return;\n      $.ajax({\n        url: `/static/${clientVars.padId}/pluginfw/ep_profile_modal/upload/${userId}`,\n        type: 'post',\n        data: fd,\n        contentType: false,\n        processData: false,\n        beforeSend: () => {\n          // setting a timeout\n          helper.refreshLoadingImage(userId, clientVars.padId);\n        },\n        error: (xhr) => {\n          // if error occured\n          helper.refreshUserImage(userId, clientVars.padId);\n        },\n        success: (response) => {\n          helper.refreshUserImage(userId, clientVars.padId);\n        },\n      });\n    });\n\n    $('#ep_profile_modal_submit').on('click', () => {\n      const username = $('#ep_profile_modal_username').val();\n      const email = $('#ep_profile_modal_email').val();\n\n      shared.loginByEmailAndUsername(username, email);\n    });\n\n    $('#ep_profile_modal_login').on('click', () => {\n      const username = $('#ep_profile_modal-username').val();\n      const email = $('#ep_profile_modal-email').val();\n\n      shared.loginByEmailAndUsername(username, email);\n      $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n    });\n\n    $('#ep_profile_general_overlay').on('click', () => {\n      shared.hideGeneralOverlay();\n    });\n\n    return [];\n  };\n  return postAceInit;\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\nconst aceInitialized = (() => {\n  const aceInitialized = (hook, context) => {\n    const bindEvent = (element, eventName, eventHandler) => {\n      if (element.addEventListener) {\n        element.addEventListener(eventName, eventHandler, false);\n      } else if (element.attachEvent) {\n        element.attachEvent(`on${eventName}`, eventHandler);\n      }\n    };\n\n    bindEvent(window, 'message', (e) => {\n      const eventName = e.data.eventName;\n      const data = e.data.data;\n\n      if (eventName === 'showEtherpadModal') {\n        profileForm.showModal();\n      }\n      if (eventName === 'showProfileDetailModal') {\n        $('#usersIconList').trigger('avatarClick', data.userId);\n      }\n    });\n\n    const userId = pad.getUserId();\n    // if (!window.matchMedia('(max-width: 720px)').matches) {\n    profileForm.initModal(clientVars);\n    // if (clientVars.ep_profile_modal.form_passed !== true) {\n    //   profileForm.showModal();\n    // }\n    if (localStorage.getItem('formPassed') !== 'yes') profileForm.allEventListener();\n    //   profileForm.showModal();\n\n    // / user profile section\n    usersProfileSection.initiate(clientVars);\n    // / user profile section\n\n    let modal = $('#ep_profile_modal_script').tmpl(clientVars);\n    $('body').append(modal);\n    // /\n    modal = $('#ep_profile_modal_user_list_script').tmpl(clientVars);\n    $('body').append(modal);\n    // /general\n    modal = $('#ep_profile_modal_general_script').tmpl();\n    $('body').append(modal);\n    // template generate\n\n    const style = `\n      background : url(/static/getUserProfileImage/${userId}/${clientVars.padId}) no-repeat 50% 50%;\n      background-size :32px\n    `;\n\n    const onlineUsers = pad.collabClient.getConnectedUsers();\n    const usersListHTML = contributors.createHTMLforUserList(\n        clientVars.ep_profile_modal.contributed_authors_count,\n        onlineUsers,\n        clientVars.padId,\n        clientVars.ep_profile_modal.verified\n    );\n\n    if (!$('body').hasClass('mobileView')) {\n      if ($('#pad_title').length === 0) {\n        $('body').prepend(`\n          <div id='pad_title'>\n            <div class=\"title_container\">\n              <span contenteditable style=\"color:#000\" id='title'>Loading...</span>\n            </div>\n            <button id='save_title'></button>\n          </div>\n        `);\n      }\n      $('#pad_title').append(`\n        <div class='ep_profile_modal_header'>\n          <div class='userlist' id='userlist'>\n          ${usersListHTML}\n          </div>\n          <div class='ep-profile-button' id='ep-profile-button'>\n          <div id='ep-profile-image' style='${style}' /></div>\n        </div>\n      `);\n    }\n\n    if (clientVars.ep_profile_modal.userStatus === '2') {\n      window.userStatus = 'login';\n    } else {\n      window.userStatus = 'out';\n    }\n    // We were telling to server that we\n    // are ready to get data that due to large data\n    // need to be request base over HTTP + just for analytics\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_ready',\n      userId,\n      padId: clientVars.padId,\n      data: clientVars.ep_profile_modal,\n    };\n\n    pad.collabClient.sendMessage(message);\n\n    if (clientVars.ep_profile_modal.userName === 'Anonymous') {\n      pad.collabClient.updateUserInfo({\n        userId,\n        name: 'Anonymous',\n        colorId: '#b4b39a',\n      });\n    }\n\n    return [];\n  };\n\n  return aceInitialized;\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\nconst handleClientMessage = (() => {\n  const handleClientMessage_USER_NEWINFO = (hook, context) => {\n    const padId = pad.getPadId();\n\n    contributors.increaseUserFromList(context.payload.userId, padId);\n    return [];\n  };\n  const handleClientMessage_USER_LEAVE = (hook, context) => {\n    const padId = pad.getPadId();\n\n    contributors.decreaseUserFromList(context.payload.userId, padId);\n    return [];\n  };\n  const handleClientMessage_CUSTOM = (hook, context, cb) => {\n    const currentUserId = pad.getUserId();\n\n    if (context.payload.action === 'totalUserHasBeenChanged') {\n      const totalUserCount = context.payload.totalUserCount;\n      $('#userlist_count').text(totalUserCount);\n    }\n\n    if (context.payload.action === 'EP_PROFILE_USER_IMAGE_CHANGE') {\n      // when user A change image and user B want to know\n      helper.refreshGeneralImage(context.payload.userId, context.payload.padId);\n    }\n\n    if (context.payload.action === 'EP_PROFILE_USER_LOGOUT_UPDATE') {\n      const imageUrl = `/static/getUserProfileImage/${context.payload.userId}/${\n        context.payload.padId\n      }?t=${new Date().getTime()}`;\n\n      if (currentUserId === context.payload.userId) {\n        helper.refreshUserImage(currentUserId, context.payload.padId);\n        helper.logoutCssFix(currentUserId);\n      } else {\n        helper.refreshGeneralImage(\n            context.payload.userId,\n            context.payload.padId\n        );\n      }\n\n      syncData.resetGeneralFields(context.payload.userId);\n\n      // making user as anonymous\n      const onlineAnonymousSelector = contributors.isThereOnlineAnonymous();\n      if (onlineAnonymousSelector) {\n        contributors.increaseToOnlineAnonymous(\n            onlineAnonymousSelector,\n            context.payload.userId\n        );\n      } else {\n        contributors.createOnlineAnonymousElement(\n            context.payload.userId,\n            'Anonymous',\n            imageUrl,\n            {}\n        );\n      }\n\n      contributors.removeUserElementInUserList(context.payload.userId);\n    }\n\n    if (context.payload.action === 'EP_PROFILE_USER_LOGIN_UPDATE') {\n      // ///////////////// related to user list when user has been loginned\n      const onlineAnonymousSelector = contributors.isThereOnlineAnonymous();\n      if (context.payload.userName === 'Anonymous') {\n        if (onlineAnonymousSelector) {\n          contributors.increaseToOnlineAnonymous(\n              onlineAnonymousSelector,\n              context.payload.userId\n          );\n        } else {\n          contributors.createOnlineAnonymousElement(\n              context.payload.userId,\n              context.payload.userName,\n              context.payload.img,\n              context.payload.user\n          );\n        }\n\n        contributors.removeUserElementInUserList(context.payload.userId);\n      } else {\n        if (onlineAnonymousSelector) {\n          if (\n            contributors.checkUserExistInOnlineAnonymous(\n                onlineAnonymousSelector,\n                context.payload.userId\n            )\n          ) {\n            contributors.decreaseFromOnlineAnonymous(\n                onlineAnonymousSelector,\n                context.payload.userId\n            );\n          }\n        }\n        contributors.createOnlineUserElementInUserList(\n            context.payload.userId,\n            context.payload.userName,\n            context.payload.img,\n            currentUserId,\n            context.payload.user\n        );\n      }\n\n      // change owner loginned img at top of page\n      if (currentUserId === context.payload.userId) {\n        helper.refreshUserImage(currentUserId, context.payload.padId);\n        syncData.syncAllFormsData(context.payload.userId, context.payload.user);\n\n        // $(\"#ep_profile_modal_section_info_name\").text(context.payload.userName);\n      } else {\n        helper.refreshGeneralImage(\n            context.payload.userId,\n            context.payload.padId\n        );\n        syncData.syncGeneralFormsData(\n            context.payload.userId,\n            context.payload.user\n        );\n      }\n    }\n\n    return [];\n  };\n  return {\n    handleClientMessage_USER_NEWINFO,\n    handleClientMessage_USER_LEAVE,\n    handleClientMessage_CUSTOM,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\nconst __LOGIN = '2';\nconst __LOGOUT = '1';\n\nconst helper = (() => {\n  // const checkNotificationPermission = () => {\n  //   if (!('Notification' in window)) {\n  //     $.gritter.add({\n  //       title: 'Error',\n  //       text: 'ep_profile_modal: This browser does not support desktop notification.',\n  //       sticky: true,\n  //       // eslint-disable-next-line camelcase\n  //       class_name: 'error',\n  //     });\n  //   } else if (!['denied', 'granted'].includes(Notification.permission)) {\n  //     Notification.requestPermission().then((permission) => {\n  //       console.log(permission, '<= permission');\n  //     });\n  //   }\n  // };\n\n  const userLogin = (data) => {\n    window.userStatus = 'login';\n    clientVars.ep_profile_modal.userStatus = __LOGIN;\n\n    pad.collabClient.updateUserInfo({\n      userId: pad.getUserId(),\n      name: data.username,\n      colorId: '#b4b39a',\n    });\n  };\n  const userLogout = () => {\n    window.userStatus = 'logout';\n    clientVars.ep_profile_modal.userStatus = __LOGOUT;\n\n    pad.collabClient.updateUserInfo({\n      userId: pad.getUserId(),\n      name: 'Anonymous',\n      colorId: '#b4b39a',\n    });\n  };\n  const logoutCssFix = (userId) => {\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({'margin': '0px', 'box-shadow': 'none'});\n    }\n  };\n  const refreshUserImage = (userId, padId) => {\n    const imageUrl = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    $('.ep_profile_modal_section_image_big_ask').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n    });\n    $('.ep_profile_modal_section_image_big').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '72px',\n    });\n    $('#ep-profile-image').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '32px',\n    });\n\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      userSelector.children('.ep_profile_user_img').css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '69px',\n      });\n    }\n\n    const rocketChatOnlineUser = $(`.avatar[data-id=\"${userId}\"]`);\n    if (rocketChatOnlineUser.length) {\n      rocketChatOnlineUser\n          .children('.ep_rocketchat_onlineUsersList_avatarImg')\n          .css({\n            'background-position': '50% 50%',\n            'background-image': `url(${imageUrl})`,\n            'background-repeat': 'no-repeat',\n            'background-size': '28px',\n          });\n    }\n  };\n\n  const refreshLoadingImage = (userId, padId) => {\n    const imageUrl =\n      '../static/plugins/ep_profile_modal/static/dist/img/loading.gif';\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    $('.ep_profile_modal_section_image_big_ask').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n    });\n    $('.ep_profile_modal_section_image_big').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '72px',\n    });\n    $('#ep-profile-image').css({\n      'background-position': '50% 50%',\n      'background-image': `url(${imageUrl})`,\n      'background-repeat': 'no-repeat',\n      'background-size': '32px',\n    });\n\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      userSelector.children('.ep_profile_user_img').css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '69px',\n      });\n    }\n  };\n\n  const refreshGeneralImage = (userId, padId) => {\n    const imageUrl = `/static/getUserProfileImage/${userId}/${padId}?t=${new Date().getTime()}`;\n    const avatar = $(`.avatarImg[data-id=\"user_${userId}\"]`);\n    if (avatar.length) {\n      avatar.css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '28px',\n        'background-color': '#fff',\n      });\n    }\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      userSelector.children('.ep_profile_user_img').css({\n        'background-position': '50% 50%',\n        'background-image': `url(${imageUrl})`,\n        'background-repeat': 'no-repeat',\n        'background-size': '69px',\n      });\n    }\n  };\n\n  return {\n    userLogin,\n    userLogout,\n    logoutCssFix,\n    refreshUserImage,\n    refreshLoadingImage,\n    refreshGeneralImage,\n    // checkNotificationPermission,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-useless-escape */\n'use strict';\n\n// const __LOGIN = '2';\n// var helper = require('./helper');\n\nconst shared = (() => {\n  const resetAllProfileImage = (userId, padId) => {\n    $.ajax({\n      url: `/static/${padId}/pluginfw/ep_profile_modal/resetProfileImage/${userId}`,\n      type: 'get',\n      data: {},\n      contentType: false,\n      processData: false,\n      beforeSend: () => {\n        helper.refreshLoadingImage(userId, padId);\n      },\n      error: (xhr) => {\n        // if error occured\n        helper.refreshUserImage(userId, padId);\n      },\n      success: (response) => {\n        helper.refreshUserImage(userId, padId);\n      },\n    });\n  };\n  const sendSignOutMessage = (userId, padId) => {\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_send_signout_message',\n      userId,\n      padId,\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const scrollDownToLastChatText = (selector) => {\n    const $element = $(selector);\n    if ($element.length <= 0 || !$element[0]) return true;\n    $element.animate(\n        {scrollTop: $element[0].scrollHeight},\n        {duration: 400, queue: false}\n    );\n  };\n  const addTextChatMessage = (msg) => {\n    const authorClass = `author-${msg.userId.replace(/[^a-y0-9]/g, (c) => {\n      if (c === '.') return '-';\n      return `z${c.charCodeAt(0)}z`;\n    })}`;\n\n    // create the time string\n    let minutes = `${new Date(msg.time).getMinutes()}`;\n    let hours = `${new Date(msg.time).getHours()}`;\n    if (minutes.length === 1) minutes = `0${minutes}`;\n    if (hours.length === 1) hours = `0${hours}`;\n    const timeStr = `${hours}:${minutes}`;\n\n    const html = `<p><span class='time ${authorClass}'>${timeStr}</span> ${msg.text}</p>`;\n\n    $(document).find('#chatbox #chattext').append(html);\n    scrollDownToLastChatText('#chatbox #chattext');\n  };\n\n  const loginByEmailAndUsernameWithoutValidation = (\n      username,\n      email,\n      suggestData\n  ) => {\n    clientVars.ep_profile_modal.userStatus = __LOGIN;\n\n    window.userStatus = 'login';\n    const message = {\n      type: 'ep_profile_modal',\n      action: 'ep_profile_modal_login',\n      email,\n      userId: pad.getUserId(),\n      name: username,\n      padId: pad.getPadId(),\n      suggestData,\n    };\n    pad.collabClient.sendMessage(message); // Send the chat position message to the server\n  };\n  const isEmail = (email) => {\n    const regex =\n      /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (email === '') {\n      return true;\n    } else {\n      return regex.test(email);\n    }\n  };\n\n  const loginByEmailAndUsername = (username, email) => {\n    if (username === '' || !isEmail(email)) {\n      if (!isEmail(email)) {\n        $('#ep_profile_modal_email').focus();\n        $('#ep_profile_modal_email').addClass(\n            'ep_profile_modal_validation_error'\n        );\n      }\n      return false;\n    } else {\n      $('#ep_profile_modal_email').removeClass(\n          'ep_profile_modal_validation_error'\n      );\n      clientVars.ep_profile_modal.userStatus = __LOGIN;\n\n      window.userStatus = 'login';\n      const message = {\n        type: 'ep_profile_modal',\n        action: 'ep_profile_modal_login',\n        email,\n        userId: pad.getUserId(),\n        name: username,\n        padId: pad.getPadId(),\n        suggestData: false,\n      };\n      pad.collabClient.sendMessage(message); // Send the chat position message to the server\n      helper.userLogin({\n        email,\n        username,\n      });\n\n      $('#online_ep_profile_modal_status').show();\n      $('#offline_ep_profile_modal_status').hide();\n    }\n  };\n\n  const isValid = (url) => {\n    const pattern =\n    // eslint-disable-next-line max-len\n      /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n    return pattern.test(url);\n  };\n\n  const getFormData = ($form) => {\n    const unindexedArray = $form.serializeArray();\n    const indexedArray = {};\n\n    $.map(unindexedArray, (n, i) => {\n      indexedArray[n.name] = n.value;\n    });\n\n    return indexedArray;\n  };\n  const setFormData = ($form, indexedArray) => {\n    $.map(indexedArray, (n, i) => {\n      $(`#${i}`).val(n);\n    });\n  };\n\n  const isUsername = (username) => {\n    const regex = /^([a-zA-Z0-9_.+-])/;\n    return regex.test(username);\n  };\n  const showGeneralOverlay = () => {\n    $('#ep_profile_general_overlay').addClass(\n        'ep_profile_formModal_overlay_show'\n    );\n    $('#ep_profile_general_overlay').css({display: 'block'});\n  };\n\n  const hideGeneralOverlay = () => {\n    $('#ep_profile_general_overlay').removeClass(\n        'ep_profile_formModal_overlay_show'\n    );\n    $('#ep_profile_general_overlay').css({display: 'none'});\n    $('#ep_profile_modal').removeClass('ep_profile_modal-show');\n    $('#ep_profile_modal_user_list').removeClass('ep_profile_modal-show');\n    $('#ep_profile_users_profile').removeClass('ep_profile_formModal_show');\n  };\n\n  const getValidUrl = (url) => {\n    if (url === '' || !url) return '';\n    let newUrl = window.decodeURIComponent(url);\n    newUrl = newUrl.trim().replace(/\\s/g, '');\n\n    if (/^(:\\/\\/)/.test(newUrl)) {\n      return `http${newUrl}`;\n    }\n    if (!/^(f|ht)tps?:\\/\\//i.test(newUrl)) {\n      return `http://${newUrl}`;\n    }\n\n    return newUrl;\n  };\n\n  const getMonthName = (monthNumber) => {\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n    return months[monthNumber - 1];\n  };\n  const getCustomeFormatDate = (date) => {\n    if (date === 'today' || date === 'yesterday') return `Last seen ${date}`;\n    date = date.split('-');\n    return `Last seen ${date[2]} ${getMonthName(date[1])} ${date[0]}`;\n  };\n  const getCustomDate = (date) => {\n    console.log(date, 'date');\n    if (date === 'today' || date === 'yesterday') return `Last seen ${date}`;\n    date = date.split('-');\n    return `Last seen ${date[2]}/${date[1]}/${date[0]}`;\n  };\n\n  return {\n    resetAllProfileImage,\n    sendSignOutMessage,\n    addTextChatMessage,\n    scrollDownToLastChatText,\n    loginByEmailAndUsernameWithoutValidation,\n    loginByEmailAndUsername,\n    isEmail,\n    isValid,\n    getFormData,\n    setFormData,\n    isUsername,\n    showGeneralOverlay,\n    hideGeneralOverlay,\n    getValidUrl,\n    getMonthName,\n    getCustomeFormatDate,\n    getCustomDate,\n  };\n})();\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-unused-vars */\n'use strict';\n\n// var shared = require('./shared');\n\nconst syncData = (() => {\n  const syncAllFormsData = (userId, data) => {\n    if (data === undefined) return;\n    // users List\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      const usernameBox = userSelector\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_username');\n      usernameBox\n          .children('.ep_profile_user_list_username_text')\n          .text(data.username);\n\n      userSelector\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_profile_desc')\n          .text(data.about);\n      if (data.homepage) {\n        const homepageElem = usernameBox.children(\n            '.ep_profile_contributor_link_container'\n        );\n        homepageElem.attr({href: shared.getValidUrl(data.homepage)});\n      }\n      usernameBox.children('.ep_profile_contributor_status').text('Online');\n    }\n    $('#ep_profile_modal-username').val(data.username);\n    $('#ep_profile_modal-about').val(data.about);\n    $('#ep_profile_modal-homepage').val(data.homepage);\n    $('#ep_profile_modal-email').val(data.email);\n    if (data.verified === true) {\n      $('#ep_profile_modal_verification').attr(\n          'data-verification-status',\n          'true'\n      );\n      $('#ep_profile_modal_verification').text('Verified');\n    } else {\n      $('#ep_profile_modal_verification').attr(\n          'data-verification-status',\n          'false'\n      );\n      $('#ep_profile_modal_verification').text('Send verification email');\n    }\n    // if(data.push_notification == false)\n    //     $(\"#ep_profile_modal_push_notification\").attr('checked','')\n    // else\n    //     $(\"#ep_profile_modal_push_notification\").attr('checked','checked')\n\n    // profile modal\n  };\n  const syncGeneralFormsData = (userId, data) => {\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      const usernameBox = userSelector\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_username');\n      usernameBox\n          .children('.ep_profile_user_list_username_text')\n          .text(data.username);\n\n      userSelector\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_profile_desc')\n          .text(data.about);\n\n      const homepageElem = usernameBox.children(\n          '.ep_profile_contributor_link_container'\n      );\n      homepageElem.attr({href: shared.getValidUrl(data.homepage)});\n\n      usernameBox.children('.ep_profile_contributor_status').text('Online');\n    }\n  };\n\n  const resetProfileModalFields = () => {\n    $('#ep_profile_modal-username').val('');\n    $('#ep_profile_modal-about').val('');\n    $('#ep_profile_modal-homepage').val('');\n    $('#ep_profile_modal-email').val('');\n\n    $('#ep_profile_modalForm_name').val('');\n    $('#ep_profile_modalForm_email').val('');\n    $('#ep_profile_modal_homepage').val('');\n    $('#ep_profile_modalForm_about_yourself').val('');\n  };\n  const resetGeneralFields = (userId) => {\n    const userSelector = $(\n        `.ep_profile_user_row[data-id=\"user_list_${userId}\"]`\n    );\n    if (userSelector.length) {\n      const usernameBox = userSelector\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_username');\n      usernameBox.children('.ep_profile_user_list_username_text').text('');\n      userSelector\n          .children('.ep_profile_user_list_profile_userDesc')\n          .children('.ep_profile_user_list_profile_desc')\n          .text('');\n      const homepageElem = usernameBox.children(\n          '.ep_profile_contributor_link_container'\n      );\n      homepageElem.attr({href: ''});\n      usernameBox.children('.ep_profile_contributor_status').text('');\n    }\n  };\n\n  return {\n    syncAllFormsData,\n    syncGeneralFormsData,\n    resetProfileModalFields,\n    resetGeneralFields,\n  };\n})();\n"]}